{"message":"unused import: `end`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/parser/block.rs","byte_start":80,"byte_end":83,"line_start":3,"line_end":3,"column_start":19,"column_end":22,"is_primary":true,"text":[{"text":"use super::util::{end, newline, space, to};","highlight_start":19,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/parser/block.rs","byte_start":80,"byte_end":85,"line_start":3,"line_end":3,"column_start":19,"column_end":24,"is_primary":true,"text":[{"text":"use super::util::{end, newline, space, to};","highlight_start":19,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `end`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parser/block.rs:3:19\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse super::util::{end, newline, space, to};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `tab`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/parser/block.rs","byte_start":142,"byte_end":145,"line_start":4,"line_end":4,"column_start":37,"column_end":40,"is_primary":true,"text":[{"text":"use combine::parser::char::{string, tab};","highlight_start":37,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/parser/block.rs","byte_start":140,"byte_end":145,"line_start":4,"line_end":4,"column_start":35,"column_end":40,"is_primary":true,"text":[{"text":"use combine::parser::char::{string, tab};","highlight_start":35,"highlight_end":40}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `tab`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parser/block.rs:4:37\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse combine::parser::char::{string, tab};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"unused import: `repeat_skip_until`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/parser/block.rs","byte_start":178,"byte_end":195,"line_start":5,"line_end":5,"column_start":31,"column_end":48,"is_primary":true,"text":[{"text":"use combine::parser::repeat::{repeat_skip_until, take_until};","highlight_start":31,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/parser/block.rs","byte_start":178,"byte_end":197,"line_start":5,"line_end":5,"column_start":31,"column_end":50,"is_primary":true,"text":[{"text":"use combine::parser::repeat::{repeat_skip_until, take_until};","highlight_start":31,"highlight_end":50}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `repeat_skip_until`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parser/block.rs:5:31\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse combine::parser::repeat::{repeat_skip_until, take_until};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `between`, `look_ahead`, `produce`, `satisfy`, `sep_by1`, `sep_by`, `sep_end_by1`, `sep_end_by`, `value`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/parser/block.rs","byte_start":238,"byte_end":245,"line_start":7,"line_end":7,"column_start":14,"column_end":21,"is_primary":true,"text":[{"text":"    attempt, between, choice, eof, look_ahead, many, many1, optional, produce, satisfy, sep_by,","highlight_start":14,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/parser/block.rs","byte_start":260,"byte_end":270,"line_start":7,"line_end":7,"column_start":36,"column_end":46,"is_primary":true,"text":[{"text":"    attempt, between, choice, eof, look_ahead, many, many1, optional, produce, satisfy, sep_by,","highlight_start":36,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/parser/block.rs","byte_start":295,"byte_end":302,"line_start":7,"line_end":7,"column_start":71,"column_end":78,"is_primary":true,"text":[{"text":"    attempt, between, choice, eof, look_ahead, many, many1, optional, produce, satisfy, sep_by,","highlight_start":71,"highlight_end":78}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/parser/block.rs","byte_start":304,"byte_end":311,"line_start":7,"line_end":7,"column_start":80,"column_end":87,"is_primary":true,"text":[{"text":"    attempt, between, choice, eof, look_ahead, many, many1, optional, produce, satisfy, sep_by,","highlight_start":80,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/parser/block.rs","byte_start":313,"byte_end":319,"line_start":7,"line_end":7,"column_start":89,"column_end":95,"is_primary":true,"text":[{"text":"    attempt, between, choice, eof, look_ahead, many, many1, optional, produce, satisfy, sep_by,","highlight_start":89,"highlight_end":95}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/parser/block.rs","byte_start":325,"byte_end":332,"line_start":8,"line_end":8,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    sep_by1, sep_end_by, sep_end_by1, token, value, EasyParser, Parser, Stream,","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/parser/block.rs","byte_start":334,"byte_end":344,"line_start":8,"line_end":8,"column_start":14,"column_end":24,"is_primary":true,"text":[{"text":"    sep_by1, sep_end_by, sep_end_by1, token, value, EasyParser, Parser, Stream,","highlight_start":14,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/parser/block.rs","byte_start":346,"byte_end":357,"line_start":8,"line_end":8,"column_start":26,"column_end":37,"is_primary":true,"text":[{"text":"    sep_by1, sep_end_by, sep_end_by1, token, value, EasyParser, Parser, Stream,","highlight_start":26,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/parser/block.rs","byte_start":366,"byte_end":371,"line_start":8,"line_end":8,"column_start":46,"column_end":51,"is_primary":true,"text":[{"text":"    sep_by1, sep_end_by, sep_end_by1, token, value, EasyParser, Parser, Stream,","highlight_start":46,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/parser/block.rs","byte_start":236,"byte_end":245,"line_start":7,"line_end":7,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"    attempt, between, choice, eof, look_ahead, many, many1, optional, produce, satisfy, sep_by,","highlight_start":12,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/parser/block.rs","byte_start":258,"byte_end":270,"line_start":7,"line_end":7,"column_start":34,"column_end":46,"is_primary":true,"text":[{"text":"    attempt, between, choice, eof, look_ahead, many, many1, optional, produce, satisfy, sep_by,","highlight_start":34,"highlight_end":46}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/parser/block.rs","byte_start":293,"byte_end":357,"line_start":7,"line_end":8,"column_start":69,"column_end":37,"is_primary":true,"text":[{"text":"    attempt, between, choice, eof, look_ahead, many, many1, optional, produce, satisfy, sep_by,","highlight_start":69,"highlight_end":96},{"text":"    sep_by1, sep_end_by, sep_end_by1, token, value, EasyParser, Parser, Stream,","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/parser/block.rs","byte_start":364,"byte_end":371,"line_start":8,"line_end":8,"column_start":44,"column_end":51,"is_primary":true,"text":[{"text":"    sep_by1, sep_end_by, sep_end_by1, token, value, EasyParser, Parser, Stream,","highlight_start":44,"highlight_end":51}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `between`, `look_ahead`, `produce`, `satisfy`, `sep_by1`, `sep_by`, `sep_end_by1`, `sep_end_by`, `value`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parser/block.rs:7:14\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    attempt, between, choice, eof, look_ahead, many, many1, optional, produce, satisfy, sep_by,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    sep_by1, sep_end_by, sep_end_by1, token, value, EasyParser, Parser, Stream,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"message":"unused import: `to`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/parser/span.rs","byte_start":107,"byte_end":109,"line_start":2,"line_end":2,"column_start":45,"column_end":47,"is_primary":true,"text":[{"text":"use super::util::{devide_space, end, space, to};","highlight_start":45,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/parser/span.rs","byte_start":105,"byte_end":109,"line_start":2,"line_end":2,"column_start":43,"column_end":47,"is_primary":true,"text":[{"text":"use super::util::{devide_space, end, space, to};","highlight_start":43,"highlight_end":47}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `to`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parser/span.rs:2:45\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse super::util::{devide_space, end, space, to};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\n"}
{"message":"unused import: `string_cmp`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/parser/span.rs","byte_start":149,"byte_end":159,"line_start":3,"line_end":3,"column_start":38,"column_end":48,"is_primary":true,"text":[{"text":"use combine::parser::char::{newline, string_cmp};","highlight_start":38,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/parser/span.rs","byte_start":147,"byte_end":159,"line_start":3,"line_end":3,"column_start":36,"column_end":48,"is_primary":true,"text":[{"text":"use combine::parser::char::{newline, string_cmp};","highlight_start":36,"highlight_end":48}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `string_cmp`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parser/span.rs:3:38\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse combine::parser::char::{newline, string_cmp};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `attempt`, `look_ahead`, `not_followed_by`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/parser/span.rs","byte_start":222,"byte_end":229,"line_start":6,"line_end":6,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    attempt, between, choice, eof, look_ahead, many, many1, not_followed_by, satisfy, token,","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/parser/span.rs","byte_start":253,"byte_end":263,"line_start":6,"line_end":6,"column_start":36,"column_end":46,"is_primary":true,"text":[{"text":"    attempt, between, choice, eof, look_ahead, many, many1, not_followed_by, satisfy, token,","highlight_start":36,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/parser/span.rs","byte_start":278,"byte_end":293,"line_start":6,"line_end":6,"column_start":61,"column_end":76,"is_primary":true,"text":[{"text":"    attempt, between, choice, eof, look_ahead, many, many1, not_followed_by, satisfy, token,","highlight_start":61,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/parser/span.rs","byte_start":222,"byte_end":231,"line_start":6,"line_end":6,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    attempt, between, choice, eof, look_ahead, many, many1, not_followed_by, satisfy, token,","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/parser/span.rs","byte_start":251,"byte_end":263,"line_start":6,"line_end":6,"column_start":34,"column_end":46,"is_primary":true,"text":[{"text":"    attempt, between, choice, eof, look_ahead, many, many1, not_followed_by, satisfy, token,","highlight_start":34,"highlight_end":46}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/parser/span.rs","byte_start":276,"byte_end":293,"line_start":6,"line_end":6,"column_start":59,"column_end":76,"is_primary":true,"text":[{"text":"    attempt, between, choice, eof, look_ahead, many, many1, not_followed_by, satisfy, token,","highlight_start":59,"highlight_end":76}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `attempt`, `look_ahead`, `not_followed_by`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parser/span.rs:6:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    attempt, between, choice, eof, look_ahead, many, many1, not_followed_by, satisfy, token,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `attempt`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/parser/util.rs","byte_start":35,"byte_end":42,"line_start":2,"line_end":2,"column_start":15,"column_end":22,"is_primary":true,"text":[{"text":"use combine::{attempt, between, eof, many, skip_many, token, value, EasyParser, Parser, Stream};","highlight_start":15,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/parser/util.rs","byte_start":35,"byte_end":44,"line_start":2,"line_end":2,"column_start":15,"column_end":24,"is_primary":true,"text":[{"text":"use combine::{attempt, between, eof, many, skip_many, token, value, EasyParser, Parser, Stream};","highlight_start":15,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `attempt`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parser/util.rs:2:15\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse combine::{attempt, between, eof, many, skip_many, token, value, EasyParser, Parser, Stream};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"message":"unreachable statement","code":{"code":"unreachable_code","explanation":null},"level":"warning","spans":[{"file_name":"/home/kingfisher/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":1067,"byte_end":1655,"line_start":36,"line_end":48,"column_start":41,"column_end":6,"is_primary":true,"text":[{"text":"    ($left:expr, $right:expr $(,)?) => ({","highlight_start":41,"highlight_end":42},{"text":"        match (&$left, &$right) {","highlight_start":1,"highlight_end":34},{"text":"            (left_val, right_val) => {","highlight_start":1,"highlight_end":39},{"text":"                if !(*left_val == *right_val) {","highlight_start":1,"highlight_end":48},{"text":"                    let kind = $crate::panicking::AssertKind::Eq;","highlight_start":1,"highlight_end":66},{"text":"                    // The reborrows below are intentional. Without them, the stack slot for the","highlight_start":1,"highlight_end":97},{"text":"                    // borrow is initialized even before the values are compared, leading to a","highlight_start":1,"highlight_end":95},{"text":"                    // noticeable slow down.","highlight_start":1,"highlight_end":45},{"text":"                    $crate::panicking::assert_failed(kind, &*left_val, &*right_val, $crate::option::Option::None);","highlight_start":1,"highlight_end":115},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    });","highlight_start":1,"highlight_end":6}],"label":"unreachable statement","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/parser/block.rs","byte_start":7847,"byte_end":10414,"line_start":294,"line_end":370,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    assert_eq!(","highlight_start":5,"highlight_end":16},{"text":"        parse().easy_parse(","highlight_start":1,"highlight_end":28},{"text":"            r##\"# Title","highlight_start":1,"highlight_end":24},{"text":"I'm **chage**.","highlight_start":1,"highlight_end":15},{"text":"I write program.","highlight_start":1,"highlight_end":17},{"text":"```javascript","highlight_start":1,"highlight_end":14},{"text":"for(int i = 0; i < 10; i++) {","highlight_start":1,"highlight_end":30},{"text":"    console.log(i);","highlight_start":1,"highlight_end":20},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"```","highlight_start":1,"highlight_end":4},{"text":"- - -","highlight_start":1,"highlight_end":6},{"text":"I'm chage.","highlight_start":1,"highlight_end":11},{"text":"I write program.","highlight_start":1,"highlight_end":17},{"text":"```javascript","highlight_start":1,"highlight_end":14},{"text":"for(int i = 0; i < 10; i++) {","highlight_start":1,"highlight_end":30},{"text":"    console.log(i);","highlight_start":1,"highlight_end":20},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"```","highlight_start":1,"highlight_end":4},{"text":"\"##","highlight_start":1,"highlight_end":4},{"text":"        ),","highlight_start":1,"highlight_end":11},{"text":"        Ok((","highlight_start":1,"highlight_end":13},{"text":"            S::cons(","highlight_start":1,"highlight_end":21},{"text":"                Block::Header(1, S::unit(Span::text(\"Title\"))),","highlight_start":1,"highlight_end":64},{"text":"                S::cons(","highlight_start":1,"highlight_end":25},{"text":"                    Block::Vanilla(S::cons(","highlight_start":1,"highlight_end":44},{"text":"                        Span::text(\"I'm\"),","highlight_start":1,"highlight_end":43},{"text":"                        S::cons(","highlight_start":1,"highlight_end":33},{"text":"                            Span::Emphasis(Emphasis::emphasis(\"chage\")),","highlight_start":1,"highlight_end":73},{"text":"                            S::unit(Span::text(\".\"))","highlight_start":1,"highlight_end":53},{"text":"                        )","highlight_start":1,"highlight_end":26},{"text":"                    )),","highlight_start":1,"highlight_end":24},{"text":"                    S::cons(","highlight_start":1,"highlight_end":29},{"text":"                        Block::Vanilla(S::cons(","highlight_start":1,"highlight_end":48},{"text":"                            Span::text(\"I\"),","highlight_start":1,"highlight_end":45},{"text":"                            S::cons(Span::text(\"write\"), S::unit(Span::text(\"program.\"))),","highlight_start":1,"highlight_end":91},{"text":"                        )),","highlight_start":1,"highlight_end":28},{"text":"                        S::cons(","highlight_start":1,"highlight_end":33},{"text":"                            Block::CodeBlock(","highlight_start":1,"highlight_end":46},{"text":"                                \"javascript\".to_owned(),","highlight_start":1,"highlight_end":57},{"text":"                                Span::text(","highlight_start":1,"highlight_end":44},{"text":"                                    r#\"for(int i = 0; i < 10; i++) {","highlight_start":1,"highlight_end":69},{"text":"    console.log(i);","highlight_start":1,"highlight_end":20},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"\"#","highlight_start":1,"highlight_end":3},{"text":"                                )","highlight_start":1,"highlight_end":34},{"text":"                            ),","highlight_start":1,"highlight_end":31},{"text":"                            S::cons(","highlight_start":1,"highlight_end":37},{"text":"                                Block::HorizontalRules,","highlight_start":1,"highlight_end":56},{"text":"                                S::cons(","highlight_start":1,"highlight_end":41},{"text":"                                    Block::Vanilla(S::unit(Span::text(\"I'm chage.\"))),","highlight_start":1,"highlight_end":87},{"text":"                                    S::cons(","highlight_start":1,"highlight_end":45},{"text":"                                        Block::Vanilla(S::cons(","highlight_start":1,"highlight_end":64},{"text":"                                            Span::text(\"I\"),","highlight_start":1,"highlight_end":61},{"text":"                                            S::cons(","highlight_start":1,"highlight_end":53},{"text":"                                                Span::text(\"write\"),","highlight_start":1,"highlight_end":69},{"text":"                                                S::unit(Span::text(\"program.\"))","highlight_start":1,"highlight_end":80},{"text":"                                            ),","highlight_start":1,"highlight_end":47},{"text":"                                        )),","highlight_start":1,"highlight_end":44},{"text":"                                        S::unit(Block::CodeBlock(","highlight_start":1,"highlight_end":66},{"text":"                                            \"javascript\".to_owned(),","highlight_start":1,"highlight_end":69},{"text":"                                            Span::text(","highlight_start":1,"highlight_end":56},{"text":"                                                r\"for(int i = 0; i < 10; i++) {","highlight_start":1,"highlight_end":80},{"text":"    console.log(i);","highlight_start":1,"highlight_end":20},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"\"","highlight_start":1,"highlight_end":2},{"text":"                                            )","highlight_start":1,"highlight_end":46},{"text":"                                        ))","highlight_start":1,"highlight_end":43},{"text":"                                    )","highlight_start":1,"highlight_end":38},{"text":"                                )","highlight_start":1,"highlight_end":34},{"text":"                            )","highlight_start":1,"highlight_end":30},{"text":"                        )","highlight_start":1,"highlight_end":26},{"text":"                    )","highlight_start":1,"highlight_end":22},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            ),","highlight_start":1,"highlight_end":15},{"text":"            \"\"","highlight_start":1,"highlight_end":15},{"text":"        ))","highlight_start":1,"highlight_end":11},{"text":"    );","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"assert_eq!","def_site_span":{"file_name":"/home/kingfisher/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":1002,"byte_end":2329,"line_start":35,"line_end":62,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! assert_eq {","highlight_start":1,"highlight_end":1},{"text":"    ($left:expr, $right:expr $(,)?) => ({","highlight_start":1,"highlight_end":1},{"text":"        match (&$left, &$right) {","highlight_start":1,"highlight_end":1},{"text":"            (left_val, right_val) => {","highlight_start":1,"highlight_end":1},{"text":"                if !(*left_val == *right_val) {","highlight_start":1,"highlight_end":1},{"text":"                    let kind = $crate::panicking::AssertKind::Eq;","highlight_start":1,"highlight_end":1},{"text":"                    // The reborrows below are intentional. Without them, the stack slot for the","highlight_start":1,"highlight_end":1},{"text":"                    // borrow is initialized even before the values are compared, leading to a","highlight_start":1,"highlight_end":1},{"text":"                    // noticeable slow down.","highlight_start":1,"highlight_end":1},{"text":"                    $crate::panicking::assert_failed(kind, &*left_val, &*right_val, $crate::option::Option::None);","highlight_start":1,"highlight_end":1},{"text":"                }","highlight_start":1,"highlight_end":1},{"text":"            }","highlight_start":1,"highlight_end":1},{"text":"        }","highlight_start":1,"highlight_end":1},{"text":"    });","highlight_start":1,"highlight_end":1},{"text":"    ($left:expr, $right:expr, $($arg:tt)+) => ({","highlight_start":1,"highlight_end":1},{"text":"        match (&$left, &$right) {","highlight_start":1,"highlight_end":1},{"text":"            (left_val, right_val) => {","highlight_start":1,"highlight_end":1},{"text":"                if !(*left_val == *right_val) {","highlight_start":1,"highlight_end":1},{"text":"                    let kind = $crate::panicking::AssertKind::Eq;","highlight_start":1,"highlight_end":1},{"text":"                    // The reborrows below are intentional. Without them, the stack slot for the","highlight_start":1,"highlight_end":1},{"text":"                    // borrow is initialized even before the values are compared, leading to a","highlight_start":1,"highlight_end":1},{"text":"                    // noticeable slow down.","highlight_start":1,"highlight_end":1},{"text":"                    $crate::panicking::assert_failed(kind, &*left_val, &*right_val, $crate::option::Option::Some($crate::format_args!($($arg)+)));","highlight_start":1,"highlight_end":1},{"text":"                }","highlight_start":1,"highlight_end":1},{"text":"            }","highlight_start":1,"highlight_end":1},{"text":"        }","highlight_start":1,"highlight_end":1},{"text":"    });","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/parser/block.rs","byte_start":7835,"byte_end":7841,"line_start":293,"line_end":293,"column_start":5,"column_end":11,"is_primary":false,"text":[{"text":"    return;","highlight_start":5,"highlight_end":11}],"label":"any code following this expression is unreachable","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unreachable_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable statement\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parser/block.rs:294:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m293\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m    return;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12many code following this expression is unreachable\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m294\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    assert_eq!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m295\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse().easy_parse(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m296\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            r##\"# Title\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m297\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mI'm **chage**.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m369\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ))\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m370\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|______^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable statement\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unreachable_code)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"unused import: `Parser`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/parser/block.rs","byte_start":385,"byte_end":391,"line_start":8,"line_end":8,"column_start":65,"column_end":71,"is_primary":true,"text":[{"text":"    sep_by1, sep_end_by, sep_end_by1, token, value, EasyParser, Parser, Stream,","highlight_start":65,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Parser`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parser/block.rs:8:65\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    sep_by1, sep_end_by, sep_end_by1, token, value, EasyParser, Parser, Stream,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"10 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 10 warnings emitted\u001b[0m\n\n"}

{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1","program":"/home/kingfisher/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","combine","--edition=2018","/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"bytes\"","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=aee24603500d26b6","-C","extra-filename=-aee24603500d26b6","--out-dir","/home/kingfisher/Project/misel/md/target/rls/debug/deps","-L","dependency=/home/kingfisher/Project/misel/md/target/rls/debug/deps","--extern","bytes=/home/kingfisher/Project/misel/md/target/rls/debug/deps/libbytes-4fe6b9638b3e3154.rmeta","--extern","memchr=/home/kingfisher/Project/misel/md/target/rls/debug/deps/libmemchr-fde5d9e5f12c761c.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/kingfisher/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/kingfisher/Project/misel/md/target/rls/debug/deps/libcombine-aee24603500d26b6.rmeta"},"prelude":{"crate_id":{"name":"combine","disambiguator":[14430642945676110662,2575414172382048039]},"crate_root":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src","external_crates":[{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17255007459673538994,10308005785557406899]}},{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","num":2,"id":{"name":"core","disambiguator":[1111923456158047016,16902919259693091653]}},{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4206559302939301148,6164973543688958239]}},{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5256837966271238037,14624209252821231605]}},{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7550531950105187004,8150571798412653191]}},{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[15335445469838442753,9552689356239597613]}},{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16502730494113453331,739642837530493346]}},{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17056567370692029606,5237526203530126554]}},{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14937216707889756020,8824175777475717960]}},{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17577480307990758245,11665649631686256755]}},{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[10532265776820743552,12261914965731844528]}},{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[15918998743166050901,5153345746580364318]}},{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[13847123446638245357,191099483651108540]}},{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[8535951946701118478,247082403716274271]}},{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[8071155208203251459,9749237191716311885]}},{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[10993643928529734294,4550819794165110057]}},{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[3520407426629514955,6784388313453073637]}},{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[947612539730288161,7851933247975044788]}},{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","num":19,"id":{"name":"bytes","disambiguator":[6674685025306461183,7319483619696606497]}},{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","num":20,"id":{"name":"memchr","disambiguator":[16835939525160445645,2630445030767783072]}}],"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":0,"byte_end":35678,"line_start":1,"line_end":1012,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":353},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":8403,"byte_end":8413,"line_start":202,"line_end":202,"column_start":24,"column_end":34},"alias_span":null,"name":"ParseError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3807},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":8415,"byte_end":8426,"line_start":202,"line_end":202,"column_start":36,"column_end":47},"alias_span":null,"name":"ParseResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":314},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":8428,"byte_end":8442,"line_start":202,"line_end":202,"column_start":49,"column_end":63},"alias_span":null,"name":"StdParseResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3677},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":8508,"byte_end":8518,"line_start":206,"line_end":206,"column_start":24,"column_end":34},"alias_span":null,"name":"EasyParser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3607},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":8559,"byte_end":8565,"line_start":209,"line_end":209,"column_start":24,"column_end":30},"alias_span":null,"name":"Parser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1389},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":8607,"byte_end":8617,"line_start":212,"line_end":212,"column_start":25,"column_end":35},"alias_span":null,"name":"Positioned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1418},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":8619,"byte_end":8630,"line_start":212,"line_end":212,"column_start":37,"column_end":48},"alias_span":null,"name":"RangeStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1409},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":8632,"byte_end":8647,"line_start":212,"line_end":212,"column_start":50,"column_end":65},"alias_span":null,"name":"RangeStreamOnce","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1404},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":8649,"byte_end":8655,"line_start":212,"line_end":212,"column_start":67,"column_end":73},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1393},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":8657,"byte_end":8667,"line_start":212,"line_end":212,"column_start":75,"column_end":85},"alias_span":null,"name":"StreamOnce","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2159},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":8723,"byte_end":8731,"line_start":216,"line_end":216,"column_start":13,"column_end":21},"alias_span":null,"name":"optional","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2264},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":8750,"byte_end":8757,"line_start":217,"line_end":217,"column_start":18,"column_end":25},"alias_span":null,"name":"attempt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2274},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":8759,"byte_end":8769,"line_start":217,"line_end":217,"column_start":27,"column_end":37},"alias_span":null,"name":"look_ahead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2250},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":8771,"byte_end":8786,"line_start":217,"line_end":217,"column_start":39,"column_end":54},"alias_span":null,"name":"not_followed_by","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2637},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":8801,"byte_end":8811,"line_start":218,"line_end":218,"column_start":13,"column_end":23},"alias_span":null,"name":"unexpected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2641},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":8813,"byte_end":8827,"line_start":218,"line_end":218,"column_start":25,"column_end":39},"alias_span":null,"name":"unexpected_any","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2715},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":8844,"byte_end":8850,"line_start":219,"line_end":219,"column_start":15,"column_end":21},"alias_span":null,"name":"parser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3206},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":8874,"byte_end":8881,"line_start":221,"line_end":221,"column_start":9,"column_end":16},"alias_span":null,"name":"chainl1","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3218},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":8883,"byte_end":8890,"line_start":221,"line_end":221,"column_start":18,"column_end":25},"alias_span":null,"name":"chainr1","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7758},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":8892,"byte_end":8897,"line_start":221,"line_end":221,"column_start":27,"column_end":32},"alias_span":null,"name":"count","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3046},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":8899,"byte_end":8912,"line_start":221,"line_end":221,"column_start":34,"column_end":47},"alias_span":null,"name":"count_min_max","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3106},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":8914,"byte_end":8918,"line_start":221,"line_end":221,"column_start":49,"column_end":53},"alias_span":null,"name":"many","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3120},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":8920,"byte_end":8925,"line_start":221,"line_end":221,"column_start":55,"column_end":60},"alias_span":null,"name":"many1","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3141},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":8927,"byte_end":8933,"line_start":221,"line_end":221,"column_start":62,"column_end":68},"alias_span":null,"name":"sep_by","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3158},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":8935,"byte_end":8942,"line_start":221,"line_end":221,"column_start":70,"column_end":77},"alias_span":null,"name":"sep_by1","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3174},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":8944,"byte_end":8954,"line_start":221,"line_end":221,"column_start":79,"column_end":89},"alias_span":null,"name":"sep_end_by","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3192},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":8964,"byte_end":8975,"line_start":222,"line_end":222,"column_start":9,"column_end":20},"alias_span":null,"name":"sep_end_by1","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7781},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":8977,"byte_end":8987,"line_start":222,"line_end":222,"column_start":22,"column_end":32},"alias_span":null,"name":"skip_count","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7821},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":8989,"byte_end":9007,"line_start":222,"line_end":222,"column_start":34,"column_end":52},"alias_span":null,"name":"skip_count_min_max","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7877},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":9009,"byte_end":9018,"line_start":222,"line_end":222,"column_start":54,"column_end":63},"alias_span":null,"name":"skip_many","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7896},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":9020,"byte_end":9030,"line_start":222,"line_end":222,"column_start":65,"column_end":75},"alias_span":null,"name":"skip_many1","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9823},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":9053,"byte_end":9060,"line_start":224,"line_end":224,"column_start":15,"column_end":22},"alias_span":null,"name":"between","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3487},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":9083,"byte_end":9086,"line_start":226,"line_end":226,"column_start":9,"column_end":12},"alias_span":null,"name":"any","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3605},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":9088,"byte_end":9091,"line_start":226,"line_end":226,"column_start":14,"column_end":17},"alias_span":null,"name":"eof","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3576},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":9093,"byte_end":9100,"line_start":226,"line_end":226,"column_start":19,"column_end":26},"alias_span":null,"name":"none_of","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3565},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":9102,"byte_end":9108,"line_start":226,"line_end":226,"column_start":28,"column_end":34},"alias_span":null,"name":"one_of","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3554},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":9110,"byte_end":9118,"line_start":226,"line_end":226,"column_start":36,"column_end":44},"alias_span":null,"name":"position","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3595},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":9120,"byte_end":9127,"line_start":226,"line_end":226,"column_start":46,"column_end":53},"alias_span":null,"name":"produce","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3500},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":9129,"byte_end":9136,"line_start":226,"line_end":226,"column_start":55,"column_end":62},"alias_span":null,"name":"satisfy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3510},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":9138,"byte_end":9149,"line_start":226,"line_end":226,"column_start":64,"column_end":75},"alias_span":null,"name":"satisfy_map","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3521},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":9151,"byte_end":9156,"line_start":226,"line_end":226,"column_start":77,"column_end":82},"alias_span":null,"name":"token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3533},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":9158,"byte_end":9164,"line_start":226,"line_end":226,"column_start":84,"column_end":90},"alias_span":null,"name":"tokens","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3585},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":9166,"byte_end":9171,"line_start":226,"line_end":226,"column_start":92,"column_end":97},"alias_span":null,"name":"value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2135},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":9230,"byte_end":9236,"line_start":231,"line_end":231,"column_start":32,"column_end":38},"alias_span":null,"name":"choice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7546},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":9289,"byte_end":9297,"line_start":234,"line_end":234,"column_start":36,"column_end":44},"alias_span":null,"name":"from_str","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3545},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":9345,"byte_end":9355,"line_start":237,"line_end":237,"column_start":31,"column_end":41},"alias_span":null,"name":"tokens_cmp","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":22722,"byte_end":22723,"line_start":607,"line_end":607,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"convert, error, borrow, cfg, marker, mem, cmp, str, fmt, any","parent":{"krate":0,"index":153}},{"kind":"Use","ref_id":{"krate":0,"index":699},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":22790,"byte_end":22794,"line_start":612,"line_end":612,"column_start":24,"column_end":28},"alias_span":null,"name":"easy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4137},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":67458,"byte_end":67465,"line_start":27,"line_end":27,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":547}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":0,"byte_end":35678,"line_start":1,"line_end":1012,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":547},{"krate":0,"index":1717},{"krate":0,"index":10061},{"krate":0,"index":10064},{"krate":0,"index":10066},{"krate":0,"index":10068},{"krate":0,"index":10069},{"krate":0,"index":10072},{"krate":0,"index":10074}],"decl_id":null,"docs":" This crate contains parser combinators, roughly based on the Haskell libraries\n [parsec](http://hackage.haskell.org/package/parsec) and\n [attoparsec](https://hackage.haskell.org/package/attoparsec).","sig":null,"attributes":[{"value":"/ This crate contains parser combinators, roughly based on the Haskell libraries","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":0,"byte_end":82,"line_start":1,"line_end":1,"column_start":1,"column_end":83}},{"value":"/ [parsec](http://hackage.haskell.org/package/parsec) and","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":83,"byte_end":142,"line_start":2,"line_end":2,"column_start":1,"column_end":60}},{"value":"/ [attoparsec](https://hackage.haskell.org/package/attoparsec).","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":143,"byte_end":208,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":209,"byte_end":212,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A parser in this library can be described as a function which takes some input and if it","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":213,"byte_end":305,"line_start":5,"line_end":5,"column_start":1,"column_end":93}},{"value":"/ is successful, returns a value together with the remaining input.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":306,"byte_end":375,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/ A parser combinator is a function which takes one or more parsers and returns a new parser.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":376,"byte_end":471,"line_start":7,"line_end":7,"column_start":1,"column_end":96}},{"value":"/ For instance the [`many`] parser can be used to convert a parser for single digits into one that","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":472,"byte_end":572,"line_start":8,"line_end":8,"column_start":1,"column_end":101}},{"value":"/ parses multiple digits. By modeling parsers in this way it becomes easy to compose complex","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":573,"byte_end":667,"line_start":9,"line_end":9,"column_start":1,"column_end":95}},{"value":"/ parsers in an almost declarative way.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":668,"byte_end":709,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":710,"byte_end":713,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":714,"byte_end":728,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":729,"byte_end":732,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `combine` limits itself to creating [LL(1) parsers](https://en.wikipedia.org/wiki/LL_parser)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":733,"byte_end":829,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ (it is possible to opt-in to LL(k) parsing using the [`attempt`] combinator) which makes the","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":830,"byte_end":926,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"/ parsers easy to reason about in both function and performance while sacrificing","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":927,"byte_end":1010,"line_start":16,"line_end":16,"column_start":1,"column_end":84}},{"value":"/ some generality. In addition to you being able to reason better about the parsers you","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":1011,"byte_end":1100,"line_start":17,"line_end":17,"column_start":1,"column_end":90}},{"value":"/ construct `combine` the library also takes the knowledge of being an LL parser and uses it to","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":1101,"byte_end":1198,"line_start":18,"line_end":18,"column_start":1,"column_end":98}},{"value":"/ automatically construct good error messages.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":1199,"byte_end":1247,"line_start":19,"line_end":19,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":1248,"byte_end":1251,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":1252,"byte_end":1263,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/ extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":1264,"byte_end":1289,"line_start":22,"line_end":22,"column_start":1,"column_end":26}},{"value":"/ use combine::{Parser, EasyParser};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":1290,"byte_end":1328,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/ use combine::stream::position;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":1329,"byte_end":1363,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/ use combine::parser::char::{digit, letter};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":1364,"byte_end":1411,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ const MSG: &'static str = r#\"Parse error at line: 1, column: 1","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":1412,"byte_end":1478,"line_start":26,"line_end":26,"column_start":1,"column_end":67}},{"value":"/ Unexpected `|`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":27,"line_end":27,"column_start":1,"column_end":19}},{"value":"/ Expected `digit` or `letter`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":1498,"byte_end":1530,"line_start":28,"line_end":28,"column_start":1,"column_end":33}},{"value":"/ \"#;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":1531,"byte_end":1538,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":1539,"byte_end":1542,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":1543,"byte_end":1558,"line_start":31,"line_end":31,"column_start":1,"column_end":16}},{"value":"/     // Wrapping a `&str` with `State` provides automatic line and column tracking. If `State`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":1559,"byte_end":1656,"line_start":32,"line_end":32,"column_start":1,"column_end":98}},{"value":"/     // was not used the positions would instead only be pointers into the `&str`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":1657,"byte_end":1741,"line_start":33,"line_end":33,"column_start":1,"column_end":85}},{"value":"/     if let Err(err) = digit().or(letter()).easy_parse(position::Stream::new(\"|\")) {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":1742,"byte_end":1829,"line_start":34,"line_end":34,"column_start":1,"column_end":88}},{"value":"/         assert_eq!(MSG, format!(\"{}\", err));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":1830,"byte_end":1878,"line_start":35,"line_end":35,"column_start":1,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":1879,"byte_end":1888,"line_start":36,"line_end":36,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":1889,"byte_end":1894,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":1895,"byte_end":1902,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":1903,"byte_end":1906,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ This library is currently split into a few core modules:","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":1907,"byte_end":1967,"line_start":40,"line_end":40,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":1968,"byte_end":1971,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ * [`parser`][mod parser] is where you will find all the parsers that combine provides. It contains the core","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":1972,"byte_end":2083,"line_start":42,"line_end":42,"column_start":1,"column_end":112}},{"value":"/ [`Parser`] trait as well as several submodules such as `sequence` or `choice` which each","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":2084,"byte_end":2176,"line_start":43,"line_end":43,"column_start":1,"column_end":93}},{"value":"/ contain several parsers aimed at a specific niche.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":2177,"byte_end":2231,"line_start":44,"line_end":44,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":2232,"byte_end":2235,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ * [`stream`] contains the second most important trait next to [`Parser`]. Streams represent the","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":2236,"byte_end":2335,"line_start":46,"line_end":46,"column_start":1,"column_end":100}},{"value":"/ data source which is being parsed such as `&[u8]`, `&str` or iterators.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":2336,"byte_end":2411,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":2412,"byte_end":2415,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ * [`easy`] contains combine's default \"easy\" error and stream handling. If you use the","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":2416,"byte_end":2506,"line_start":49,"line_end":49,"column_start":1,"column_end":91}},{"value":"/ `easy_parse` method to start your parsing these are the types that are used.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":2507,"byte_end":2587,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":2588,"byte_end":2591,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ * [`error`] contains the types and traits that make up combine's error handling. Unless you","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":2592,"byte_end":2687,"line_start":52,"line_end":52,"column_start":1,"column_end":96}},{"value":"/ need to customize the errors your parsers return you should not need to use this module much.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":2688,"byte_end":2785,"line_start":53,"line_end":53,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":2786,"byte_end":2789,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":2790,"byte_end":2793,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":2794,"byte_end":2808,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":2809,"byte_end":2812,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":2813,"byte_end":2820,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":2821,"byte_end":2846,"line_start":59,"line_end":59,"column_start":1,"column_end":26}},{"value":"/ use combine::parser::char::{spaces, digit, char};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":2847,"byte_end":2900,"line_start":60,"line_end":60,"column_start":1,"column_end":54}},{"value":"/ use combine::{many1, sep_by, Parser, EasyParser};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":2901,"byte_end":2954,"line_start":61,"line_end":61,"column_start":1,"column_end":54}},{"value":"/ use combine::stream::easy;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":2955,"byte_end":2985,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":2986,"byte_end":2989,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":2990,"byte_end":3005,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"/     //Parse spaces first and use the with method to only keep the result of the next parser","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":3006,"byte_end":3101,"line_start":65,"line_end":65,"column_start":1,"column_end":96}},{"value":"/     let integer = spaces()","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":3102,"byte_end":3132,"line_start":66,"line_end":66,"column_start":1,"column_end":31}},{"value":"/         //parse a string of digits into an i32","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":3133,"byte_end":3183,"line_start":67,"line_end":67,"column_start":1,"column_end":51}},{"value":"/         .with(many1(digit()).map(|string: String| string.parse::<i32>().unwrap()));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":3184,"byte_end":3271,"line_start":68,"line_end":68,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":3272,"byte_end":3275,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/     //Parse integers separated by commas, skipping whitespace","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":3276,"byte_end":3341,"line_start":70,"line_end":70,"column_start":1,"column_end":66}},{"value":"/     let mut integer_list = sep_by(integer, spaces().skip(char(',')));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":3342,"byte_end":3415,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":3416,"byte_end":3419,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/     //Call parse with the input to execute the parser","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":3420,"byte_end":3477,"line_start":73,"line_end":73,"column_start":1,"column_end":58}},{"value":"/     let input = \"1234, 45,78\";","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":3478,"byte_end":3512,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     let result: Result<(Vec<i32>, &str), easy::ParseError<&str>> =","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":3513,"byte_end":3583,"line_start":75,"line_end":75,"column_start":1,"column_end":71}},{"value":"/         integer_list.easy_parse(input);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":3584,"byte_end":3627,"line_start":76,"line_end":76,"column_start":1,"column_end":44}},{"value":"/     match result {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":3628,"byte_end":3650,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/         Ok((value, _remaining_input)) => println!(\"{:?}\", value),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":3651,"byte_end":3720,"line_start":78,"line_end":78,"column_start":1,"column_end":70}},{"value":"/         Err(err) => println!(\"{}\", err)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":3721,"byte_end":3764,"line_start":79,"line_end":79,"column_start":1,"column_end":44}},{"value":"/     }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":3765,"byte_end":3774,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":3775,"byte_end":3780,"line_start":81,"line_end":81,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":3781,"byte_end":3788,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":3789,"byte_end":3792,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ If we need a parser that is mutually recursive or if we want to export a reusable parser the","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":3793,"byte_end":3889,"line_start":84,"line_end":84,"column_start":1,"column_end":97}},{"value":"/ [`parser!`] macro can be used. In effect it makes it possible to return a parser without naming","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":3890,"byte_end":3989,"line_start":85,"line_end":85,"column_start":1,"column_end":100}},{"value":"/ the type of the parser (which can be very large due to combine's trait based approach). While","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":3990,"byte_end":4087,"line_start":86,"line_end":86,"column_start":1,"column_end":98}},{"value":"/ it is possible to do avoid naming the type without the macro those solutions require either allocation","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":4088,"byte_end":4194,"line_start":87,"line_end":87,"column_start":1,"column_end":107}},{"value":"/ (`Box<dyn Parser< Input, Output = O, PartialState = P>>`) or nightly rust via `impl Trait`. The","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":4195,"byte_end":4294,"line_start":88,"line_end":88,"column_start":1,"column_end":100}},{"value":"/ macro thus threads the needle and makes it possible to have non-allocating, anonymous parsers","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":4295,"byte_end":4392,"line_start":89,"line_end":89,"column_start":1,"column_end":98}},{"value":"/ on stable rust.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":4393,"byte_end":4412,"line_start":90,"line_end":90,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":4413,"byte_end":4416,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":4417,"byte_end":4424,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ #[macro_use]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":4425,"byte_end":4441,"line_start":93,"line_end":93,"column_start":1,"column_end":17}},{"value":"/ extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":4442,"byte_end":4467,"line_start":94,"line_end":94,"column_start":1,"column_end":26}},{"value":"/ use combine::parser::char::{char, letter, spaces};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":4468,"byte_end":4522,"line_start":95,"line_end":95,"column_start":1,"column_end":55}},{"value":"/ use combine::{between, choice, many1, parser, sep_by, Parser, EasyParser};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":4523,"byte_end":4601,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ use combine::error::{ParseError, StdParseResult};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":4602,"byte_end":4655,"line_start":97,"line_end":97,"column_start":1,"column_end":54}},{"value":"/ use combine::stream::{Stream, Positioned};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":4656,"byte_end":4702,"line_start":98,"line_end":98,"column_start":1,"column_end":47}},{"value":"/ use combine::stream::position;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":4703,"byte_end":4737,"line_start":99,"line_end":99,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":4738,"byte_end":4741,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":4742,"byte_end":4773,"line_start":101,"line_end":101,"column_start":1,"column_end":32}},{"value":"/ pub enum Expr {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":4774,"byte_end":4793,"line_start":102,"line_end":102,"column_start":1,"column_end":20}},{"value":"/     Id(String),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":4794,"byte_end":4813,"line_start":103,"line_end":103,"column_start":1,"column_end":20}},{"value":"/     Array(Vec<Expr>),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":4814,"byte_end":4839,"line_start":104,"line_end":104,"column_start":1,"column_end":26}},{"value":"/     Pair(Box<Expr>, Box<Expr>)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":4840,"byte_end":4874,"line_start":105,"line_end":105,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":4875,"byte_end":4880,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":4881,"byte_end":4884,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ // `impl Parser` can be used to create reusable parsers with zero overhead","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":4885,"byte_end":4963,"line_start":108,"line_end":108,"column_start":1,"column_end":79}},{"value":"/ fn expr_<Input>() -> impl Parser< Input, Output = Expr>","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":4964,"byte_end":5023,"line_start":109,"line_end":109,"column_start":1,"column_end":60}},{"value":"/     where Input: Stream<Token = char>,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":5024,"byte_end":5066,"line_start":110,"line_end":110,"column_start":1,"column_end":43}},{"value":"/           // Necessary due to rust-lang/rust#24159","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":5067,"byte_end":5121,"line_start":111,"line_end":111,"column_start":1,"column_end":55}},{"value":"/           Input::Error: ParseError<Input::Token, Input::Range, Input::Position>,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":5122,"byte_end":5206,"line_start":112,"line_end":112,"column_start":1,"column_end":85}},{"value":"/ {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":5207,"byte_end":5212,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/     let word = many1(letter());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":5213,"byte_end":5248,"line_start":114,"line_end":114,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":5249,"byte_end":5252,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/     // A parser which skips past whitespace.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":5253,"byte_end":5301,"line_start":116,"line_end":116,"column_start":1,"column_end":49}},{"value":"/     // Since we aren't interested in knowing that our expression parser","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":5302,"byte_end":5377,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"/     // could have accepted additional whitespace between the tokens we also silence the error.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":5378,"byte_end":5476,"line_start":118,"line_end":118,"column_start":1,"column_end":99}},{"value":"/     let skip_spaces = || spaces().silent();","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":5477,"byte_end":5524,"line_start":119,"line_end":119,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":5525,"byte_end":5528,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/     //Creates a parser which parses a char and skips any trailing whitespace","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":5529,"byte_end":5609,"line_start":121,"line_end":121,"column_start":1,"column_end":81}},{"value":"/     let lex_char = |c| char(c).skip(skip_spaces());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":5610,"byte_end":5665,"line_start":122,"line_end":122,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":5666,"byte_end":5669,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/     let comma_list = sep_by(expr(), lex_char(','));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":5670,"byte_end":5725,"line_start":124,"line_end":124,"column_start":1,"column_end":56}},{"value":"/     let array = between(lex_char('['), lex_char(']'), comma_list);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":5726,"byte_end":5796,"line_start":125,"line_end":125,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":5797,"byte_end":5800,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/     //We can use tuples to run several parsers in sequence","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":5801,"byte_end":5863,"line_start":127,"line_end":127,"column_start":1,"column_end":63}},{"value":"/     //The resulting type is a tuple containing each parsers output","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":5864,"byte_end":5934,"line_start":128,"line_end":128,"column_start":1,"column_end":71}},{"value":"/     let pair = (lex_char('('),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":5935,"byte_end":5969,"line_start":129,"line_end":129,"column_start":1,"column_end":35}},{"value":"/                 expr(),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":5970,"byte_end":5997,"line_start":130,"line_end":130,"column_start":1,"column_end":28}},{"value":"/                 lex_char(','),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":5998,"byte_end":6032,"line_start":131,"line_end":131,"column_start":1,"column_end":35}},{"value":"/                 expr(),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":6033,"byte_end":6060,"line_start":132,"line_end":132,"column_start":1,"column_end":28}},{"value":"/                 lex_char(')'))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":6061,"byte_end":6095,"line_start":133,"line_end":133,"column_start":1,"column_end":35}},{"value":"/                    .map(|t| Expr::Pair(Box::new(t.1), Box::new(t.3)));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":6096,"byte_end":6170,"line_start":134,"line_end":134,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":6171,"byte_end":6174,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/     choice((","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":6175,"byte_end":6191,"line_start":136,"line_end":136,"column_start":1,"column_end":17}},{"value":"/         word.map(Expr::Id),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":6192,"byte_end":6223,"line_start":137,"line_end":137,"column_start":1,"column_end":32}},{"value":"/         array.map(Expr::Array),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":6224,"byte_end":6259,"line_start":138,"line_end":138,"column_start":1,"column_end":36}},{"value":"/         pair,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":6260,"byte_end":6277,"line_start":139,"line_end":139,"column_start":1,"column_end":18}},{"value":"/     ))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":6278,"byte_end":6288,"line_start":140,"line_end":140,"column_start":1,"column_end":11}},{"value":"/         .skip(skip_spaces())","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":6289,"byte_end":6321,"line_start":141,"line_end":141,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":6322,"byte_end":6327,"line_start":142,"line_end":142,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":6328,"byte_end":6331,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ // As this expression parser needs to be able to call itself recursively `impl Parser` can't","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":6332,"byte_end":6428,"line_start":144,"line_end":144,"column_start":1,"column_end":97}},{"value":"/ // be used on its own as that would cause an infinitely large type. We can avoid this by using","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":6429,"byte_end":6527,"line_start":145,"line_end":145,"column_start":1,"column_end":99}},{"value":"/ // the `parser!` macro which erases the inner type and the size of that type entirely which","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":6528,"byte_end":6623,"line_start":146,"line_end":146,"column_start":1,"column_end":96}},{"value":"/ // lets it be used recursively.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":6624,"byte_end":6659,"line_start":147,"line_end":147,"column_start":1,"column_end":36}},{"value":"/ //","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":6660,"byte_end":6666,"line_start":148,"line_end":148,"column_start":1,"column_end":7}},{"value":"/ // (This macro does not use `impl Trait` which means it can be used in rust < 1.26 as well to","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":6667,"byte_end":6764,"line_start":149,"line_end":149,"column_start":1,"column_end":98}},{"value":"/ // emulate `impl Parser`)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":6765,"byte_end":6794,"line_start":150,"line_end":150,"column_start":1,"column_end":30}},{"value":"/ parser!{","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":6795,"byte_end":6807,"line_start":151,"line_end":151,"column_start":1,"column_end":13}},{"value":"/     fn expr[Input]()(Input) -> Expr","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":6808,"byte_end":6847,"line_start":152,"line_end":152,"column_start":1,"column_end":40}},{"value":"/     where [Input: Stream<Token = char>]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":6848,"byte_end":6891,"line_start":153,"line_end":153,"column_start":1,"column_end":44}},{"value":"/     {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":6892,"byte_end":6901,"line_start":154,"line_end":154,"column_start":1,"column_end":10}},{"value":"/         expr_()","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":6902,"byte_end":6921,"line_start":155,"line_end":155,"column_start":1,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":6922,"byte_end":6931,"line_start":156,"line_end":156,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":6932,"byte_end":6937,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":6938,"byte_end":6941,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":6942,"byte_end":6957,"line_start":159,"line_end":159,"column_start":1,"column_end":16}},{"value":"/     let result = expr()","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":6958,"byte_end":6985,"line_start":160,"line_end":160,"column_start":1,"column_end":28}},{"value":"/         .parse(\"[[], (hello, world), [rust]]\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":6986,"byte_end":7037,"line_start":161,"line_end":161,"column_start":1,"column_end":52}},{"value":"/     let expr = Expr::Array(vec![","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":7038,"byte_end":7074,"line_start":162,"line_end":162,"column_start":1,"column_end":37}},{"value":"/           Expr::Array(Vec::new())","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":7075,"byte_end":7112,"line_start":163,"line_end":163,"column_start":1,"column_end":38}},{"value":"/         , Expr::Pair(Box::new(Expr::Id(\"hello\".to_string())),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":7113,"byte_end":7178,"line_start":164,"line_end":164,"column_start":1,"column_end":66}},{"value":"/                      Box::new(Expr::Id(\"world\".to_string())))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":7179,"byte_end":7244,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/         , Expr::Array(vec![Expr::Id(\"rust\".to_string())])","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":7245,"byte_end":7306,"line_start":166,"line_end":166,"column_start":1,"column_end":62}},{"value":"/     ]);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":7307,"byte_end":7318,"line_start":167,"line_end":167,"column_start":1,"column_end":12}},{"value":"/     assert_eq!(result, Ok((expr, \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":7319,"byte_end":7362,"line_start":168,"line_end":168,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":7363,"byte_end":7368,"line_start":169,"line_end":169,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":7369,"byte_end":7376,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":7377,"byte_end":7380,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ [`combinator`]: combinator/index.html","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":7381,"byte_end":7422,"line_start":172,"line_end":172,"column_start":1,"column_end":42}},{"value":"/ [mod parser]: parser/index.html","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":7423,"byte_end":7458,"line_start":173,"line_end":173,"column_start":1,"column_end":36}},{"value":"/ [`easy`]: easy/index.html","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":7459,"byte_end":7488,"line_start":174,"line_end":174,"column_start":1,"column_end":30}},{"value":"/ [`error`]: error/index.html","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":7489,"byte_end":7520,"line_start":175,"line_end":175,"column_start":1,"column_end":32}},{"value":"/ [`char`]: parser/char/index.html","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":7521,"byte_end":7557,"line_start":176,"line_end":176,"column_start":1,"column_end":37}},{"value":"/ [`byte`]: parser/byte/index.html","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":7558,"byte_end":7594,"line_start":177,"line_end":177,"column_start":1,"column_end":37}},{"value":"/ [`range`]: parser/range/index.html","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":7595,"byte_end":7633,"line_start":178,"line_end":178,"column_start":1,"column_end":39}},{"value":"/ [`many`]: parser/repeat/fn.many.html","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":7634,"byte_end":7674,"line_start":179,"line_end":179,"column_start":1,"column_end":41}},{"value":"/ [`attempt`]: parser/combinator/fn.attempt.html","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":7675,"byte_end":7725,"line_start":180,"line_end":180,"column_start":1,"column_end":51}},{"value":"/ [`satisfy`]: parser/token/fn.satisfy.html","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":7726,"byte_end":7771,"line_start":181,"line_end":181,"column_start":1,"column_end":46}},{"value":"/ [`or`]: parser/trait.Parser.html#method.or","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":7772,"byte_end":7818,"line_start":182,"line_end":182,"column_start":1,"column_end":47}},{"value":"/ [`Stream`]: stream/trait.Stream.html","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":7819,"byte_end":7859,"line_start":183,"line_end":183,"column_start":1,"column_end":41}},{"value":"/ [`RangeStream`]: stream/trait.RangeStream.html","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":7860,"byte_end":7910,"line_start":184,"line_end":184,"column_start":1,"column_end":51}},{"value":"/ [`Parser`]: parser/trait.Parser.html","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":7911,"byte_end":7951,"line_start":185,"line_end":185,"column_start":1,"column_end":41}},{"value":"/ [fn parser]: parser/function/fn.parser.html","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":7952,"byte_end":7999,"line_start":186,"line_end":186,"column_start":1,"column_end":48}},{"value":"/ [`parser!`]: macro.parser.html","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":8000,"byte_end":8034,"line_start":187,"line_end":187,"column_start":1,"column_end":35}},{"value":"allow(clippy :: inline_always, clippy :: type_complexity, clippy ::\n        too_many_arguments, clippy :: match_like_matches_macro)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":8097,"byte_end":8234,"line_start":189,"line_end":194,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":153},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":22616,"byte_end":22619,"line_start":602,"line_end":602,"column_start":9,"column_end":12},"name":"lib","qualname":"::lib","value":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":154}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":158},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":162},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":177},{"krate":0,"index":182},{"krate":0,"index":188},{"krate":0,"index":3713},{"krate":0,"index":3729},{"krate":0,"index":3734},{"krate":0,"index":196},{"krate":0,"index":203},{"krate":0,"index":207},{"krate":0,"index":212},{"krate":0,"index":217},{"krate":0,"index":223},{"krate":0,"index":227},{"krate":0,"index":231},{"krate":0,"index":235},{"krate":0,"index":239},{"krate":0,"index":245},{"krate":0,"index":249},{"krate":0,"index":253},{"krate":0,"index":259},{"krate":0,"index":262},{"krate":0,"index":267},{"krate":0,"index":273},{"krate":0,"index":277},{"krate":0,"index":282},{"krate":0,"index":3739},{"krate":0,"index":3747},{"krate":0,"index":3750},{"krate":0,"index":3752},{"krate":0,"index":3756},{"krate":0,"index":3759},{"krate":0,"index":289},{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":314},{"krate":0,"index":317},{"krate":0,"index":320},{"krate":0,"index":353},{"krate":0,"index":379},{"krate":0,"index":388},{"krate":0,"index":3761},{"krate":0,"index":3766},{"krate":0,"index":3768},{"krate":0,"index":3769},{"krate":0,"index":3771},{"krate":0,"index":3772},{"krate":0,"index":395},{"krate":0,"index":397},{"krate":0,"index":399},{"krate":0,"index":402},{"krate":0,"index":421},{"krate":0,"index":436},{"krate":0,"index":445},{"krate":0,"index":3774},{"krate":0,"index":3781},{"krate":0,"index":3783},{"krate":0,"index":3784},{"krate":0,"index":3786},{"krate":0,"index":3787},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":455},{"krate":0,"index":457},{"krate":0,"index":460},{"krate":0,"index":480},{"krate":0,"index":495},{"krate":0,"index":504},{"krate":0,"index":3789},{"krate":0,"index":3793},{"krate":0,"index":3796},{"krate":0,"index":3798},{"krate":0,"index":3802},{"krate":0,"index":3805},{"krate":0,"index":511},{"krate":0,"index":3807},{"krate":0,"index":3822},{"krate":0,"index":3826},{"krate":0,"index":3829},{"krate":0,"index":3834},{"krate":0,"index":3838},{"krate":0,"index":514},{"krate":0,"index":529},{"krate":0,"index":533},{"krate":0,"index":537},{"krate":0,"index":542}],"decl_id":null,"docs":" Error types and traits which define what kind of errors combine parsers may emit\n","sig":null,"attributes":[{"value":"/ Error types and traits which define what kind of errors combine parsers may emit","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":22797,"byte_end":22881,"line_start":614,"line_end":614,"column_start":1,"column_end":85}},{"value":"macro_use","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":22882,"byte_end":22894,"line_start":615,"line_end":615,"column_start":1,"column_end":13}}]},{"kind":"Trait","id":{"krate":0,"index":182},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":36947,"byte_end":36956,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"name":"ErrorInfo","qualname":"::error::ErrorInfo","value":"ErrorInfo<'s, T, R>","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187}],"decl_id":null,"docs":" Trait for types which can be used to construct error information.","sig":null,"attributes":[{"value":"/ Trait for types which can be used to construct error information.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":36716,"byte_end":36785,"line_start":40,"line_end":40,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":36786,"byte_end":36789,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ To call functions expecting this trait, use the wrapper types defined in this module","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":36790,"byte_end":36878,"line_start":42,"line_end":42,"column_start":1,"column_end":89}},{"value":"/ `Token`, `Range`, `Format` or `Static`/`&'static str`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":36879,"byte_end":36936,"line_start":43,"line_end":43,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":186},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":36978,"byte_end":36984,"line_start":45,"line_end":45,"column_start":10,"column_end":16},"name":"Format","qualname":"::error::ErrorInfo::Format","value":"type Format: fmt::Display;","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":37052,"byte_end":37061,"line_start":48,"line_end":48,"column_start":8,"column_end":17},"name":"into_info","qualname":"::error::ErrorInfo::into_info","value":"pub fn into_info(&'s Self) -> Info<T, R, Self::Format>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":37005,"byte_end":37044,"line_start":47,"line_end":47,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3717},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":37384,"byte_end":37389,"line_start":63,"line_end":63,"column_start":5,"column_end":10},"name":"Token","qualname":"::error::Info::Token","value":"Info::Token(T)","parent":{"krate":0,"index":3713},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3720},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":37398,"byte_end":37403,"line_start":64,"line_end":64,"column_start":5,"column_end":10},"name":"Range","qualname":"::error::Info::Range","value":"Info::Range(R)","parent":{"krate":0,"index":3713},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3723},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":37412,"byte_end":37418,"line_start":65,"line_end":65,"column_start":5,"column_end":11},"name":"Static","qualname":"::error::Info::Static","value":"Info::Static(&'static str)","parent":{"krate":0,"index":3713},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3726},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":37438,"byte_end":37444,"line_start":66,"line_end":66,"column_start":5,"column_end":11},"name":"Format","qualname":"::error::Info::Format","value":"Info::Format(F)","parent":{"krate":0,"index":3713},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3713},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":37349,"byte_end":37353,"line_start":62,"line_end":62,"column_start":10,"column_end":14},"name":"Info","qualname":"::error::Info","value":"pub enum Info<T, R, F = &'static str> {\n    Token(T),\n    Range(R),\n    Static(&'static str),\n    Format(F),\n}","parent":null,"children":[{"krate":0,"index":3717},{"krate":0,"index":3720},{"krate":0,"index":3723},{"krate":0,"index":3726}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":231},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":38847,"byte_end":38852,"line_start":126,"line_end":126,"column_start":12,"column_end":17},"name":"Token","qualname":"::error::Token","value":"","parent":null,"children":[],"decl_id":null,"docs":" Newtype which constructs an `Info::Token` through `ErrorInfo`\n","sig":null,"attributes":[{"value":"/ Newtype which constructs an `Info::Token` through `ErrorInfo`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":38770,"byte_end":38835,"line_start":125,"line_end":125,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":234},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":38856,"byte_end":38861,"line_start":126,"line_end":126,"column_start":21,"column_end":26},"name":"0","qualname":"::error::Token::0","value":"T","parent":{"krate":0,"index":231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":245},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":39272,"byte_end":39277,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"Range","qualname":"::error::Range","value":"","parent":null,"children":[],"decl_id":null,"docs":" Newtype which constructs an `Info::Range` through `ErrorInfo`\n","sig":null,"attributes":[{"value":"/ Newtype which constructs an `Info::Range` through `ErrorInfo`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":39195,"byte_end":39260,"line_start":144,"line_end":144,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":248},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":39281,"byte_end":39286,"line_start":145,"line_end":145,"column_start":21,"column_end":26},"name":"0","qualname":"::error::Range::0","value":"R","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":259},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":39772,"byte_end":39778,"line_start":165,"line_end":165,"column_start":12,"column_end":18},"name":"Static","qualname":"::error::Static","value":"","parent":null,"children":[],"decl_id":null,"docs":" Newtype which constructs an `Info::Static` through `ErrorInfo`\n A plain `&'static str` can also be used, this exists for consistency.\n","sig":null,"attributes":[{"value":"/ Newtype which constructs an `Info::Static` through `ErrorInfo`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":39620,"byte_end":39686,"line_start":163,"line_end":163,"column_start":1,"column_end":67}},{"value":"/ A plain `&'static str` can also be used, this exists for consistency.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":39687,"byte_end":39760,"line_start":164,"line_end":164,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":273},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":40190,"byte_end":40196,"line_start":184,"line_end":184,"column_start":12,"column_end":18},"name":"Format","qualname":"::error::Format","value":"","parent":null,"children":[],"decl_id":null,"docs":" Newtype which constructs an `Info::Format` through `ErrorInfo`\n","sig":null,"attributes":[{"value":"/ Newtype which constructs an `Info::Format` through `ErrorInfo`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":40112,"byte_end":40178,"line_start":183,"line_end":183,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":276},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":40200,"byte_end":40205,"line_start":184,"line_end":184,"column_start":22,"column_end":27},"name":"0","qualname":"::error::Format::0","value":"F","parent":{"krate":0,"index":273},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3741},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":41185,"byte_end":41191,"line_start":216,"line_end":216,"column_start":5,"column_end":11},"name":"Commit","qualname":"::error::Commit::Commit","value":"Commit::Commit(T)","parent":{"krate":0,"index":3739},"children":[],"decl_id":null,"docs":" Constructor indicating that the parser has committed to this parse. If a parser after this fails,\n other parser alternatives will not be attempted (`CommitErr` will be returned)\n","sig":null,"attributes":[{"value":"/ Constructor indicating that the parser has committed to this parse. If a parser after this fails,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":40992,"byte_end":41093,"line_start":214,"line_end":214,"column_start":5,"column_end":106}},{"value":"/ other parser alternatives will not be attempted (`CommitErr` will be returned)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":41098,"byte_end":41180,"line_start":215,"line_end":215,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3744},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":41392,"byte_end":41396,"line_start":219,"line_end":219,"column_start":5,"column_end":9},"name":"Peek","qualname":"::error::Commit::Peek","value":"Commit::Peek(T)","parent":{"krate":0,"index":3739},"children":[],"decl_id":null,"docs":" Constructor indicating that the parser has not committed to this parse. If a parser after this fails,\n other parser alternatives will be attempted (`EmptyErr` will be returned)\n","sig":null,"attributes":[{"value":"/ Constructor indicating that the parser has not committed to this parse. If a parser after this fails,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":41200,"byte_end":41305,"line_start":217,"line_end":217,"column_start":5,"column_end":110}},{"value":"/ other parser alternatives will be attempted (`EmptyErr` will be returned)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":41310,"byte_end":41387,"line_start":218,"line_end":218,"column_start":5,"column_end":82}}]},{"kind":"Enum","id":{"krate":0,"index":3739},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":40976,"byte_end":40982,"line_start":213,"line_end":213,"column_start":10,"column_end":16},"name":"Commit","qualname":"::error::Commit","value":"pub enum Commit<T> { Commit(T), Peek(T), }","parent":null,"children":[{"krate":0,"index":3741},{"krate":0,"index":3744}],"decl_id":null,"docs":" Enum used to indicate if a parser committed any items of the stream it was given as an input.","sig":null,"attributes":[{"value":"/ Enum used to indicate if a parser committed any items of the stream it was given as an input.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":40590,"byte_end":40687,"line_start":207,"line_end":207,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":40688,"byte_end":40691,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ This is used by parsers such as `or` and `choice` to determine if they should try to parse","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":40692,"byte_end":40786,"line_start":209,"line_end":209,"column_start":1,"column_end":95}},{"value":"/ with another parser as they will only be able to provide good error reporting if the preceding","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":40787,"byte_end":40885,"line_start":210,"line_end":210,"column_start":1,"column_end":99}},{"value":"/ parser did not commit to the parse.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":40886,"byte_end":40925,"line_start":211,"line_end":211,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":41821,"byte_end":41828,"line_start":240,"line_end":240,"column_start":12,"column_end":19},"name":"is_peek","qualname":"<Commit<T>>::is_peek","value":"pub fn is_peek(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `self` is peek.\n","sig":null,"attributes":[{"value":"/ Returns true if `self` is peek.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":41774,"byte_end":41809,"line_start":239,"line_end":239,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":42011,"byte_end":42021,"line_start":248,"line_end":248,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Commit<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extracts the contained value.\n","sig":null,"attributes":[{"value":"/ Extracts the contained value.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":41966,"byte_end":41999,"line_start":247,"line_end":247,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":42187,"byte_end":42198,"line_start":255,"line_end":255,"column_start":12,"column_end":23},"name":"into_commit","qualname":"<Commit<T>>::into_commit","value":"pub fn into_commit(Self) -> Commit<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into the `Commit` state.\n","sig":null,"attributes":[{"value":"/ Converts `self` into the `Commit` state.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":42131,"byte_end":42175,"line_start":254,"line_end":254,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":42327,"byte_end":42336,"line_start":260,"line_end":260,"column_start":12,"column_end":21},"name":"into_peek","qualname":"<Commit<T>>::into_peek","value":"pub fn into_peek(Self) -> Commit<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into the `Peek` state.\n","sig":null,"attributes":[{"value":"/ Converts `self` into the `Peek` state.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":42273,"byte_end":42315,"line_start":259,"line_end":259,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":42492,"byte_end":42495,"line_start":265,"line_end":265,"column_start":12,"column_end":15},"name":"map","qualname":"<Commit<T>>::map","value":"pub fn map<F, U>(Self, F) -> Commit<U> where F: FnOnce(T) -> U","parent":null,"children":[],"decl_id":null,"docs":" Maps over the contained value without changing the committed state.\n","sig":null,"attributes":[{"value":"/ Maps over the contained value without changing the committed state.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":42409,"byte_end":42480,"line_start":264,"line_end":264,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":42725,"byte_end":42730,"line_start":275,"line_end":275,"column_start":12,"column_end":17},"name":"merge","qualname":"<Commit<T>>::merge","value":"pub fn merge(&Self, Commit<T>) -> Commit<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":44603,"byte_end":44610,"line_start":325,"line_end":325,"column_start":12,"column_end":19},"name":"combine","qualname":"<Commit<T>>::combine","value":"pub fn combine<F, U, E>(Self, F) -> StdParseResult2<U, E> where F: FnOnce(T)\n-> StdParseResult2<U, E>","parent":null,"children":[],"decl_id":null,"docs":" Combines the `Commit` flags from `self` and the result of `f`.","sig":null,"attributes":[{"value":"/ Combines the `Commit` flags from `self` and the result of `f`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":42912,"byte_end":42978,"line_start":282,"line_end":282,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":42983,"byte_end":42986,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":42991,"byte_end":43002,"line_start":284,"line_end":284,"column_start":5,"column_end":16}},{"value":"/ Peek    <> Peek    -> Peek","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":43007,"byte_end":43037,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/ Commit <> Peek    -> Commit","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":43042,"byte_end":43073,"line_start":286,"line_end":286,"column_start":5,"column_end":36}},{"value":"/ Peek    <> Commit -> Commit","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":43078,"byte_end":43109,"line_start":287,"line_end":287,"column_start":5,"column_end":36}},{"value":"/ Commit <> Commit -> Commit","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":43114,"byte_end":43144,"line_start":288,"line_end":288,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":43149,"byte_end":43156,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":43161,"byte_end":43164,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":43169,"byte_end":43176,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine as pc;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":43181,"byte_end":43214,"line_start":292,"line_end":292,"column_start":5,"column_end":38}},{"value":"/ # use pc::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":43219,"byte_end":43235,"line_start":293,"line_end":293,"column_start":5,"column_end":21}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":43240,"byte_end":43257,"line_start":294,"line_end":294,"column_start":5,"column_end":22}},{"value":"/ //Parses a character of string literal and handles the escaped characters \\\\ and \\\" as \\","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":43262,"byte_end":43354,"line_start":295,"line_end":295,"column_start":5,"column_end":97}},{"value":"/ //and \" respectively","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":43359,"byte_end":43383,"line_start":296,"line_end":296,"column_start":5,"column_end":29}},{"value":"/ fn char<Input>(input: &mut Input) -> StdParseResult<char, Input>","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":43388,"byte_end":43456,"line_start":297,"line_end":297,"column_start":5,"column_end":73}},{"value":"/     where Input: Stream<Token = char>,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":43461,"byte_end":43503,"line_start":298,"line_end":298,"column_start":5,"column_end":47}},{"value":"/           Input::Error: ParseError<Input::Token, Input::Range, Input::Position>,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":43508,"byte_end":43592,"line_start":299,"line_end":299,"column_start":5,"column_end":89}},{"value":"/ {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":43597,"byte_end":43602,"line_start":300,"line_end":300,"column_start":5,"column_end":10}},{"value":"/     let (c, committed) = satisfy(|c| c != '\"').parse_stream(input).into_result()?;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":43607,"byte_end":43693,"line_start":301,"line_end":301,"column_start":5,"column_end":91}},{"value":"/     match c {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":43698,"byte_end":43715,"line_start":302,"line_end":302,"column_start":5,"column_end":22}},{"value":"/         //Since the `char` parser has already committed some of the input `combine` is used","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":43720,"byte_end":43815,"line_start":303,"line_end":303,"column_start":5,"column_end":100}},{"value":"/         //propagate the committed state to the next part of the parser","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":43820,"byte_end":43894,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/         '\\\\' => committed.combine(|_| {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":43899,"byte_end":43942,"line_start":305,"line_end":305,"column_start":5,"column_end":48}},{"value":"/             satisfy(|c| c == '\"' || c == '\\\\')","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":43947,"byte_end":43997,"line_start":306,"line_end":306,"column_start":5,"column_end":55}},{"value":"/                 .map(|c| {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":44002,"byte_end":44032,"line_start":307,"line_end":307,"column_start":5,"column_end":35}},{"value":"/                     match c {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":44037,"byte_end":44070,"line_start":308,"line_end":308,"column_start":5,"column_end":38}},{"value":"/                         '\"' => '\"',","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":44075,"byte_end":44114,"line_start":309,"line_end":309,"column_start":5,"column_end":44}},{"value":"/                         '\\\\' => '\\\\',","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":44119,"byte_end":44160,"line_start":310,"line_end":310,"column_start":5,"column_end":46}},{"value":"/                         c => c","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":44165,"byte_end":44199,"line_start":311,"line_end":311,"column_start":5,"column_end":39}},{"value":"/                     }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":44204,"byte_end":44229,"line_start":312,"line_end":312,"column_start":5,"column_end":30}},{"value":"/                 })","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":44234,"byte_end":44256,"line_start":313,"line_end":313,"column_start":5,"column_end":27}},{"value":"/                 .parse_stream(input)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":44261,"byte_end":44301,"line_start":314,"line_end":314,"column_start":5,"column_end":45}},{"value":"/                 .into_result()","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":44306,"byte_end":44340,"line_start":315,"line_end":315,"column_start":5,"column_end":39}},{"value":"/             }),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":44345,"byte_end":44364,"line_start":316,"line_end":316,"column_start":5,"column_end":24}},{"value":"/         _ => Ok((c, committed))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":44369,"byte_end":44404,"line_start":317,"line_end":317,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":44409,"byte_end":44418,"line_start":318,"line_end":318,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":44423,"byte_end":44428,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/ let result = many(parser(char))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":44433,"byte_end":44468,"line_start":320,"line_end":320,"column_start":5,"column_end":40}},{"value":"/     .easy_parse(r#\"abc\\\"\\\\\"#);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":44473,"byte_end":44507,"line_start":321,"line_end":321,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(result, Ok((r#\"abc\"\\\"#.to_string(), \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":44512,"byte_end":44569,"line_start":322,"line_end":322,"column_start":5,"column_end":62}},{"value":"/ }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":44574,"byte_end":44579,"line_start":323,"line_end":323,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":44584,"byte_end":44591,"line_start":324,"line_end":324,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":45032,"byte_end":45046,"line_start":338,"line_end":338,"column_start":12,"column_end":26},"name":"combine_commit","qualname":"<Commit<T>>::combine_commit","value":"pub fn combine_commit<F, U, E>(Self, F) -> ParseResult<U, E> where\nF: FnOnce(T) -> ParseResult<U, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":314},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":45675,"byte_end":45689,"line_start":359,"line_end":359,"column_start":10,"column_end":24},"name":"StdParseResult","qualname":"::error::StdParseResult","value":"Result<(O, Commit<()>), Commit<Tracked<<Input as StreamOnce>::Error>>>","parent":null,"children":[],"decl_id":null,"docs":" A type alias over the specific `Result` type used by parsers to indicate whether they were\n successful or not.\n `O` is the type that is output on success.\n `Input` is the specific stream type used in the parser.\n","sig":null,"attributes":[{"value":"/ A type alias over the specific `Result` type used by parsers to indicate whether they were","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":45441,"byte_end":45535,"line_start":355,"line_end":355,"column_start":1,"column_end":95}},{"value":"/ successful or not.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":45536,"byte_end":45558,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ `O` is the type that is output on success.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":45559,"byte_end":45605,"line_start":357,"line_end":357,"column_start":1,"column_end":47}},{"value":"/ `Input` is the specific stream type used in the parser.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":45606,"byte_end":45665,"line_start":358,"line_end":358,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":317},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":45787,"byte_end":45802,"line_start":361,"line_end":361,"column_start":10,"column_end":25},"name":"StdParseResult2","qualname":"::error::StdParseResult2","value":"Result<(O, Commit<()>), Commit<Tracked<E>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":320},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":46071,"byte_end":46082,"line_start":367,"line_end":367,"column_start":11,"column_end":22},"name":"StreamError","qualname":"::error::StreamError","value":"StreamError<Item, Range>: Sized","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351}],"decl_id":null,"docs":" `StreamError` represents a single error returned from a `Stream` or a `Parser`.","sig":null,"attributes":[{"value":"/ `StreamError` represents a single error returned from a `Stream` or a `Parser`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":45857,"byte_end":45940,"line_start":363,"line_end":363,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":45941,"byte_end":45944,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ Usually multiple instances of `StreamError` is composed into a `ParseError` to build the final","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":45945,"byte_end":46043,"line_start":365,"line_end":365,"column_start":1,"column_end":99}},{"value":"/ error value.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":46044,"byte_end":46060,"line_start":366,"line_end":366,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":46112,"byte_end":46128,"line_start":368,"line_end":368,"column_start":8,"column_end":24},"name":"unexpected_token","qualname":"::error::StreamError::unexpected_token","value":"pub fn unexpected_token(Item) -> Self","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":46158,"byte_end":46174,"line_start":369,"line_end":369,"column_start":8,"column_end":24},"name":"unexpected_range","qualname":"::error::StreamError::unexpected_range","value":"pub fn unexpected_range(Range) -> Self","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":46205,"byte_end":46222,"line_start":370,"line_end":370,"column_start":8,"column_end":25},"name":"unexpected_format","qualname":"::error::StreamError::unexpected_format","value":"pub fn unexpected_format<T>(T) -> Self where T: fmt::Display","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":46284,"byte_end":46294,"line_start":373,"line_end":373,"column_start":8,"column_end":18},"name":"unexpected","qualname":"::error::StreamError::unexpected","value":"pub fn unexpected<E>(E) -> Self where E: for<'s> ErrorInfo","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":46674,"byte_end":46699,"line_start":384,"line_end":384,"column_start":8,"column_end":33},"name":"unexpected_static_message","qualname":"::error::StreamError::unexpected_static_message","value":"pub fn unexpected_static_message(&'static str) -> Self","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":46780,"byte_end":46794,"line_start":388,"line_end":388,"column_start":8,"column_end":22},"name":"expected_token","qualname":"::error::StreamError::expected_token","value":"pub fn expected_token(Item) -> Self","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":46824,"byte_end":46838,"line_start":389,"line_end":389,"column_start":8,"column_end":22},"name":"expected_range","qualname":"::error::StreamError::expected_range","value":"pub fn expected_range(Range) -> Self","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":46869,"byte_end":46884,"line_start":390,"line_end":390,"column_start":8,"column_end":23},"name":"expected_format","qualname":"::error::StreamError::expected_format","value":"pub fn expected_format<T>(T) -> Self where T: fmt::Display","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":46946,"byte_end":46954,"line_start":393,"line_end":393,"column_start":8,"column_end":16},"name":"expected","qualname":"::error::StreamError::expected","value":"pub fn expected<E>(E) -> Self where E: for<'s> ErrorInfo","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":47326,"byte_end":47349,"line_start":404,"line_end":404,"column_start":8,"column_end":31},"name":"expected_static_message","qualname":"::error::StreamError::expected_static_message","value":"pub fn expected_static_message(&'static str) -> Self","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":47428,"byte_end":47441,"line_start":408,"line_end":408,"column_start":8,"column_end":21},"name":"message_token","qualname":"::error::StreamError::message_token","value":"pub fn message_token(Item) -> Self","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":47471,"byte_end":47484,"line_start":409,"line_end":409,"column_start":8,"column_end":21},"name":"message_range","qualname":"::error::StreamError::message_range","value":"pub fn message_range(Range) -> Self","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":47515,"byte_end":47529,"line_start":410,"line_end":410,"column_start":8,"column_end":22},"name":"message_format","qualname":"::error::StreamError::message_format","value":"pub fn message_format<T>(T) -> Self where T: fmt::Display","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":47591,"byte_end":47613,"line_start":413,"line_end":413,"column_start":8,"column_end":30},"name":"message_static_message","qualname":"::error::StreamError::message_static_message","value":"pub fn message_static_message(&'static str) -> Self","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":47690,"byte_end":47697,"line_start":416,"line_end":416,"column_start":8,"column_end":15},"name":"message","qualname":"::error::StreamError::message","value":"pub fn message<E>(E) -> Self where E: for<'s> ErrorInfo","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":48094,"byte_end":48099,"line_start":429,"line_end":429,"column_start":8,"column_end":13},"name":"other","qualname":"::error::StreamError::other","value":"pub fn other<E>(E) -> Self where E: StdError + Send + Sync + 'static","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":48063,"byte_end":48086,"line_start":428,"line_end":428,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":48228,"byte_end":48240,"line_start":436,"line_end":436,"column_start":8,"column_end":20},"name":"end_of_input","qualname":"::error::StreamError::end_of_input","value":"pub fn end_of_input() -> Self","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":48323,"byte_end":48349,"line_start":440,"line_end":440,"column_start":8,"column_end":34},"name":"is_unexpected_end_of_input","qualname":"::error::StreamError::is_unexpected_end_of_input","value":"pub fn is_unexpected_end_of_input(&Self) -> bool","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":48673,"byte_end":48683,"line_start":447,"line_end":447,"column_start":8,"column_end":18},"name":"into_other","qualname":"::error::StreamError::into_other","value":"pub fn into_other<T>(Self) -> T where T: StreamError<Item, Range>","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Converts `self` into a different `StreamError` type.","sig":null,"attributes":[{"value":"/ Converts `self` into a different `StreamError` type.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":48371,"byte_end":48427,"line_start":442,"line_end":442,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":48432,"byte_end":48435,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ This should aim to preserve as much information as possible into the returned `T` value but","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":48440,"byte_end":48535,"line_start":444,"line_end":444,"column_start":5,"column_end":100}},{"value":"/ if `Self` ignores some information passed to it using one of the constructors that","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":48540,"byte_end":48626,"line_start":445,"line_end":445,"column_start":5,"column_end":91}},{"value":"/ information is naturally lost.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":48631,"byte_end":48665,"line_start":446,"line_end":446,"column_start":5,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":353},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":48948,"byte_end":48958,"line_start":456,"line_end":456,"column_start":11,"column_end":21},"name":"ParseError","qualname":"::error::ParseError","value":"ParseError<Item, Range, Position>: Sized + PartialEq","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":367},{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377}],"decl_id":null,"docs":" Trait which defines a combine parse error.","sig":null,"attributes":[{"value":"/ Trait which defines a combine parse error.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":48748,"byte_end":48794,"line_start":452,"line_end":452,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":48795,"byte_end":48798,"line_start":453,"line_end":453,"column_start":1,"column_end":4}},{"value":"/ A parse error is composed of zero or more `StreamError` instances which gets added to it as","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":48799,"byte_end":48894,"line_start":454,"line_end":454,"column_start":1,"column_end":96}},{"value":"/ errors are encountered during parsing.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":48895,"byte_end":48937,"line_start":455,"line_end":455,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":357},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":49012,"byte_end":49023,"line_start":457,"line_end":457,"column_start":10,"column_end":21},"name":"StreamError","qualname":"::error::ParseError::StreamError","value":"type StreamError: StreamError<Item, Range>;","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":49202,"byte_end":49207,"line_start":462,"line_end":462,"column_start":8,"column_end":13},"name":"empty","qualname":"::error::ParseError::empty","value":"pub fn empty(Position) -> Self","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Constructs an empty error.","sig":null,"attributes":[{"value":"/ Constructs an empty error.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":49056,"byte_end":49086,"line_start":459,"line_end":459,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":49091,"byte_end":49094,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ An empty error is expected to be cheap to create as it is frequently created and discarded.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":49099,"byte_end":49194,"line_start":461,"line_end":461,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":49310,"byte_end":49320,"line_start":465,"line_end":465,"column_start":8,"column_end":18},"name":"from_error","qualname":"::error::ParseError::from_error","value":"pub fn from_error(Position, Self::StreamError) -> Self","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Creates a `ParseError` from a single `Self::StreamError`\n","sig":null,"attributes":[{"value":"/ Creates a `ParseError` from a single `Self::StreamError`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":49242,"byte_end":49302,"line_start":464,"line_end":464,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":49477,"byte_end":49485,"line_start":471,"line_end":471,"column_start":8,"column_end":16},"name":"position","qualname":"::error::ParseError::position","value":"pub fn position(&Self) -> Position","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":49665,"byte_end":49677,"line_start":477,"line_end":477,"column_start":8,"column_end":20},"name":"set_position","qualname":"::error::ParseError::set_position","value":"pub fn set_position(&mut Self, Position)","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Sets the position of this `ParseError`\n","sig":null,"attributes":[{"value":"/ Sets the position of this `ParseError`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":49615,"byte_end":49657,"line_start":476,"line_end":476,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":49979,"byte_end":49984,"line_start":482,"line_end":482,"column_start":8,"column_end":13},"name":"merge","qualname":"::error::ParseError::merge","value":"pub fn merge(Self, Self) -> Self","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Merges two errors. If they exist at the same position the errors of `other` are\n added to `self` (using the semantics of `add`). If they are not at the same\n position the error furthest ahead are returned, ignoring the other `ParseError`.\n","sig":null,"attributes":[{"value":"/ Merges two errors. If they exist at the same position the errors of `other` are","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":49715,"byte_end":49798,"line_start":479,"line_end":479,"column_start":5,"column_end":88}},{"value":"/ added to `self` (using the semantics of `add`). If they are not at the same","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":49803,"byte_end":49882,"line_start":480,"line_end":480,"column_start":5,"column_end":84}},{"value":"/ position the error furthest ahead are returned, ignoring the other `ParseError`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":49887,"byte_end":49971,"line_start":481,"line_end":481,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":50274,"byte_end":50277,"line_start":490,"line_end":490,"column_start":8,"column_end":11},"name":"add","qualname":"::error::ParseError::add","value":"pub fn add(&mut Self, Self::StreamError)","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Adds a `StreamError` to `self`.","sig":null,"attributes":[{"value":"/ Adds a `StreamError` to `self`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":50039,"byte_end":50074,"line_start":486,"line_end":486,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":50079,"byte_end":50082,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ It is up to each individual error type to define what adding an error does, some may push","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":50087,"byte_end":50180,"line_start":488,"line_end":488,"column_start":5,"column_end":98}},{"value":"/ it to a vector while others may only keep `self` or `err` to avoid allocation","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":50185,"byte_end":50266,"line_start":489,"line_end":489,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":50322,"byte_end":50334,"line_start":492,"line_end":492,"column_start":8,"column_end":20},"name":"add_expected","qualname":"::error::ParseError::add_expected","value":"pub fn add_expected<E>(&mut Self, E) where E: for<'s> ErrorInfo","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":50487,"byte_end":50501,"line_start":499,"line_end":499,"column_start":8,"column_end":22},"name":"add_unexpected","qualname":"::error::ParseError::add_unexpected","value":"pub fn add_unexpected<E>(&mut Self, E) where E: for<'s> ErrorInfo","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":50656,"byte_end":50667,"line_start":506,"line_end":506,"column_start":8,"column_end":19},"name":"add_message","qualname":"::error::ParseError::add_message","value":"pub fn add_message<E>(&mut Self, E) where E: for<'s> ErrorInfo","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":50880,"byte_end":50892,"line_start":514,"line_end":514,"column_start":8,"column_end":20},"name":"set_expected","qualname":"::error::ParseError::set_expected","value":"pub fn set_expected<F>(&mut Tracked<Self>, Self::StreamError, F) where\nF: FnOnce(&mut Tracked<Self>) -> ()","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Sets `info` as the *only* `Expected` error of `self`\n","sig":null,"attributes":[{"value":"/ Sets `info` as the *only* `Expected` error of `self`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":50816,"byte_end":50872,"line_start":513,"line_end":513,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":51067,"byte_end":51081,"line_start":519,"line_end":519,"column_start":8,"column_end":22},"name":"clear_expected","qualname":"::error::ParseError::clear_expected","value":"pub fn clear_expected(&mut Self)","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Removes any expected errors currently in `self`\n","sig":null,"attributes":[{"value":"/ Removes any expected errors currently in `self`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":51008,"byte_end":51059,"line_start":518,"line_end":518,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":51104,"byte_end":51130,"line_start":521,"line_end":521,"column_start":8,"column_end":34},"name":"is_unexpected_end_of_input","qualname":"::error::ParseError::is_unexpected_end_of_input","value":"pub fn is_unexpected_end_of_input(&Self) -> bool","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":51229,"byte_end":51239,"line_start":524,"line_end":524,"column_start":8,"column_end":18},"name":"into_other","qualname":"::error::ParseError::into_other","value":"pub fn into_other<T>(Self) -> T where T: ParseError<Item, Range, Position>","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Does a best-effort conversion of `self` into another `ParseError`\n","sig":null,"attributes":[{"value":"/ Does a best-effort conversion of `self` into another `ParseError`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":51152,"byte_end":51221,"line_start":523,"line_end":523,"column_start":5,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":379},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":51529,"byte_end":51543,"line_start":533,"line_end":533,"column_start":11,"column_end":25},"name":"ParseErrorInto","qualname":"::error::ParseErrorInto","value":"ParseErrorInto<Item, Range, Position>: Sized","parent":null,"children":[{"krate":0,"index":383}],"decl_id":null,"docs":" Defines a conversion between two parse error types.","sig":null,"attributes":[{"value":"/ Defines a conversion between two parse error types.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":51313,"byte_end":51368,"line_start":529,"line_end":529,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":51369,"byte_end":51372,"line_start":530,"line_end":530,"column_start":1,"column_end":4}},{"value":"/ Like `ParseError::into_other` but with a more general signature","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":51373,"byte_end":51440,"line_start":531,"line_end":531,"column_start":1,"column_end":68}},{"value":"/ (This will take the place of `into_other` on breaking release of combine)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":51441,"byte_end":51518,"line_start":532,"line_end":532,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":51583,"byte_end":51599,"line_start":534,"line_end":534,"column_start":8,"column_end":24},"name":"into_other_error","qualname":"::error::ParseErrorInto::into_other_error","value":"pub fn into_other_error<T, Item2, Range2, Position2>(Self) -> T where\nT: ParseError<Item2, Range2, Position2>, Item2: From<Item>,\nRange2: From<Range>, Position2: From<Position>","parent":{"krate":0,"index":379},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":388},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":52011,"byte_end":52026,"line_start":546,"line_end":546,"column_start":11,"column_end":26},"name":"StreamErrorInto","qualname":"::error::StreamErrorInto","value":"StreamErrorInto<Item, Range>: Sized","parent":null,"children":[{"krate":0,"index":391}],"decl_id":null,"docs":" Defines a conversion between two stream error types.","sig":null,"attributes":[{"value":"/ Defines a conversion between two stream error types.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":51793,"byte_end":51849,"line_start":542,"line_end":542,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":51850,"byte_end":51853,"line_start":543,"line_end":543,"column_start":1,"column_end":4}},{"value":"/ Like `StreamError::into_other` but with a more general signature","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":51854,"byte_end":51922,"line_start":544,"line_end":544,"column_start":1,"column_end":69}},{"value":"/ (This will take the place of `into_other` on breaking release of combine)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":51923,"byte_end":52000,"line_start":545,"line_end":545,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":52056,"byte_end":52072,"line_start":547,"line_end":547,"column_start":8,"column_end":24},"name":"into_other_error","qualname":"::error::StreamErrorInto::into_other_error","value":"pub fn into_other_error<T, Item2, Range2>(Self) -> T where\nT: StreamError<Item2, Range2>, Item2: From<Item>, Range2: From<Range>","parent":{"krate":0,"index":388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3762},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":52282,"byte_end":52285,"line_start":556,"line_end":556,"column_start":5,"column_end":8},"name":"Eoi","qualname":"::error::UnexpectedParse::Eoi","value":"UnexpectedParse::Eoi","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3764},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":52291,"byte_end":52301,"line_start":557,"line_end":557,"column_start":5,"column_end":15},"name":"Unexpected","qualname":"::error::UnexpectedParse::Unexpected","value":"UnexpectedParse::Unexpected","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3761},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":52260,"byte_end":52275,"line_start":555,"line_end":555,"column_start":10,"column_end":25},"name":"UnexpectedParse","qualname":"::error::UnexpectedParse","value":"pub enum UnexpectedParse { Eoi, Unexpected, }","parent":null,"children":[{"krate":0,"index":3762},{"krate":0,"index":3764}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3775},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":56366,"byte_end":56381,"line_start":736,"line_end":736,"column_start":5,"column_end":20},"name":"UnexpectedParse","qualname":"::error::StringStreamError::UnexpectedParse","value":"StringStreamError::UnexpectedParse","parent":{"krate":0,"index":3774},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3777},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":56387,"byte_end":56390,"line_start":737,"line_end":737,"column_start":5,"column_end":8},"name":"Eoi","qualname":"::error::StringStreamError::Eoi","value":"StringStreamError::Eoi","parent":{"krate":0,"index":3774},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3779},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":56396,"byte_end":56413,"line_start":738,"line_end":738,"column_start":5,"column_end":22},"name":"CharacterBoundary","qualname":"::error::StringStreamError::CharacterBoundary","value":"StringStreamError::CharacterBoundary","parent":{"krate":0,"index":3774},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3774},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":56342,"byte_end":56359,"line_start":735,"line_end":735,"column_start":10,"column_end":27},"name":"StringStreamError","qualname":"::error::StringStreamError","value":"pub enum StringStreamError { UnexpectedParse, Eoi, CharacterBoundary, }","parent":null,"children":[{"krate":0,"index":3775},{"krate":0,"index":3777},{"krate":0,"index":3779}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3789},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":61286,"byte_end":61293,"line_start":926,"line_end":926,"column_start":12,"column_end":19},"name":"Tracked","qualname":"::error::Tracked","value":"Tracked { error, offset }","parent":null,"children":[{"krate":0,"index":3791},{"krate":0,"index":3792}],"decl_id":null,"docs":" Error wrapper which lets parsers track which parser in a sequence of sub-parsers has emitted\n the error. `Tracked::from` can be used to construct this and it should otherwise be\n ignored outside of combine.\n","sig":null,"attributes":[{"value":"/ Error wrapper which lets parsers track which parser in a sequence of sub-parsers has emitted","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":61017,"byte_end":61113,"line_start":922,"line_end":922,"column_start":1,"column_end":97}},{"value":"/ the error. `Tracked::from` can be used to construct this and it should otherwise be","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":61114,"byte_end":61201,"line_start":923,"line_end":923,"column_start":1,"column_end":88}},{"value":"/ ignored outside of combine.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":61202,"byte_end":61233,"line_start":924,"line_end":924,"column_start":1,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3791},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":61334,"byte_end":61339,"line_start":928,"line_end":928,"column_start":9,"column_end":14},"name":"error","qualname":"::error::Tracked::error","value":"E","parent":{"krate":0,"index":3789},"children":[],"decl_id":null,"docs":" The error returned\n","sig":null,"attributes":[{"value":"/ The error returned","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":61303,"byte_end":61325,"line_start":927,"line_end":927,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":3792},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":61371,"byte_end":61377,"line_start":930,"line_end":930,"column_start":9,"column_end":15},"name":"offset","qualname":"::error::Tracked::offset","value":"ErrorOffset","parent":{"krate":0,"index":3789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3810},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":61999,"byte_end":62007,"line_start":949,"line_end":949,"column_start":5,"column_end":13},"name":"CommitOk","qualname":"::error::ParseResult::CommitOk","value":"ParseResult::CommitOk(T)","parent":{"krate":0,"index":3807},"children":[],"decl_id":null,"docs":" The parser has succeeded and has committed to this parse. If a parser after this fails,\n other parser alternatives will not be attempted (`CommitErr` will be returned)\n","sig":null,"attributes":[{"value":"/ The parser has succeeded and has committed to this parse. If a parser after this fails,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":61816,"byte_end":61907,"line_start":947,"line_end":947,"column_start":5,"column_end":96}},{"value":"/ other parser alternatives will not be attempted (`CommitErr` will be returned)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":61912,"byte_end":61994,"line_start":948,"line_end":948,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3813},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":62197,"byte_end":62203,"line_start":952,"line_end":952,"column_start":5,"column_end":11},"name":"PeekOk","qualname":"::error::ParseResult::PeekOk","value":"ParseResult::PeekOk(T)","parent":{"krate":0,"index":3807},"children":[],"decl_id":null,"docs":" The parser has succeeded and has not committed to this parse. If a parser after this fails,\n other parser alternatives will be attempted (`PeekErr` will be returned)\n","sig":null,"attributes":[{"value":"/ The parser has succeeded and has not committed to this parse. If a parser after this fails,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":62016,"byte_end":62111,"line_start":950,"line_end":950,"column_start":5,"column_end":100}},{"value":"/ other parser alternatives will be attempted (`PeekErr` will be returned)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":62116,"byte_end":62192,"line_start":951,"line_end":951,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3816},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":62286,"byte_end":62295,"line_start":954,"line_end":954,"column_start":5,"column_end":14},"name":"CommitErr","qualname":"::error::ParseResult::CommitErr","value":"ParseResult::CommitErr(E)","parent":{"krate":0,"index":3807},"children":[],"decl_id":null,"docs":" The parser failed other parse alternatives will not be attempted.\n","sig":null,"attributes":[{"value":"/ The parser failed other parse alternatives will not be attempted.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":62212,"byte_end":62281,"line_start":953,"line_end":953,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3819},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":62377,"byte_end":62384,"line_start":956,"line_end":956,"column_start":5,"column_end":12},"name":"PeekErr","qualname":"::error::ParseResult::PeekErr","value":"ParseResult::PeekErr(Tracked<E>)","parent":{"krate":0,"index":3807},"children":[],"decl_id":null,"docs":" The parser failed but other parse alternatives may be attempted.\n","sig":null,"attributes":[{"value":"/ The parser failed but other parse alternatives may be attempted.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":62304,"byte_end":62372,"line_start":955,"line_end":955,"column_start":5,"column_end":73}}]},{"kind":"Enum","id":{"krate":0,"index":3807},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":61792,"byte_end":61803,"line_start":946,"line_end":946,"column_start":10,"column_end":21},"name":"ParseResult","qualname":"::error::ParseResult","value":"pub enum ParseResult<T, E> {\n    CommitOk(T),\n    PeekOk(T),\n    CommitErr(E),\n    PeekErr(Tracked<E>),\n}","parent":null,"children":[{"krate":0,"index":3810},{"krate":0,"index":3813},{"krate":0,"index":3816},{"krate":0,"index":3819}],"decl_id":null,"docs":" A `Result` type which has the committed status flattened into the result.\n Conversions to and from `std::result::Result` can be done using `result.into()` or\n `From::from(result)`\n","sig":null,"attributes":[{"value":"/ A `Result` type which has the committed status flattened into the result.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":61552,"byte_end":61629,"line_start":942,"line_end":942,"column_start":1,"column_end":78}},{"value":"/ Conversions to and from `std::result::Result` can be done using `result.into()` or","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":61630,"byte_end":61716,"line_start":943,"line_end":943,"column_start":1,"column_end":87}},{"value":"/ `From::from(result)`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":61717,"byte_end":61741,"line_start":944,"line_end":944,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":62457,"byte_end":62462,"line_start":961,"line_end":961,"column_start":12,"column_end":17},"name":"is_ok","qualname":"<ParseResult<T, E>>::is_ok","value":"pub fn is_ok(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":62436,"byte_end":62445,"line_start":960,"line_end":960,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":62637,"byte_end":62643,"line_start":969,"line_end":969,"column_start":12,"column_end":18},"name":"is_err","qualname":"<ParseResult<T, E>>::is_err","value":"pub fn is_err(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":62616,"byte_end":62625,"line_start":968,"line_end":968,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":62701,"byte_end":62707,"line_start":973,"line_end":973,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<ParseResult<T, E>>::as_ref","value":"pub fn as_ref(&Self) -> ParseResult<&T, &E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":63051,"byte_end":63059,"line_start":985,"line_end":985,"column_start":12,"column_end":20},"name":"and_then","qualname":"<ParseResult<T, E>>::and_then","value":"pub fn and_then<F, T2>(Self, F) -> F::Output where F: FnOnce(T) ->\nParseResult<T2, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":63522,"byte_end":63529,"line_start":1001,"line_end":1001,"column_start":12,"column_end":19},"name":"map_err","qualname":"<ParseResult<T, E>>::map_err","value":"pub fn map_err<F, E2>(Self, F) -> ParseResult<T, F::Output> where F: FnOnce(E)\n-> E2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":63921,"byte_end":63924,"line_start":1016,"line_end":1016,"column_start":12,"column_end":15},"name":"map","qualname":"<ParseResult<T, E>>::map","value":"pub fn map<F, T2>(Self, F) -> ParseResult<F::Output, E> where F: FnOnce(T) ->\nT2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":64261,"byte_end":64272,"line_start":1030,"line_end":1030,"column_start":12,"column_end":23},"name":"into_result","qualname":"<ParseResult<O, E>>::into_result","value":"pub fn into_result(Self) -> StdParseResult2<O, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":547},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":552},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":558},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":583},{"krate":0,"index":586},{"krate":0,"index":590},{"krate":0,"index":656},{"krate":0,"index":699},{"krate":0,"index":950},{"krate":0,"index":1117},{"krate":0,"index":1200},{"krate":0,"index":1275},{"krate":0,"index":1325},{"krate":0,"index":1389},{"krate":0,"index":1391},{"krate":0,"index":1393},{"krate":0,"index":1400},{"krate":0,"index":4150},{"krate":0,"index":4155},{"krate":0,"index":4161},{"krate":0,"index":4167},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1407},{"krate":0,"index":1409},{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1421},{"krate":0,"index":1424},{"krate":0,"index":1426},{"krate":0,"index":1429},{"krate":0,"index":1432},{"krate":0,"index":1435},{"krate":0,"index":1438},{"krate":0,"index":1447},{"krate":0,"index":1451},{"krate":0,"index":1457},{"krate":0,"index":1467},{"krate":0,"index":1471},{"krate":0,"index":1478},{"krate":0,"index":1481},{"krate":0,"index":1485},{"krate":0,"index":1495},{"krate":0,"index":1498},{"krate":0,"index":1502},{"krate":0,"index":1509},{"krate":0,"index":1514},{"krate":0,"index":1524},{"krate":0,"index":1528},{"krate":0,"index":4172},{"krate":0,"index":4176},{"krate":0,"index":4178},{"krate":0,"index":4181},{"krate":0,"index":4183},{"krate":0,"index":4186},{"krate":0,"index":4188},{"krate":0,"index":4192},{"krate":0,"index":4195},{"krate":0,"index":4198},{"krate":0,"index":1536},{"krate":0,"index":1539},{"krate":0,"index":1542},{"krate":0,"index":1547},{"krate":0,"index":1555},{"krate":0,"index":4201},{"krate":0,"index":4205},{"krate":0,"index":4207},{"krate":0,"index":4210},{"krate":0,"index":4212},{"krate":0,"index":4215},{"krate":0,"index":4217},{"krate":0,"index":4221},{"krate":0,"index":4224},{"krate":0,"index":4227},{"krate":0,"index":1564},{"krate":0,"index":1567},{"krate":0,"index":1571},{"krate":0,"index":1574},{"krate":0,"index":1579},{"krate":0,"index":1587},{"krate":0,"index":4230},{"krate":0,"index":4235},{"krate":0,"index":4237},{"krate":0,"index":4240},{"krate":0,"index":4242},{"krate":0,"index":4245},{"krate":0,"index":4247},{"krate":0,"index":4251},{"krate":0,"index":4254},{"krate":0,"index":4257},{"krate":0,"index":1596},{"krate":0,"index":1599},{"krate":0,"index":1604},{"krate":0,"index":1612},{"krate":0,"index":4260},{"krate":0,"index":4265},{"krate":0,"index":4268},{"krate":0,"index":4271},{"krate":0,"index":4275},{"krate":0,"index":4278},{"krate":0,"index":4283},{"krate":0,"index":4287},{"krate":0,"index":4291},{"krate":0,"index":1621},{"krate":0,"index":1625},{"krate":0,"index":1629},{"krate":0,"index":1637},{"krate":0,"index":1642},{"krate":0,"index":4295},{"krate":0,"index":4299},{"krate":0,"index":4301},{"krate":0,"index":4304},{"krate":0,"index":1652},{"krate":0,"index":1656},{"krate":0,"index":1660},{"krate":0,"index":1667},{"krate":0,"index":1672},{"krate":0,"index":1675},{"krate":0,"index":1677},{"krate":0,"index":1680},{"krate":0,"index":1683},{"krate":0,"index":1685},{"krate":0,"index":1688},{"krate":0,"index":1691},{"krate":0,"index":1694},{"krate":0,"index":1697},{"krate":0,"index":1701},{"krate":0,"index":1704},{"krate":0,"index":1708},{"krate":0,"index":1713}],"decl_id":null,"docs":"\n Streams are similar to the `Iterator` trait in that they represent some sequential set of items\n which can be retrieved one by one. Where `Stream`s differ is that they are allowed to return\n errors instead of just `None` and if they implement the `RangeStreamOnce` trait they are also\n capable of returning multiple items at the same time, usually in the form of a slice.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":22910,"byte_end":22922,"line_start":617,"line_end":617,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":66381,"byte_end":66384,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Streams are similar to the `Iterator` trait in that they represent some sequential set of items","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":66385,"byte_end":66484,"line_start":4,"line_end":4,"column_start":1,"column_end":100}},{"value":"/ which can be retrieved one by one. Where `Stream`s differ is that they are allowed to return","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":66485,"byte_end":66581,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ errors instead of just `None` and if they implement the `RangeStreamOnce` trait they are also","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":66582,"byte_end":66679,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/ capable of returning multiple items at the same time, usually in the form of a slice.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":66680,"byte_end":66769,"line_start":7,"line_end":7,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":66770,"byte_end":66773,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ In addition to he functionality above, a proper `Stream` usable by a `Parser` must also have a","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":66774,"byte_end":66872,"line_start":9,"line_end":9,"column_start":1,"column_end":99}},{"value":"/ position (marked by the `Positioned` trait) and must also be resetable (marked by the","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":66873,"byte_end":66962,"line_start":10,"line_end":10,"column_start":1,"column_end":90}},{"value":"/ `ResetStream` trait). The former is used to ensure that errors at different points in the stream","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":66963,"byte_end":67063,"line_start":11,"line_end":11,"column_start":1,"column_end":101}},{"value":"/ aren't combined and the latter is used in parsers such as `or` to try multiple alternative","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":67064,"byte_end":67158,"line_start":12,"line_end":12,"column_start":1,"column_end":95}},{"value":"/ parses.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":67159,"byte_end":67170,"line_start":13,"line_end":13,"column_start":1,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":590},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buf_reader","qualname":"::stream::buf_reader","value":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","parent":null,"children":[{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":595},{"krate":0,"index":598},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":605},{"krate":0,"index":608},{"krate":0,"index":3841},{"krate":0,"index":3845},{"krate":0,"index":611},{"krate":0,"index":619},{"krate":0,"index":621},{"krate":0,"index":626},{"krate":0,"index":3848},{"krate":0,"index":3851},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":635},{"krate":0,"index":3853},{"krate":0,"index":3855},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":644},{"krate":0,"index":647},{"krate":0,"index":649},{"krate":0,"index":652}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":67976,"byte_end":67999,"line_start":50,"line_end":50,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":3841},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":123959,"byte_end":123968,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"BufReader","qualname":"::stream::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":3843},{"krate":0,"index":3844}],"decl_id":null,"docs":" `BufReader` used by `Decoder` when it is constructed with [`Decoder::new_bufferless`][]","sig":null,"attributes":[{"value":"cfg(not(feature = \"pin-project-lite\"))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":123707,"byte_end":123748,"line_start":44,"line_end":44,"column_start":1,"column_end":42}},{"value":"/ `BufReader` used by `Decoder` when it is constructed with [`Decoder::new_bufferless`][]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":123749,"byte_end":123840,"line_start":45,"line_end":45,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":123841,"byte_end":123844,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ [`Decoder::new_bufferless`]: ../decoder/struct.Decoder.html#method.new_bufferless","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":123845,"byte_end":123930,"line_start":47,"line_end":47,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":124179,"byte_end":124182,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":124037,"byte_end":124129,"line_start":55,"line_end":55,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":124134,"byte_end":124167,"line_start":56,"line_end":56,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":124332,"byte_end":124345,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":124255,"byte_end":124320,"line_start":61,"line_end":61,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":124613,"byte_end":124620,"line_start":71,"line_end":71,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":124476,"byte_end":124522,"line_start":68,"line_end":68,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":124527,"byte_end":124530,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":124535,"byte_end":124601,"line_start":70,"line_end":70,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":124812,"byte_end":124819,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":124667,"byte_end":124721,"line_start":75,"line_end":75,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":124726,"byte_end":124729,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":124734,"byte_end":124800,"line_start":77,"line_end":77,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":125313,"byte_end":125323,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying reader.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":125162,"byte_end":125225,"line_start":90,"line_end":90,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":125230,"byte_end":125233,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":125238,"byte_end":125301,"line_start":92,"line_end":92,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":125527,"byte_end":125533,"line_start":100,"line_end":100,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":125367,"byte_end":125423,"line_start":97,"line_end":97,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":125428,"byte_end":125431,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":125436,"byte_end":125515,"line_start":99,"line_end":99,"column_start":5,"column_end":84}}]},{"kind":"Trait","id":{"krate":0,"index":620},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":125862,"byte_end":125868,"line_start":114,"line_end":114,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::stream::buf_reader::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":621},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":125900,"byte_end":125913,"line_start":118,"line_end":118,"column_start":11,"column_end":24},"name":"CombineBuffer","qualname":"::stream::buf_reader::CombineBuffer","value":"CombineBuffer<R>: sealed::Sealed","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":625}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":125942,"byte_end":125948,"line_start":119,"line_end":119,"column_start":8,"column_end":14},"name":"buffer","qualname":"::stream::buf_reader::CombineBuffer::buffer","value":"pub fn buffer<'a>(&'a Self, &'a R) -> &'a [u8]","parent":{"krate":0,"index":621},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":125997,"byte_end":126004,"line_start":121,"line_end":121,"column_start":8,"column_end":15},"name":"advance","qualname":"::stream::buf_reader::CombineBuffer::advance","value":"pub fn advance(&mut Self, &mut R, usize)","parent":{"krate":0,"index":621},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":626},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":126175,"byte_end":126190,"line_start":128,"line_end":128,"column_start":11,"column_end":26},"name":"CombineSyncRead","qualname":"::stream::buf_reader::CombineSyncRead","value":"CombineSyncRead<R>: CombineBuffer<R>","parent":null,"children":[{"krate":0,"index":628}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":126221,"byte_end":126236,"line_start":129,"line_end":129,"column_start":8,"column_end":23},"name":"extend_buf_sync","qualname":"::stream::buf_reader::CombineSyncRead::extend_buf_sync","value":"pub fn extend_buf_sync(&mut Self, &mut R) -> io::Result<usize>","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3848},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":127515,"byte_end":127521,"line_start":180,"line_end":180,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::stream::buf_reader::Buffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Marker used by `Decoder` for an internal buffer\n","sig":null,"attributes":[{"value":"/ Marker used by `Decoder` for an internal buffer","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":127433,"byte_end":127484,"line_start":178,"line_end":178,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3853},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":131099,"byte_end":131109,"line_start":325,"line_end":325,"column_start":12,"column_end":22},"name":"Bufferless","qualname":"::stream::buf_reader::Bufferless","value":"","parent":null,"children":[],"decl_id":null,"docs":" Marker used by `Decoder` for an external buffer\n","sig":null,"attributes":[{"value":"/ Marker used by `Decoder` for an external buffer","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":131017,"byte_end":131068,"line_start":323,"line_end":323,"column_start":1,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":656},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buffered","qualname":"::stream::buffered","value":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","parent":null,"children":[{"krate":0,"index":657},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":671},{"krate":0,"index":674},{"krate":0,"index":677},{"krate":0,"index":3857},{"krate":0,"index":3863},{"krate":0,"index":3866},{"krate":0,"index":3868},{"krate":0,"index":680},{"krate":0,"index":685},{"krate":0,"index":688},{"krate":0,"index":691}],"decl_id":null,"docs":" Stream wrapper which provides a `ResetStream` impl for `StreamOnce` impls which do not have\n one.\n","sig":null,"attributes":[{"value":"/ Stream wrapper which provides a `ResetStream` impl for `StreamOnce` impls which do not have","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":68067,"byte_end":68162,"line_start":53,"line_end":53,"column_start":1,"column_end":96}},{"value":"/ one.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":68163,"byte_end":68171,"line_start":54,"line_end":54,"column_start":1,"column_end":9}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":68172,"byte_end":68197,"line_start":55,"line_end":55,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":3857},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":150618,"byte_end":150624,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"Stream","qualname":"::stream::buffered::Stream","value":"Stream {  }","parent":null,"children":[{"krate":0,"index":3859},{"krate":0,"index":3860},{"krate":0,"index":3861},{"krate":0,"index":3862}],"decl_id":null,"docs":" `Stream` which buffers items from an instance of `StreamOnce` into a ring buffer.\n Instances of `StreamOnce` which is not able to implement `ResetStream` (such as `ReadStream`) may\n use this as a way to implement `ResetStream` and become a full `Stream` instance.","sig":null,"attributes":[{"value":"/ `Stream` which buffers items from an instance of `StreamOnce` into a ring buffer.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":149586,"byte_end":149671,"line_start":8,"line_end":8,"column_start":1,"column_end":86}},{"value":"/ Instances of `StreamOnce` which is not able to implement `ResetStream` (such as `ReadStream`) may","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":149672,"byte_end":149773,"line_start":9,"line_end":9,"column_start":1,"column_end":102}},{"value":"/ use this as a way to implement `ResetStream` and become a full `Stream` instance.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":149774,"byte_end":149859,"line_start":10,"line_end":10,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":149860,"byte_end":149863,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The drawback is that the buffer only stores a limited number of items which limits how many","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":149864,"byte_end":149959,"line_start":12,"line_end":12,"column_start":1,"column_end":96}},{"value":"/ tokens that can be reset and replayed. If a `buffered::Stream` is reset past this limit an error","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":149960,"byte_end":150060,"line_start":13,"line_end":13,"column_start":1,"column_end":101}},{"value":"/ will be returned when `uncons` is next called.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":150061,"byte_end":150111,"line_start":14,"line_end":14,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":150112,"byte_end":150115,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ NOTE: If this stream is used in conjunction with an error enhancing stream such as","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":150116,"byte_end":150202,"line_start":16,"line_end":16,"column_start":1,"column_end":87}},{"value":"/ `easy::Stream` (also via the `easy_parser` method) it is recommended that the `buffered::Stream`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":150203,"byte_end":150303,"line_start":17,"line_end":17,"column_start":1,"column_end":101}},{"value":"/ instance wraps the `easy::Stream` instance instead of the other way around.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":150304,"byte_end":150383,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":150384,"byte_end":150387,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":150388,"byte_end":150401,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/ // DO","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":150402,"byte_end":150411,"line_start":21,"line_end":21,"column_start":1,"column_end":10}},{"value":"/ buffered::Stream::new(easy::Stream(..), ..)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":150412,"byte_end":150459,"line_start":22,"line_end":22,"column_start":1,"column_end":48}},{"value":"/ // DON'T","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":150460,"byte_end":150472,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/ easy::Stream(buffered::Stream::new(.., ..))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":150473,"byte_end":150520,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/ parser.easy_parse(buffered::Stream::new(..));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":150521,"byte_end":150570,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":150571,"byte_end":150578,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":151716,"byte_end":151719,"line_start":70,"line_end":70,"column_start":12,"column_end":15},"name":"new","qualname":"<Stream<Input>>::new","value":"pub fn new(Input, usize) -> Stream<Input>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `BufferedStream` from a `StreamOnce` instance with a `lookahead`\n number of elements that can be stored in the buffer.\n","sig":null,"attributes":[{"value":"/ Constructs a new `BufferedStream` from a `StreamOnce` instance with a `lookahead`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":151558,"byte_end":151643,"line_start":68,"line_end":68,"column_start":5,"column_end":90}},{"value":"/ number of elements that can be stored in the buffer.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":151648,"byte_end":151704,"line_start":69,"line_end":69,"column_start":5,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":699},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"easy","qualname":"::stream::easy","value":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","parent":null,"children":[{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":704},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":711},{"krate":0,"index":714},{"krate":0,"index":717},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":724},{"krate":0,"index":727},{"krate":0,"index":730},{"krate":0,"index":733},{"krate":0,"index":736},{"krate":0,"index":3872},{"krate":0,"index":3887},{"krate":0,"index":3891},{"krate":0,"index":739},{"krate":0,"index":744},{"krate":0,"index":755},{"krate":0,"index":759},{"krate":0,"index":763},{"krate":0,"index":766},{"krate":0,"index":770},{"krate":0,"index":774},{"krate":0,"index":3895},{"krate":0,"index":3910},{"krate":0,"index":777},{"krate":0,"index":800},{"krate":0,"index":815},{"krate":0,"index":824},{"krate":0,"index":831},{"krate":0,"index":850},{"krate":0,"index":861},{"krate":0,"index":865},{"krate":0,"index":870},{"krate":0,"index":879},{"krate":0,"index":3914},{"krate":0,"index":3920},{"krate":0,"index":3925},{"krate":0,"index":3929},{"krate":0,"index":881},{"krate":0,"index":908},{"krate":0,"index":913},{"krate":0,"index":918},{"krate":0,"index":3935},{"krate":0,"index":3939},{"krate":0,"index":3941},{"krate":0,"index":3945},{"krate":0,"index":3947},{"krate":0,"index":3950},{"krate":0,"index":3952},{"krate":0,"index":3955},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":930},{"krate":0,"index":938},{"krate":0,"index":947}],"decl_id":null,"docs":" Stream wrapper which provides an informative and easy to use error type.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":68263,"byte_end":68286,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"/ Stream wrapper which provides an informative and easy to use error type.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":153911,"byte_end":153987,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":153988,"byte_end":153991,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Unless you have specific constraints preventing you from using this error type (such as being","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":153992,"byte_end":154089,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"/ a `no_std` environment) you probably want to use this stream type. It can easily be used","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":154090,"byte_end":154182,"line_start":4,"line_end":4,"column_start":1,"column_end":93}},{"value":"/ through the [`EasyParser::easy_parse`] method.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":154183,"byte_end":154233,"line_start":5,"line_end":5,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":154234,"byte_end":154237,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The provided `Errors` type is roughly the same as `ParseError` in combine 1.x and 2.x.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":154238,"byte_end":154328,"line_start":7,"line_end":7,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":154329,"byte_end":154332,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":154333,"byte_end":154340,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ #[macro_use]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":154341,"byte_end":154357,"line_start":10,"line_end":10,"column_start":1,"column_end":17}},{"value":"/ extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":154358,"byte_end":154383,"line_start":11,"line_end":11,"column_start":1,"column_end":26}},{"value":"/ use combine::{easy, Parser, EasyParser, Stream, many1};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":154384,"byte_end":154443,"line_start":12,"line_end":12,"column_start":1,"column_end":60}},{"value":"/ use combine::parser::char::letter;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":154444,"byte_end":154482,"line_start":13,"line_end":13,"column_start":1,"column_end":39}},{"value":"/ use combine::stream::StreamErrorFor;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":154483,"byte_end":154523,"line_start":14,"line_end":14,"column_start":1,"column_end":41}},{"value":"/ use combine::error::{ParseError, StreamError};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":154524,"byte_end":154574,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":154575,"byte_end":154578,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":154579,"byte_end":154594,"line_start":17,"line_end":17,"column_start":1,"column_end":16}},{"value":"/     parser!{","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":154595,"byte_end":154611,"line_start":18,"line_end":18,"column_start":1,"column_end":17}},{"value":"/        fn parser[Input]()(Input) -> String","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":154612,"byte_end":154658,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"/         where [","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":154659,"byte_end":154678,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/             Input: Stream<Token = char, Error = easy::ParseError<Input>>,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":154679,"byte_end":154756,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/             Input::Range: PartialEq,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":154757,"byte_end":154797,"line_start":22,"line_end":22,"column_start":1,"column_end":41}},{"value":"/             // If we want to use the error type explicitly we need to help rustc infer","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":154798,"byte_end":154888,"line_start":23,"line_end":23,"column_start":1,"column_end":91}},{"value":"/             // `StreamError` to `easy::Error` (rust-lang/rust#24159)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":154889,"byte_end":154961,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/             Input::Error: ParseError<","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":154962,"byte_end":155003,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/                 Input::Token,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":155004,"byte_end":155037,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/                 Input::Range,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":155038,"byte_end":155071,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/                 Input::Position,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":155072,"byte_end":155108,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/                 StreamError = easy::Error<Input::Token, Input::Range>","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":155109,"byte_end":155182,"line_start":29,"line_end":29,"column_start":1,"column_end":74}},{"value":"/             >","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":155183,"byte_end":155200,"line_start":30,"line_end":30,"column_start":1,"column_end":18}},{"value":"/         ]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":155201,"byte_end":155214,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/         {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":155215,"byte_end":155228,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/             many1(letter()).and_then(|word: String| {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":155229,"byte_end":155286,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/                 if word == \"combine\" {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":155287,"byte_end":155329,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/                     Ok(word)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":155330,"byte_end":155362,"line_start":35,"line_end":35,"column_start":1,"column_end":33}},{"value":"/                 } else {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":155363,"byte_end":155391,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/                     Err(easy::Error::Expected(easy::Info::Static(\"combine\")))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":155392,"byte_end":155473,"line_start":37,"line_end":37,"column_start":1,"column_end":82}},{"value":"/                 }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":155474,"byte_end":155495,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             })","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":155496,"byte_end":155514,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":155515,"byte_end":155528,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":155529,"byte_end":155538,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":155539,"byte_end":155542,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/     parser!{","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":155543,"byte_end":155559,"line_start":43,"line_end":43,"column_start":1,"column_end":17}},{"value":"/        fn parser2[Input]()(Input) -> String","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":155560,"byte_end":155607,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/         where [","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":155608,"byte_end":155627,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"/             Input: Stream<Token = char>,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":155628,"byte_end":155672,"line_start":46,"line_end":46,"column_start":1,"column_end":45}},{"value":"/         ]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":155673,"byte_end":155686,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/         {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":155687,"byte_end":155700,"line_start":48,"line_end":48,"column_start":1,"column_end":14}},{"value":"/             many1(letter()).and_then(|word: String| {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":155701,"byte_end":155758,"line_start":49,"line_end":49,"column_start":1,"column_end":58}},{"value":"/                 if word == \"combine\" {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":155759,"byte_end":155801,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/                     Ok(word)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":155802,"byte_end":155834,"line_start":51,"line_end":51,"column_start":1,"column_end":33}},{"value":"/                 } else {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":155835,"byte_end":155863,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/                     // Alternatively it is possible to only use the methods provided by the","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":155864,"byte_end":155959,"line_start":53,"line_end":53,"column_start":1,"column_end":96}},{"value":"/                     // `StreamError` trait.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":155960,"byte_end":156007,"line_start":54,"line_end":54,"column_start":1,"column_end":48}},{"value":"/                     // In that case the extra bound is not necessary (and this method will work","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":156008,"byte_end":156107,"line_start":55,"line_end":55,"column_start":1,"column_end":100}},{"value":"/                     // for other errors than `easy::Errors`)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":156108,"byte_end":156172,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"/                     Err(StreamErrorFor::<Input>::expected_static_message(\"combine\"))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":156173,"byte_end":156261,"line_start":57,"line_end":57,"column_start":1,"column_end":89}},{"value":"/                 }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":156262,"byte_end":156283,"line_start":58,"line_end":58,"column_start":1,"column_end":22}},{"value":"/             })","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":156284,"byte_end":156302,"line_start":59,"line_end":59,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":156303,"byte_end":156316,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":156317,"byte_end":156326,"line_start":61,"line_end":61,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":156327,"byte_end":156330,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/     let input = \"combin\";","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":156331,"byte_end":156360,"line_start":63,"line_end":63,"column_start":1,"column_end":30}},{"value":"/     let expected_error = Err(easy::Errors {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":156361,"byte_end":156408,"line_start":64,"line_end":64,"column_start":1,"column_end":48}},{"value":"/         errors: vec![","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":156409,"byte_end":156434,"line_start":65,"line_end":65,"column_start":1,"column_end":26}},{"value":"/             easy::Error::Expected(\"combine\".into())","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":156435,"byte_end":156490,"line_start":66,"line_end":66,"column_start":1,"column_end":56}},{"value":"/         ],","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":156491,"byte_end":156505,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/         position: 0,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":156506,"byte_end":156530,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"/     });","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":156531,"byte_end":156542,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/     assert_eq!(","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":156543,"byte_end":156562,"line_start":70,"line_end":70,"column_start":1,"column_end":20}},{"value":"/         parser().easy_parse(input).map_err(|err| err.map_position(|p| p.translate_position(input))),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":156563,"byte_end":156667,"line_start":71,"line_end":71,"column_start":1,"column_end":105}},{"value":"/         expected_error","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":156668,"byte_end":156694,"line_start":72,"line_end":72,"column_start":1,"column_end":27}},{"value":"/     );","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":156695,"byte_end":156705,"line_start":73,"line_end":73,"column_start":1,"column_end":11}},{"value":"/     assert_eq!(","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":156706,"byte_end":156725,"line_start":74,"line_end":74,"column_start":1,"column_end":20}},{"value":"/         parser2().easy_parse(input).map_err(|err| err.map_position(|p| p.translate_position(input))),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":156726,"byte_end":156831,"line_start":75,"line_end":75,"column_start":1,"column_end":106}},{"value":"/         expected_error","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":156832,"byte_end":156858,"line_start":76,"line_end":76,"column_start":1,"column_end":27}},{"value":"/     );","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":156859,"byte_end":156869,"line_start":77,"line_end":77,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":156870,"byte_end":156875,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":156876,"byte_end":156879,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":156880,"byte_end":156887,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":156888,"byte_end":156891,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ [`EasyParser::easy_parse`]: super::super::parser::EasyParser::easy_parse","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":156892,"byte_end":156968,"line_start":82,"line_end":82,"column_start":1,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3875},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":157615,"byte_end":157620,"line_start":99,"line_end":99,"column_start":5,"column_end":10},"name":"Token","qualname":"::stream::easy::Info::Token","value":"Info::Token(T)","parent":{"krate":0,"index":3872},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3878},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":157629,"byte_end":157634,"line_start":100,"line_end":100,"column_start":5,"column_end":10},"name":"Range","qualname":"::stream::easy::Info::Range","value":"Info::Range(R)","parent":{"krate":0,"index":3872},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3881},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":157643,"byte_end":157648,"line_start":101,"line_end":101,"column_start":5,"column_end":10},"name":"Owned","qualname":"::stream::easy::Info::Owned","value":"Info::Owned(String)","parent":{"krate":0,"index":3872},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3884},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":157662,"byte_end":157668,"line_start":102,"line_end":102,"column_start":5,"column_end":11},"name":"Static","qualname":"::stream::easy::Info::Static","value":"Info::Static(&'static str)","parent":{"krate":0,"index":3872},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3872},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":157598,"byte_end":157602,"line_start":98,"line_end":98,"column_start":10,"column_end":14},"name":"Info","qualname":"::stream::easy::Info","value":"pub enum Info<T, R> {\n    Token(T),\n    Range(R),\n    Owned(String),\n    Static(&'static str),\n}","parent":null,"children":[{"krate":0,"index":3875},{"krate":0,"index":3878},{"krate":0,"index":3881},{"krate":0,"index":3884}],"decl_id":null,"docs":" Enum holding error information. Variants are defined for `Stream::Token` and `Stream::Range` as\n well as string variants holding easy descriptions.","sig":null,"attributes":[{"value":"/ Enum holding error information. Variants are defined for `Stream::Token` and `Stream::Range` as","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":157203,"byte_end":157302,"line_start":91,"line_end":91,"column_start":1,"column_end":100}},{"value":"/ well as string variants holding easy descriptions.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":157303,"byte_end":157357,"line_start":92,"line_end":92,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":157358,"byte_end":157361,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ As there is implementations of `From` for `String` and `&'static str` the","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":157362,"byte_end":157439,"line_start":94,"line_end":94,"column_start":1,"column_end":78}},{"value":"/ constructor need not be used directly as calling `msg.into()` should turn a message into the","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":157440,"byte_end":157536,"line_start":95,"line_end":95,"column_start":1,"column_end":97}},{"value":"/ correct `Info` variant.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":157537,"byte_end":157564,"line_start":96,"line_end":96,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":158136,"byte_end":158145,"line_start":120,"line_end":120,"column_start":12,"column_end":21},"name":"map_token","qualname":"<Info<T, R>>::map_token","value":"pub fn map_token<F, U>(Self, F) -> Info<U, R> where F: FnOnce(T) -> U","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":158439,"byte_end":158448,"line_start":134,"line_end":134,"column_start":12,"column_end":21},"name":"map_range","qualname":"<Info<T, R>>::map_range","value":"pub fn map_range<F, S>(Self, F) -> Info<T, S> where F: FnOnce(R) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3898},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":160340,"byte_end":160350,"line_start":200,"line_end":200,"column_start":5,"column_end":15},"name":"Unexpected","qualname":"::stream::easy::Error::Unexpected","value":"Error::Unexpected(Info<T, R>)","parent":{"krate":0,"index":3895},"children":[],"decl_id":null,"docs":" Error indicating an unexpected token has been encountered in the stream\n","sig":null,"attributes":[{"value":"/ Error indicating an unexpected token has been encountered in the stream","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":160260,"byte_end":160335,"line_start":199,"line_end":199,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3901},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":160433,"byte_end":160441,"line_start":202,"line_end":202,"column_start":5,"column_end":13},"name":"Expected","qualname":"::stream::easy::Error::Expected","value":"Error::Expected(Info<T, R>)","parent":{"krate":0,"index":3895},"children":[],"decl_id":null,"docs":" Error indicating that the parser expected something else\n","sig":null,"attributes":[{"value":"/ Error indicating that the parser expected something else","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":160368,"byte_end":160428,"line_start":201,"line_end":201,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3904},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":160483,"byte_end":160490,"line_start":204,"line_end":204,"column_start":5,"column_end":12},"name":"Message","qualname":"::stream::easy::Error::Message","value":"Error::Message(Info<T, R>)","parent":{"krate":0,"index":3895},"children":[],"decl_id":null,"docs":" Generic message\n","sig":null,"attributes":[{"value":"/ Generic message","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":160459,"byte_end":160478,"line_start":203,"line_end":203,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3907},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":160561,"byte_end":160566,"line_start":206,"line_end":206,"column_start":5,"column_end":10},"name":"Other","qualname":"::stream::easy::Error::Other","value":"Error::Other(Box<dyn StdError + Send + Sync>)","parent":{"krate":0,"index":3895},"children":[],"decl_id":null,"docs":" Variant for containing other types of errors\n","sig":null,"attributes":[{"value":"/ Variant for containing other types of errors","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":160508,"byte_end":160556,"line_start":205,"line_end":205,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":3895},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":160242,"byte_end":160247,"line_start":198,"line_end":198,"column_start":10,"column_end":15},"name":"Error","qualname":"::stream::easy::Error","value":"pub enum Error<T, R> {\n    Unexpected(Info<T, R>),\n    Expected(Info<T, R>),\n    Message(Info<T, R>),\n    Other(Box<dyn StdError + Send + Sync>),\n}","parent":null,"children":[{"krate":0,"index":3898},{"krate":0,"index":3901},{"krate":0,"index":3904},{"krate":0,"index":3907}],"decl_id":null,"docs":" Enum used to store information about an error that has occurred during parsing.\n","sig":null,"attributes":[{"value":"/ Enum used to store information about an error that has occurred during parsing.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":160132,"byte_end":160215,"line_start":196,"line_end":196,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":168766,"byte_end":168775,"line_start":502,"line_end":502,"column_start":12,"column_end":21},"name":"map_token","qualname":"<Error<T, R>>::map_token","value":"pub fn map_token<F, U>(Self, F) -> Error<U, R> where F: FnOnce(T) -> U","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":169125,"byte_end":169134,"line_start":516,"line_end":516,"column_start":12,"column_end":21},"name":"map_range","qualname":"<Error<T, R>>::map_range","value":"pub fn map_range<F, S>(Self, F) -> Error<T, S> where F: FnOnce(R) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":170106,"byte_end":170118,"line_start":553,"line_end":553,"column_start":12,"column_end":24},"name":"end_of_input","qualname":"<Error<T, R>>::end_of_input","value":"pub fn end_of_input() -> Error<T, R>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `end_of_input` error.\n","sig":null,"attributes":[{"value":"/ Returns the `end_of_input` error.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":170057,"byte_end":170094,"line_start":552,"line_end":552,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":170905,"byte_end":170915,"line_start":579,"line_end":579,"column_start":12,"column_end":22},"name":"fmt_errors","qualname":"<Error<T, R>>::fmt_errors","value":"pub fn fmt_errors(&[Error<T, R>], &mut fmt::Formatter) -> fmt::Result where\nT: fmt::Display, R: fmt::Display","parent":null,"children":[],"decl_id":null,"docs":" Formats a slice of errors in a human readable way.","sig":null,"attributes":[{"value":"/ Formats a slice of errors in a human readable way.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":170198,"byte_end":170252,"line_start":557,"line_end":557,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":170257,"byte_end":170260,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":170265,"byte_end":170276,"line_start":559,"line_end":559,"column_start":5,"column_end":16}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":170281,"byte_end":170308,"line_start":560,"line_end":560,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":170313,"byte_end":170334,"line_start":561,"line_end":561,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":170339,"byte_end":170374,"line_start":562,"line_end":562,"column_start":5,"column_end":40}},{"value":"/ # use combine::stream::position::{self, SourcePosition};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":170379,"byte_end":170439,"line_start":563,"line_end":563,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":170444,"byte_end":170447,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":170452,"byte_end":170469,"line_start":565,"line_end":565,"column_start":5,"column_end":22}},{"value":"/ let input = r\"","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":170474,"byte_end":170492,"line_start":566,"line_end":566,"column_start":5,"column_end":23}},{"value":"/   ,123","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":170497,"byte_end":170507,"line_start":567,"line_end":567,"column_start":5,"column_end":15}},{"value":"/ \";","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":170512,"byte_end":170518,"line_start":568,"line_end":568,"column_start":5,"column_end":11}},{"value":"/ let result = spaces().silent().with(char('.').or(char('a')).or(digit()))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":170523,"byte_end":170599,"line_start":569,"line_end":569,"column_start":5,"column_end":81}},{"value":"/     .easy_parse(position::Stream::new(input));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":170604,"byte_end":170654,"line_start":570,"line_end":570,"column_start":5,"column_end":55}},{"value":"/ let m = format!(\"{}\", result.unwrap_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":170659,"byte_end":170706,"line_start":571,"line_end":571,"column_start":5,"column_end":52}},{"value":"/ let expected = r\"Parse error at line: 2, column: 3","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":170711,"byte_end":170765,"line_start":572,"line_end":572,"column_start":5,"column_end":59}},{"value":"/ Unexpected `,`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":170770,"byte_end":170788,"line_start":573,"line_end":573,"column_start":5,"column_end":23}},{"value":"/ Expected `.`, `a` or `digit`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":170793,"byte_end":170825,"line_start":574,"line_end":574,"column_start":5,"column_end":37}},{"value":"/ \";","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":170830,"byte_end":170836,"line_start":575,"line_end":575,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(m, expected);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":170841,"byte_end":170869,"line_start":576,"line_end":576,"column_start":5,"column_end":33}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":170874,"byte_end":170881,"line_start":577,"line_end":577,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":170886,"byte_end":170893,"line_start":578,"line_end":578,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":879},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":172777,"byte_end":172787,"line_start":631,"line_end":631,"column_start":10,"column_end":20},"name":"ParseError","qualname":"::stream::easy::ParseError","value":"Errors<<S as StreamOnce>::Token, <S as StreamOnce>::Range,\n       <S as StreamOnce>::Position>","parent":null,"children":[],"decl_id":null,"docs":" Convenience alias over `Errors` for `StreamOnce` types which makes it possible to specify the\n `Errors` type from a `StreamOnce` by writing `ParseError<Input>` instead of `Errors<Input::Token,\n Input::Range, Input::Position>`\n","sig":null,"attributes":[{"value":"/ Convenience alias over `Errors` for `StreamOnce` types which makes it possible to specify the","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":172532,"byte_end":172629,"line_start":628,"line_end":628,"column_start":1,"column_end":98}},{"value":"/ `Errors` type from a `StreamOnce` by writing `ParseError<Input>` instead of `Errors<Input::Token,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":172630,"byte_end":172731,"line_start":629,"line_end":629,"column_start":1,"column_end":102}},{"value":"/ Input::Range, Input::Position>`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":172732,"byte_end":172767,"line_start":630,"line_end":630,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3914},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":173110,"byte_end":173116,"line_start":637,"line_end":637,"column_start":12,"column_end":18},"name":"Errors","qualname":"::stream::easy::Errors","value":"Errors { position, errors }","parent":null,"children":[{"krate":0,"index":3918},{"krate":0,"index":3919}],"decl_id":null,"docs":" Struct which hold information about an error that occurred at a specific position.\n Can hold multiple instances of `Error` if more that one error occurred in the same position.\n","sig":null,"attributes":[{"value":"/ Struct which hold information about an error that occurred at a specific position.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":172887,"byte_end":172973,"line_start":634,"line_end":634,"column_start":1,"column_end":87}},{"value":"/ Can hold multiple instances of `Error` if more that one error occurred in the same position.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":172974,"byte_end":173070,"line_start":635,"line_end":635,"column_start":1,"column_end":97}}]},{"kind":"Field","id":{"krate":0,"index":3918},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":173182,"byte_end":173190,"line_start":639,"line_end":639,"column_start":9,"column_end":17},"name":"position","qualname":"::stream::easy::Errors::position","value":"P","parent":{"krate":0,"index":3914},"children":[],"decl_id":null,"docs":" The position where the error occurred\n","sig":null,"attributes":[{"value":"/ The position where the error occurred","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":173132,"byte_end":173173,"line_start":638,"line_end":638,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":3919},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":173536,"byte_end":173542,"line_start":644,"line_end":644,"column_start":9,"column_end":15},"name":"errors","qualname":"::stream::easy::Errors::errors","value":"std::vec::Vec<stream::easy::Error<T, R>>","parent":{"krate":0,"index":3914},"children":[],"decl_id":null,"docs":" A vector containing specific information on what errors occurred at `position`. Usually\n a fully formed message contains one `Unexpected` error and one or more `Expected` errors.\n `Message` and `Other` may also appear (`combine` never generates these errors on its own)\n and may warrant custom handling.\n","sig":null,"attributes":[{"value":"/ A vector containing specific information on what errors occurred at `position`. Usually","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":173199,"byte_end":173290,"line_start":640,"line_end":640,"column_start":5,"column_end":96}},{"value":"/ a fully formed message contains one `Unexpected` error and one or more `Expected` errors.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":173295,"byte_end":173388,"line_start":641,"line_end":641,"column_start":5,"column_end":98}},{"value":"/ `Message` and `Other` may also appear (`combine` never generates these errors on its own)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":173393,"byte_end":173486,"line_start":642,"line_end":642,"column_start":5,"column_end":98}},{"value":"/ and may warrant custom handling.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":173491,"byte_end":173527,"line_start":643,"line_end":643,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":173690,"byte_end":173693,"line_start":650,"line_end":650,"column_start":12,"column_end":15},"name":"new","qualname":"<Errors<T, R, P>>::new","value":"pub fn new(P, Error<T, R>) -> Errors<T, R, P>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `ParseError` which occurred at `position`.\n","sig":null,"attributes":[{"value":"/ Constructs a new `ParseError` which occurred at `position`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":173601,"byte_end":173664,"line_start":648,"line_end":648,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":173669,"byte_end":173678,"line_start":649,"line_end":649,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":173917,"byte_end":173922,"line_start":656,"line_end":656,"column_start":12,"column_end":17},"name":"empty","qualname":"<Errors<T, R, P>>::empty","value":"pub fn empty(P) -> Errors<T, R, P>","parent":null,"children":[],"decl_id":null,"docs":" Constructs an error with no other information than the position it occurred at.\n","sig":null,"attributes":[{"value":"/ Constructs an error with no other information than the position it occurred at.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":173808,"byte_end":173891,"line_start":654,"line_end":654,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":173896,"byte_end":173905,"line_start":655,"line_end":655,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":174089,"byte_end":174100,"line_start":662,"line_end":662,"column_start":12,"column_end":23},"name":"from_errors","qualname":"<Errors<T, R, P>>::from_errors","value":"pub fn from_errors(P, Vec<Error<T, R>>) -> Errors<T, R, P>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `ParseError` with multiple causes.\n","sig":null,"attributes":[{"value":"/ Constructs a `ParseError` with multiple causes.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":174012,"byte_end":174063,"line_start":660,"line_end":660,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":174068,"byte_end":174077,"line_start":661,"line_end":661,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":174352,"byte_end":174364,"line_start":669,"line_end":669,"column_start":12,"column_end":24},"name":"end_of_input","qualname":"<Errors<T, R, P>>::end_of_input","value":"pub fn end_of_input(P) -> Errors<T, R, P>","parent":null,"children":[],"decl_id":null,"docs":" Constructs an end of input error. Should be returned by parsers which encounter end of\n input unexpectedly.\n","sig":null,"attributes":[{"value":"/ Constructs an end of input error. Should be returned by parsers which encounter end of","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":174208,"byte_end":174298,"line_start":666,"line_end":666,"column_start":5,"column_end":95}},{"value":"/ input unexpectedly.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":174303,"byte_end":174326,"line_start":667,"line_end":667,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":174331,"byte_end":174340,"line_start":668,"line_end":668,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":174587,"byte_end":174596,"line_start":675,"line_end":675,"column_start":12,"column_end":21},"name":"add_error","qualname":"<Errors<T, R, P>>::add_error","value":"pub fn add_error(&mut Self, Error<T, R>) where T: PartialEq, R: PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Adds an error if `error` does not exist in this `ParseError` already (as determined byte\n `PartialEq`).\n","sig":null,"attributes":[{"value":"/ Adds an error if `error` does not exist in this `ParseError` already (as determined byte","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":174461,"byte_end":174553,"line_start":673,"line_end":673,"column_start":5,"column_end":97}},{"value":"/ `PartialEq`).","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":174558,"byte_end":174575,"line_start":674,"line_end":674,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":174921,"byte_end":174933,"line_start":687,"line_end":687,"column_start":12,"column_end":24},"name":"set_expected","qualname":"<Errors<T, R, P>>::set_expected","value":"pub fn set_expected(&mut Self, Info<T, R>)","parent":null,"children":[],"decl_id":null,"docs":" Removes all `Expected` errors in `self` and adds `info` instead.\n","sig":null,"attributes":[{"value":"/ Removes all `Expected` errors in `self` and adds `info` instead.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":174841,"byte_end":174909,"line_start":686,"line_end":686,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":175472,"byte_end":175477,"line_start":699,"line_end":699,"column_start":12,"column_end":17},"name":"merge","qualname":"<Errors<T, R, P>>::merge","value":"pub fn merge(Self, Errors<T, R, P>) -> Errors<T, R, P> where P: Ord,\nT: PartialEq, R: PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Merges two `ParseError`s. If they exist at the same position the errors of `other` are\n added to `self` (using `add_error` to skip duplicates). If they are not at the same\n position the error furthest ahead are returned, ignoring the other `ParseError`.\n","sig":null,"attributes":[{"value":"/ Merges two `ParseError`s. If they exist at the same position the errors of `other` are","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":175189,"byte_end":175279,"line_start":696,"line_end":696,"column_start":5,"column_end":95}},{"value":"/ added to `self` (using `add_error` to skip duplicates). If they are not at the same","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":175284,"byte_end":175371,"line_start":697,"line_end":697,"column_start":5,"column_end":92}},{"value":"/ position the error furthest ahead are returned, ignoring the other `ParseError`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":175376,"byte_end":175460,"line_start":698,"line_end":698,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":176114,"byte_end":176126,"line_start":721,"line_end":721,"column_start":12,"column_end":24},"name":"map_position","qualname":"<Errors<T, R, P>>::map_position","value":"pub fn map_position<F, Q>(Self, F) -> Errors<T, R, Q> where F: FnOnce(P) -> Q","parent":null,"children":[],"decl_id":null,"docs":" Maps the position to a new value\n","sig":null,"attributes":[{"value":"/ Maps the position to a new value","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":176066,"byte_end":176102,"line_start":720,"line_end":720,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":176331,"byte_end":176340,"line_start":729,"line_end":729,"column_start":12,"column_end":21},"name":"map_token","qualname":"<Errors<T, R, P>>::map_token","value":"pub fn map_token<F, U>(Self, F) -> Errors<U, R, P> where F: FnMut(T) -> U","parent":null,"children":[],"decl_id":null,"docs":" Maps all token variants to a new value\n","sig":null,"attributes":[{"value":"/ Maps all token variants to a new value","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":176277,"byte_end":176319,"line_start":728,"line_end":728,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":176992,"byte_end":177001,"line_start":755,"line_end":755,"column_start":12,"column_end":21},"name":"map_range","qualname":"<Errors<T, R, P>>::map_range","value":"pub fn map_range<F, S>(Self, F) -> Errors<T, S, P> where F: FnMut(R) -> S","parent":null,"children":[],"decl_id":null,"docs":" Maps all range variants to a new value.","sig":null,"attributes":[{"value":"/ Maps all range variants to a new value.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":176636,"byte_end":176679,"line_start":742,"line_end":742,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":176684,"byte_end":176687,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":176692,"byte_end":176699,"line_start":744,"line_end":744,"column_start":5,"column_end":12}},{"value":"/ use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":176704,"byte_end":176723,"line_start":745,"line_end":745,"column_start":5,"column_end":24}},{"value":"/ use combine::parser::range::range;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":176728,"byte_end":176766,"line_start":746,"line_end":746,"column_start":5,"column_end":43}},{"value":"/ println!(","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":176771,"byte_end":176784,"line_start":747,"line_end":747,"column_start":5,"column_end":18}},{"value":"/     \"{}\",","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":176789,"byte_end":176802,"line_start":748,"line_end":748,"column_start":5,"column_end":18}},{"value":"/     range(&\"HTTP\"[..])","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":176807,"byte_end":176833,"line_start":749,"line_end":749,"column_start":5,"column_end":31}},{"value":"/         .easy_parse(\"HTT\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":176838,"byte_end":176868,"line_start":750,"line_end":750,"column_start":5,"column_end":35}},{"value":"/         .unwrap_err()","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":176873,"byte_end":176898,"line_start":751,"line_end":751,"column_start":5,"column_end":30}},{"value":"/         .map_range(|bytes| format!(\"{:?}\", bytes))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":176903,"byte_end":176957,"line_start":752,"line_end":752,"column_start":5,"column_end":59}},{"value":"/ );","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":176962,"byte_end":176968,"line_start":753,"line_end":753,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":176973,"byte_end":176980,"line_start":754,"line_end":754,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3935},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":178278,"byte_end":178284,"line_start":804,"line_end":804,"column_start":12,"column_end":18},"name":"Stream","qualname":"::stream::easy::Stream","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3938},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":178288,"byte_end":178293,"line_start":804,"line_end":804,"column_start":22,"column_end":27},"name":"0","qualname":"::stream::easy::Stream::0","value":"S","parent":{"krate":0,"index":3935},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":950},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"position","qualname":"::stream::position","value":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","parent":null,"children":[{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":956},{"krate":0,"index":959},{"krate":0,"index":962},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":969},{"krate":0,"index":972},{"krate":0,"index":975},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":981},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":990},{"krate":0,"index":998},{"krate":0,"index":1002},{"krate":0,"index":1004},{"krate":0,"index":1007},{"krate":0,"index":1011},{"krate":0,"index":1015},{"krate":0,"index":1018},{"krate":0,"index":3958},{"krate":0,"index":3963},{"krate":0,"index":3967},{"krate":0,"index":3971},{"krate":0,"index":3974},{"krate":0,"index":1021},{"krate":0,"index":1025},{"krate":0,"index":1028},{"krate":0,"index":1033},{"krate":0,"index":1044},{"krate":0,"index":1053},{"krate":0,"index":3979},{"krate":0,"index":3982},{"krate":0,"index":3984},{"krate":0,"index":3986},{"krate":0,"index":3988},{"krate":0,"index":3989},{"krate":0,"index":1058},{"krate":0,"index":1066},{"krate":0,"index":1069},{"krate":0,"index":3992},{"krate":0,"index":3995},{"krate":0,"index":3997},{"krate":0,"index":3998},{"krate":0,"index":4000},{"krate":0,"index":4001},{"krate":0,"index":4003},{"krate":0,"index":4004},{"krate":0,"index":4007},{"krate":0,"index":4009},{"krate":0,"index":1073},{"krate":0,"index":1075},{"krate":0,"index":1077},{"krate":0,"index":1079},{"krate":0,"index":1086},{"krate":0,"index":1093},{"krate":0,"index":1096},{"krate":0,"index":1110}],"decl_id":null,"docs":" Stream wrapper which provides more detailed position information.\n","sig":null,"attributes":[{"value":"/ Stream wrapper which provides more detailed position information.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":68348,"byte_end":68417,"line_start":61,"line_end":61,"column_start":1,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":990},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":180764,"byte_end":180774,"line_start":14,"line_end":14,"column_start":11,"column_end":21},"name":"Positioner","qualname":"::stream::position::Positioner","value":"Positioner<Item>","parent":null,"children":[{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997}],"decl_id":null,"docs":" Trait for tracking the current position of a `Stream`.\n","sig":null,"attributes":[{"value":"/ Trait for tracking the current position of a `Stream`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":180695,"byte_end":180753,"line_start":13,"line_end":13,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":992},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":180843,"byte_end":180851,"line_start":16,"line_end":16,"column_start":10,"column_end":18},"name":"Position","qualname":"::stream::position::Positioner::Position","value":"type Position: Clone + Ord;","parent":{"krate":0,"index":990},"children":[],"decl_id":null,"docs":" The type which keeps track of the position\n","sig":null,"attributes":[{"value":"/ The type which keeps track of the position","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":180787,"byte_end":180833,"line_start":15,"line_end":15,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":993},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":180876,"byte_end":180886,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"name":"Checkpoint","qualname":"::stream::position::Positioner::Checkpoint","value":"type Checkpoint: Clone;","parent":{"krate":0,"index":990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":180940,"byte_end":180948,"line_start":21,"line_end":21,"column_start":8,"column_end":16},"name":"position","qualname":"::stream::position::Positioner::position","value":"pub fn position(&Self) -> Self::Position","parent":{"krate":0,"index":990},"children":[],"decl_id":null,"docs":" Returns the current position\n","sig":null,"attributes":[{"value":"/ Returns the current position","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":180900,"byte_end":180932,"line_start":20,"line_end":20,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":181061,"byte_end":181067,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"update","qualname":"::stream::position::Positioner::update","value":"pub fn update(&mut Self, &Item)","parent":{"krate":0,"index":990},"children":[],"decl_id":null,"docs":" Updates the position given that `token` has been taken from the stream\n","sig":null,"attributes":[{"value":"/ Updates the position given that `token` has been taken from the stream","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":180979,"byte_end":181053,"line_start":22,"line_end":22,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":181102,"byte_end":181112,"line_start":25,"line_end":25,"column_start":8,"column_end":18},"name":"checkpoint","qualname":"::stream::position::Positioner::checkpoint","value":"pub fn checkpoint(&Self) -> Self::Checkpoint","parent":{"krate":0,"index":990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":181148,"byte_end":181153,"line_start":26,"line_end":26,"column_start":8,"column_end":13},"name":"reset","qualname":"::stream::position::Positioner::reset","value":"pub fn reset(&mut Self, Self::Checkpoint)","parent":{"krate":0,"index":990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":998},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":181273,"byte_end":181288,"line_start":30,"line_end":30,"column_start":11,"column_end":26},"name":"RangePositioner","qualname":"::stream::position::RangePositioner","value":"RangePositioner<Item, Range>: Positioner<Item>","parent":null,"children":[{"krate":0,"index":1001}],"decl_id":null,"docs":" Trait for tracking the current position of a `RangeStream`.\n","sig":null,"attributes":[{"value":"/ Trait for tracking the current position of a `RangeStream`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":181199,"byte_end":181262,"line_start":29,"line_end":29,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":181408,"byte_end":181420,"line_start":32,"line_end":32,"column_start":8,"column_end":20},"name":"update_range","qualname":"::stream::position::RangePositioner::update_range","value":"pub fn update_range(&mut Self, &Range)","parent":{"krate":0,"index":998},"children":[],"decl_id":null,"docs":" Updates the position given that `range` has been taken from the stream\n","sig":null,"attributes":[{"value":"/ Updates the position given that `range` has been taken from the stream","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":181326,"byte_end":181400,"line_start":31,"line_end":31,"column_start":5,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":1002},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":181533,"byte_end":181550,"line_start":36,"line_end":36,"column_start":11,"column_end":28},"name":"DefaultPositioned","qualname":"::stream::position::DefaultPositioned","value":"DefaultPositioned","parent":null,"children":[{"krate":0,"index":1003}],"decl_id":null,"docs":" Defines a default `Positioner` type for a particular `Stream` type.\n","sig":null,"attributes":[{"value":"/ Defines a default `Positioner` type for a particular `Stream` type.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":181451,"byte_end":181522,"line_start":35,"line_end":35,"column_start":1,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":1003},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":181562,"byte_end":181572,"line_start":37,"line_end":37,"column_start":10,"column_end":20},"name":"Positioner","qualname":"::stream::position::DefaultPositioned::Positioner","value":"type Positioner: Default;","parent":{"krate":0,"index":1002},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3958},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":182855,"byte_end":182861,"line_start":85,"line_end":85,"column_start":12,"column_end":18},"name":"Stream","qualname":"::stream::position::Stream","value":"Stream { input, positioner }","parent":null,"children":[{"krate":0,"index":3961},{"krate":0,"index":3962}],"decl_id":null,"docs":" The `Stream<Input>` struct maintains the current position in the stream `Input` using\n the `Positioner` trait to track the position.","sig":null,"attributes":[{"value":"/ The `Stream<Input>` struct maintains the current position in the stream `Input` using","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":182057,"byte_end":182146,"line_start":61,"line_end":61,"column_start":1,"column_end":90}},{"value":"/ the `Positioner` trait to track the position.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":182147,"byte_end":182196,"line_start":62,"line_end":62,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":182197,"byte_end":182200,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":182201,"byte_end":182208,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ # #![cfg(feature = \"std\")]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":182209,"byte_end":182239,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":182240,"byte_end":182267,"line_start":66,"line_end":66,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":182268,"byte_end":182289,"line_start":67,"line_end":67,"column_start":1,"column_end":22}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":182290,"byte_end":182322,"line_start":68,"line_end":68,"column_start":1,"column_end":33}},{"value":"/ # use combine::stream::position;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":182323,"byte_end":182359,"line_start":69,"line_end":69,"column_start":1,"column_end":37}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":182360,"byte_end":182377,"line_start":70,"line_end":70,"column_start":1,"column_end":18}},{"value":"/     let result = token(b'9')","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":182378,"byte_end":182410,"line_start":71,"line_end":71,"column_start":1,"column_end":33}},{"value":"/         .message(\"Not a nine\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":182411,"byte_end":182445,"line_start":72,"line_end":72,"column_start":1,"column_end":35}},{"value":"/         .easy_parse(position::Stream::new(&b\"8\"[..]));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":182446,"byte_end":182504,"line_start":73,"line_end":73,"column_start":1,"column_end":59}},{"value":"/     assert_eq!(result, Err(easy::Errors {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":182505,"byte_end":182550,"line_start":74,"line_end":74,"column_start":1,"column_end":46}},{"value":"/         position: 0,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":182551,"byte_end":182575,"line_start":75,"line_end":75,"column_start":1,"column_end":25}},{"value":"/         errors: vec![","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":182576,"byte_end":182601,"line_start":76,"line_end":76,"column_start":1,"column_end":26}},{"value":"/             easy::Error::Unexpected(b'8'.into()),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":182602,"byte_end":182655,"line_start":77,"line_end":77,"column_start":1,"column_end":54}},{"value":"/             easy::Error::Expected(b'9'.into()),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":182656,"byte_end":182707,"line_start":78,"line_end":78,"column_start":1,"column_end":52}},{"value":"/             easy::Error::Message(\"Not a nine\".into())","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":182708,"byte_end":182765,"line_start":79,"line_end":79,"column_start":1,"column_end":58}},{"value":"/         ]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":182766,"byte_end":182779,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     }));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":182780,"byte_end":182792,"line_start":81,"line_end":81,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":182793,"byte_end":182800,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":182801,"byte_end":182808,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":3961},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":182937,"byte_end":182942,"line_start":87,"line_end":87,"column_start":9,"column_end":14},"name":"input","qualname":"::stream::position::Stream::input","value":"Input","parent":{"krate":0,"index":3958},"children":[],"decl_id":null,"docs":" The input stream used when items are requested\n","sig":null,"attributes":[{"value":"/ The input stream used when items are requested","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":182878,"byte_end":182928,"line_start":86,"line_end":86,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":3962},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":183018,"byte_end":183028,"line_start":89,"line_end":89,"column_start":9,"column_end":19},"name":"positioner","qualname":"::stream::position::Stream::positioner","value":"X","parent":{"krate":0,"index":3958},"children":[],"decl_id":null,"docs":" The positioner used to update the current position\n","sig":null,"attributes":[{"value":"/ The positioner used to update the current position","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":182955,"byte_end":183009,"line_start":88,"line_end":88,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":183223,"byte_end":183238,"line_start":98,"line_end":98,"column_start":12,"column_end":27},"name":"with_positioner","qualname":"<Stream<Input, X>>::with_positioner","value":"pub fn with_positioner(Input, X) -> Stream<Input, X>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Stream<Input, X>` from an input stream and a positioner.\n","sig":null,"attributes":[{"value":"/ Creates a new `Stream<Input, X>` from an input stream and a positioner.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":183136,"byte_end":183211,"line_start":97,"line_end":97,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":183582,"byte_end":183585,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<Stream<Input, Input::Positioner>>::new","value":"pub fn new(Input) -> Stream<Input, Input::Positioner>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Stream<Input, X>` from an input stream and its default positioner.\n","sig":null,"attributes":[{"value":"/ Creates a new `Stream<Input, X>` from an input stream and its default positioner.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":183485,"byte_end":183570,"line_start":108,"line_end":108,"column_start":5,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":3979},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":186038,"byte_end":186053,"line_start":198,"line_end":198,"column_start":12,"column_end":27},"name":"IndexPositioner","qualname":"::stream::position::IndexPositioner","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `IndexPositioner<Item, Range>` struct maintains the current index into the stream `Input`.  The\n initial index is index 0.  Each `Item` committed increments the index by 1; each `range` committed\n increments the position by `range.len()`.\n","sig":null,"attributes":[{"value":"/ The `IndexPositioner<Item, Range>` struct maintains the current index into the stream `Input`.  The","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":185730,"byte_end":185833,"line_start":194,"line_end":194,"column_start":1,"column_end":104}},{"value":"/ initial index is index 0.  Each `Item` committed increments the index by 1; each `range` committed","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":185834,"byte_end":185936,"line_start":195,"line_end":195,"column_start":1,"column_end":103}},{"value":"/ increments the position by `range.len()`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":185937,"byte_end":185982,"line_start":196,"line_end":196,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":186574,"byte_end":186577,"line_start":229,"line_end":229,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexPositioner>::new","value":"pub fn new() -> IndexPositioner","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":186665,"byte_end":186682,"line_start":233,"line_end":233,"column_start":12,"column_end":29},"name":"new_with_position","qualname":"<IndexPositioner>::new_with_position","value":"pub fn new_with_position(usize) -> IndexPositioner","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3992},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":187114,"byte_end":187128,"line_start":250,"line_end":250,"column_start":12,"column_end":26},"name":"SourcePosition","qualname":"::stream::position::SourcePosition","value":"SourcePosition { line, column }","parent":null,"children":[{"krate":0,"index":3993},{"krate":0,"index":3994}],"decl_id":null,"docs":" Struct which represents a position in a source file.\n","sig":null,"attributes":[{"value":"/ Struct which represents a position in a source file.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":186984,"byte_end":187040,"line_start":248,"line_end":248,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":3993},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":187173,"byte_end":187177,"line_start":252,"line_end":252,"column_start":9,"column_end":13},"name":"line","qualname":"::stream::position::SourcePosition::line","value":"i32","parent":{"krate":0,"index":3992},"children":[],"decl_id":null,"docs":" Current line of the input\n","sig":null,"attributes":[{"value":"/ Current line of the input","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":187135,"byte_end":187164,"line_start":251,"line_end":251,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":3994},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":187228,"byte_end":187234,"line_start":254,"line_end":254,"column_start":9,"column_end":15},"name":"column","qualname":"::stream::position::SourcePosition::column","value":"i32","parent":{"krate":0,"index":3992},"children":[],"decl_id":null,"docs":" Current column of the input\n","sig":null,"attributes":[{"value":"/ Current column of the input","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":187188,"byte_end":187219,"line_start":253,"line_end":253,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":187570,"byte_end":187573,"line_start":270,"line_end":270,"column_start":12,"column_end":15},"name":"new","qualname":"<SourcePosition>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1117},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"read","qualname":"::stream::read","value":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","parent":null,"children":[{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1126},{"krate":0,"index":1129},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1137},{"krate":0,"index":1140},{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1147},{"krate":0,"index":4011},{"krate":0,"index":4019},{"krate":0,"index":1150},{"krate":0,"index":1152},{"krate":0,"index":1154},{"krate":0,"index":1173},{"krate":0,"index":1187},{"krate":0,"index":1190},{"krate":0,"index":1197}],"decl_id":null,"docs":" Stream wrapper allowing `std::io::Read` to be used\n","sig":null,"attributes":[{"value":"/ Stream wrapper allowing `std::io::Read` to be used","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":68436,"byte_end":68490,"line_start":63,"line_end":63,"column_start":1,"column_end":55}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":68491,"byte_end":68514,"line_start":64,"line_end":64,"column_start":1,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4012},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":192757,"byte_end":192767,"line_start":13,"line_end":13,"column_start":5,"column_end":15},"name":"Unexpected","qualname":"::stream::read::Error::Unexpected","value":"Error::Unexpected","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4014},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":192773,"byte_end":192783,"line_start":14,"line_end":14,"column_start":5,"column_end":15},"name":"EndOfInput","qualname":"::stream::read::Error::EndOfInput","value":"Error::EndOfInput","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4016},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":192789,"byte_end":192791,"line_start":15,"line_end":15,"column_start":5,"column_end":7},"name":"Io","qualname":"::stream::read::Error::Io","value":"Error::Io(io::Error)","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4011},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":192745,"byte_end":192750,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Error","qualname":"::stream::read::Error","value":"pub enum Error { Unexpected, EndOfInput, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":4012},{"krate":0,"index":4014},{"krate":0,"index":4016}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1187},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":195941,"byte_end":195947,"line_start":157,"line_end":157,"column_start":12,"column_end":18},"name":"Stream","qualname":"::stream::read::Stream","value":"Stream {  }","parent":null,"children":[{"krate":0,"index":1189}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1199},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":197359,"byte_end":197362,"line_start":205,"line_end":205,"column_start":12,"column_end":15},"name":"new","qualname":"<Stream<R>>::new","value":"pub fn new(R) -> Stream<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `StreamOnce` instance from a value implementing `std::io::Read`.","sig":null,"attributes":[{"value":"/ Creates a `StreamOnce` instance from a value implementing `std::io::Read`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":196425,"byte_end":196503,"line_start":181,"line_end":181,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":196508,"byte_end":196511,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ NOTE: This type do not implement `Positioned` and `Clone` and must be wrapped with types","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":196516,"byte_end":196608,"line_start":183,"line_end":183,"column_start":5,"column_end":97}},{"value":"/     such as `BufferedStreamRef` and `State` to become a `Stream` which can be parsed","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":196613,"byte_end":196701,"line_start":184,"line_end":184,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":196706,"byte_end":196709,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":196714,"byte_end":196725,"line_start":186,"line_end":186,"column_start":5,"column_end":16}},{"value":"/ # #![cfg(feature = \"std\")]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":196730,"byte_end":196760,"line_start":187,"line_end":187,"column_start":5,"column_end":35}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":196765,"byte_end":196792,"line_start":188,"line_end":188,"column_start":5,"column_end":32}},{"value":"/ use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":196797,"byte_end":196816,"line_start":189,"line_end":189,"column_start":5,"column_end":24}},{"value":"/ use combine::parser::byte::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":196821,"byte_end":196854,"line_start":190,"line_end":190,"column_start":5,"column_end":38}},{"value":"/ use combine::stream::read;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":196859,"byte_end":196889,"line_start":191,"line_end":191,"column_start":5,"column_end":35}},{"value":"/ use combine::stream::buffered;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":196894,"byte_end":196928,"line_start":192,"line_end":192,"column_start":5,"column_end":39}},{"value":"/ use combine::stream::position;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":196933,"byte_end":196967,"line_start":193,"line_end":193,"column_start":5,"column_end":39}},{"value":"/ use std::io::Read;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":196972,"byte_end":196994,"line_start":194,"line_end":194,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":196999,"byte_end":197002,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":197007,"byte_end":197024,"line_start":196,"line_end":196,"column_start":5,"column_end":22}},{"value":"/ let input: &[u8] = b\"123,\";","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":197029,"byte_end":197060,"line_start":197,"line_end":197,"column_start":5,"column_end":36}},{"value":"/ let stream = buffered::Stream::new(position::Stream::new(read::Stream::new(input)), 1);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":197065,"byte_end":197156,"line_start":198,"line_end":198,"column_start":5,"column_end":96}},{"value":"/ let result = (many(digit()), byte(b','))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":197161,"byte_end":197205,"line_start":199,"line_end":199,"column_start":5,"column_end":49}},{"value":"/     .parse(stream)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":197210,"byte_end":197232,"line_start":200,"line_end":200,"column_start":5,"column_end":27}},{"value":"/     .map(|t| t.0);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":197237,"byte_end":197259,"line_start":201,"line_end":201,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(result, Ok((vec![b'1', b'2', b'3'], b',')));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":197264,"byte_end":197323,"line_start":202,"line_end":202,"column_start":5,"column_end":64}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":197328,"byte_end":197335,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":197340,"byte_end":197347,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":1200},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/span.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"span","qualname":"::stream::span","value":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/span.rs","parent":null,"children":[{"krate":0,"index":1201},{"krate":0,"index":1202},{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1209},{"krate":0,"index":1212},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1219},{"krate":0,"index":1222},{"krate":0,"index":1225},{"krate":0,"index":1228},{"krate":0,"index":1231},{"krate":0,"index":4021},{"krate":0,"index":4025},{"krate":0,"index":4027},{"krate":0,"index":4030},{"krate":0,"index":4033},{"krate":0,"index":4036},{"krate":0,"index":4038},{"krate":0,"index":4042},{"krate":0,"index":4044},{"krate":0,"index":4047},{"krate":0,"index":4050},{"krate":0,"index":1234},{"krate":0,"index":1237},{"krate":0,"index":4053},{"krate":0,"index":4059},{"krate":0,"index":4062},{"krate":0,"index":4067},{"krate":0,"index":4070},{"krate":0,"index":4074},{"krate":0,"index":4077},{"krate":0,"index":4081},{"krate":0,"index":1242},{"krate":0,"index":1246},{"krate":0,"index":1252},{"krate":0,"index":1261},{"krate":0,"index":1271}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4021},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/span.rs","byte_start":197753,"byte_end":197757,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Span","qualname":"::stream::span::Span","value":"Span { start, end }","parent":null,"children":[{"krate":0,"index":4023},{"krate":0,"index":4024}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4023},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/span.rs","byte_start":197771,"byte_end":197776,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"start","qualname":"::stream::span::Span::start","value":"P","parent":{"krate":0,"index":4021},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4024},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/span.rs","byte_start":197789,"byte_end":197792,"line_start":12,"line_end":12,"column_start":9,"column_end":12},"name":"end","qualname":"::stream::span::Span::end","value":"P","parent":{"krate":0,"index":4021},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/span.rs","byte_start":198005,"byte_end":198008,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"map","qualname":"<Span<P>>::map","value":"pub fn map<Q, impl FnMut(P) -> Q: FnMut(P) -> Q>(Self, impl FnMut(P) -> Q)\n-> Span<Q>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4053},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/span.rs","byte_start":198212,"byte_end":198218,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"Stream","qualname":"::stream::span::Stream","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4057},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/span.rs","byte_start":198225,"byte_end":198230,"line_start":38,"line_end":38,"column_start":25,"column_end":30},"name":"0","qualname":"::stream::span::Stream::0","value":"S","parent":{"krate":0,"index":4053},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1275},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/state.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"state","qualname":"::stream::state","value":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/state.rs","parent":null,"children":[{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1284},{"krate":0,"index":1287},{"krate":0,"index":1290},{"krate":0,"index":1293},{"krate":0,"index":4085},{"krate":0,"index":4090},{"krate":0,"index":4093},{"krate":0,"index":4097},{"krate":0,"index":4100},{"krate":0,"index":4104},{"krate":0,"index":4107},{"krate":0,"index":4112},{"krate":0,"index":4116},{"krate":0,"index":4120},{"krate":0,"index":1296},{"krate":0,"index":1300},{"krate":0,"index":1306},{"krate":0,"index":1315}],"decl_id":null,"docs":" Stream wrapper allowing custom state to be used.\n","sig":null,"attributes":[{"value":"/ Stream wrapper allowing custom state to be used.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":68590,"byte_end":68642,"line_start":68,"line_end":68,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":4085},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/state.rs","byte_start":201879,"byte_end":201885,"line_start":7,"line_end":7,"column_start":12,"column_end":18},"name":"Stream","qualname":"::stream::state::Stream","value":"Stream { stream, state }","parent":null,"children":[{"krate":0,"index":4088},{"krate":0,"index":4089}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4088},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/state.rs","byte_start":201902,"byte_end":201908,"line_start":8,"line_end":8,"column_start":9,"column_end":15},"name":"stream","qualname":"::stream::state::Stream::stream","value":"S","parent":{"krate":0,"index":4085},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4089},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/state.rs","byte_start":201921,"byte_end":201926,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"state","qualname":"::stream::state::Stream::state","value":"U","parent":{"krate":0,"index":4085},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1325},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"decoder","qualname":"::stream::decoder","value":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","parent":null,"children":[{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1337},{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1348},{"krate":0,"index":4124},{"krate":0,"index":4133},{"krate":0,"index":1351},{"krate":0,"index":1355},{"krate":0,"index":1358},{"krate":0,"index":4137},{"krate":0,"index":4145},{"krate":0,"index":1362},{"krate":0,"index":1367},{"krate":0,"index":1371},{"krate":0,"index":1375},{"krate":0,"index":1383}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":68659,"byte_end":68682,"line_start":71,"line_end":71,"column_start":1,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4127},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":203888,"byte_end":203893,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"name":"Parse","qualname":"::stream::decoder::Error::Parse","value":"Error::Parse(E)","parent":{"krate":0,"index":4124},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4130},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":203902,"byte_end":203904,"line_start":17,"line_end":17,"column_start":5,"column_end":7},"name":"Io","qualname":"::stream::decoder::Error::Io","value":"Error::Io { position, error }","parent":{"krate":0,"index":4124},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4124},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":203870,"byte_end":203875,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::stream::decoder::Error","value":"pub enum Error<E, P> {\n    Parse(E),\n    Io {\n        position: P,\n        error: io::Error,\n    },\n}","parent":null,"children":[{"krate":0,"index":4127},{"krate":0,"index":4130}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4137},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":204850,"byte_end":204857,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::stream::decoder::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":4141},{"krate":0,"index":4142},{"krate":0,"index":4143},{"krate":0,"index":4144}],"decl_id":null,"docs":" Used together with the `decode!` macro\n","sig":null,"attributes":[{"value":"/ Used together with the `decode!` macro","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":204796,"byte_end":204838,"line_start":52,"line_end":52,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1365},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":205278,"byte_end":205281,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder<S, P, Buffer>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new [`Decoder`] with an internal buffer. Allows any `AsyncRead/Read` instance to\n be used when decoding but there may be data left in the internal buffer after decoding\n (accessible with [`Decoder::buffer`])\n","sig":null,"attributes":[{"value":"/ Constructs a new [`Decoder`] with an internal buffer. Allows any `AsyncRead/Read` instance to","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":205028,"byte_end":205125,"line_start":65,"line_end":65,"column_start":5,"column_end":102}},{"value":"/ be used when decoding but there may be data left in the internal buffer after decoding","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":205130,"byte_end":205220,"line_start":66,"line_end":66,"column_start":5,"column_end":95}},{"value":"/ (accessible with [`Decoder::buffer`])","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":205225,"byte_end":205266,"line_start":67,"line_end":67,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":205582,"byte_end":205592,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"name":"new_buffer","qualname":"<Decoder<S, P, Buffer>>::new_buffer","value":"pub fn new_buffer() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new [`Decoder`] with an internal buffer. Allows any `AsyncRead/Read` instance to\n be used when decoding but there may be data left in the internal buffer after decoding\n (accessible with [`Decoder::buffer`])\n","sig":null,"attributes":[{"value":"/ Constructs a new [`Decoder`] with an internal buffer. Allows any `AsyncRead/Read` instance to","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":205332,"byte_end":205429,"line_start":72,"line_end":72,"column_start":5,"column_end":102}},{"value":"/ be used when decoding but there may be data left in the internal buffer after decoding","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":205434,"byte_end":205524,"line_start":73,"line_end":73,"column_start":5,"column_end":95}},{"value":"/ (accessible with [`Decoder::buffer`])","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":205529,"byte_end":205570,"line_start":74,"line_end":74,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1370},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":205938,"byte_end":205952,"line_start":89,"line_end":89,"column_start":12,"column_end":26},"name":"new_bufferless","qualname":"<Decoder<S, P, Bufferless>>::new_bufferless","value":"pub fn new_bufferless() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Decoder` without an internal buffer. Requires the read instance to be\n wrapped with combine's [`BufReader`] instance to","sig":null,"attributes":[{"value":"/ Constructs a new `Decoder` without an internal buffer. Requires the read instance to be","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":205718,"byte_end":205809,"line_start":85,"line_end":85,"column_start":5,"column_end":96}},{"value":"/ wrapped with combine's [`BufReader`] instance to","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":205814,"byte_end":205866,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":205871,"byte_end":205874,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ [`BufReader`]: super::buf_reader::BufReader","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":205879,"byte_end":205926,"line_start":88,"line_end":88,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":206039,"byte_end":206045,"line_start":95,"line_end":95,"column_start":12,"column_end":18},"name":"buffer","qualname":"<Decoder<S, P>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":206159,"byte_end":206166,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"advance","qualname":"<Decoder<S, P, C>>::advance","value":"pub fn advance<R>(&mut Self, &mut R, usize) where C: CombineBuffer<R>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1381},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":206811,"byte_end":206819,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"position","qualname":"<Decoder<S, P, C>>::position","value":"pub fn position(&Self) -> &P","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1382},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":206895,"byte_end":206902,"line_start":127,"line_end":127,"column_start":12,"column_end":19},"name":"__inner","qualname":"<Decoder<S, P, C>>::__inner","value":"pub fn __inner(&mut Self) -> (&mut S, &mut P, &C, bool)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1387},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":207171,"byte_end":207185,"line_start":142,"line_end":142,"column_start":12,"column_end":26},"name":"__before_parse","qualname":"<Decoder<S, P, C>>::__before_parse","value":"pub fn __before_parse<R>(&mut Self, R) -> io::Result<()> where R: Read,\nC: crate::stream::buf_reader::CombineSyncRead<R>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1389},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":68791,"byte_end":68801,"line_start":76,"line_end":76,"column_start":11,"column_end":21},"name":"Positioned","qualname":"::stream::Positioned","value":"Positioned: StreamOnce","parent":null,"children":[{"krate":0,"index":1390}],"decl_id":null,"docs":" A type which has a position.\n","sig":null,"attributes":[{"value":"/ A type which has a position.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":68748,"byte_end":68780,"line_start":75,"line_end":75,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":68875,"byte_end":68883,"line_start":78,"line_end":78,"column_start":8,"column_end":16},"name":"position","qualname":"::stream::Positioned::position","value":"pub fn position(&Self) -> Self::Position","parent":{"krate":0,"index":1389},"children":[],"decl_id":null,"docs":" Returns the current position of the stream.\n","sig":null,"attributes":[{"value":"/ Returns the current position of the stream.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":68820,"byte_end":68867,"line_start":77,"line_end":77,"column_start":5,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1391},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":69755,"byte_end":69769,"line_start":109,"line_end":109,"column_start":10,"column_end":24},"name":"StreamErrorFor","qualname":"::stream::StreamErrorFor","value":"<<Input as StreamOnce>::Error as\nParseError<<Input as StreamOnce>::Token, <Input as StreamOnce>::Range,\n           <Input as StreamOnce>::Position>>::StreamError","parent":null,"children":[],"decl_id":null,"docs":" Convenience alias over the `StreamError` for the input stream `Input`","sig":null,"attributes":[{"value":"/ Convenience alias over the `StreamError` for the input stream `Input`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":68913,"byte_end":68986,"line_start":81,"line_end":81,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":68987,"byte_end":68990,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":68991,"byte_end":68998,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/ #[macro_use]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":68999,"byte_end":69015,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/ extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":69016,"byte_end":69041,"line_start":85,"line_end":85,"column_start":1,"column_end":26}},{"value":"/ use combine::{easy, Parser, Stream, many1};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":69042,"byte_end":69089,"line_start":86,"line_end":86,"column_start":1,"column_end":48}},{"value":"/ use combine::parser::char::letter;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":69090,"byte_end":69128,"line_start":87,"line_end":87,"column_start":1,"column_end":39}},{"value":"/ use combine::stream::StreamErrorFor;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":69129,"byte_end":69169,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/ use combine::error::{ParseError, StreamError};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":69170,"byte_end":69220,"line_start":89,"line_end":89,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":69221,"byte_end":69224,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ parser!{","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":69225,"byte_end":69237,"line_start":91,"line_end":91,"column_start":1,"column_end":13}},{"value":"/    fn parser[Input]()(Input) -> String","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":69238,"byte_end":69280,"line_start":92,"line_end":92,"column_start":1,"column_end":43}},{"value":"/     where [ Input: Stream<Token = char>, ]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":69281,"byte_end":69327,"line_start":93,"line_end":93,"column_start":1,"column_end":47}},{"value":"/     {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":69328,"byte_end":69337,"line_start":94,"line_end":94,"column_start":1,"column_end":10}},{"value":"/         many1(letter()).and_then(|word: String| {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":69338,"byte_end":69391,"line_start":95,"line_end":95,"column_start":1,"column_end":54}},{"value":"/             if word == \"combine\" {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":69392,"byte_end":69430,"line_start":96,"line_end":96,"column_start":1,"column_end":39}},{"value":"/                 Ok(word)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":69431,"byte_end":69459,"line_start":97,"line_end":97,"column_start":1,"column_end":29}},{"value":"/             } else {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":69460,"byte_end":69484,"line_start":98,"line_end":98,"column_start":1,"column_end":25}},{"value":"/                 // The alias makes it easy to refer to the `StreamError` type of `Input`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":69485,"byte_end":69577,"line_start":99,"line_end":99,"column_start":1,"column_end":93}},{"value":"/                 Err(StreamErrorFor::<Input>::expected_static_message(\"combine\"))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":69578,"byte_end":69662,"line_start":100,"line_end":100,"column_start":1,"column_end":85}},{"value":"/             }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":69663,"byte_end":69680,"line_start":101,"line_end":101,"column_start":1,"column_end":18}},{"value":"/         })","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":69681,"byte_end":69695,"line_start":102,"line_end":102,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":69696,"byte_end":69705,"line_start":103,"line_end":103,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":69706,"byte_end":69711,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":69712,"byte_end":69715,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":69716,"byte_end":69731,"line_start":106,"line_end":106,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":69732,"byte_end":69737,"line_start":107,"line_end":107,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":69738,"byte_end":69745,"line_start":108,"line_end":108,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":1393},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":70039,"byte_end":70049,"line_start":116,"line_end":116,"column_start":11,"column_end":21},"name":"StreamOnce","qualname":"::stream::StreamOnce","value":"StreamOnce","parent":null,"children":[{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399}],"decl_id":null,"docs":" `StreamOnce` represents a sequence of items that can be extracted one by one.\n","sig":null,"attributes":[{"value":"/ `StreamOnce` represents a sequence of items that can be extracted one by one.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":69947,"byte_end":70028,"line_start":115,"line_end":115,"column_start":1,"column_end":82}}]},{"kind":"Type","id":{"krate":0,"index":1394},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":70122,"byte_end":70127,"line_start":118,"line_end":118,"column_start":10,"column_end":15},"name":"Token","qualname":"::stream::StreamOnce::Token","value":"type Token: Clone;","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" The type of items which is yielded from this stream.\n","sig":null,"attributes":[{"value":"/ The type of items which is yielded from this stream.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":70056,"byte_end":70112,"line_start":117,"line_end":117,"column_start":5,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1395},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":70334,"byte_end":70339,"line_start":123,"line_end":123,"column_start":10,"column_end":15},"name":"Range","qualname":"::stream::StreamOnce::Range","value":"type Range: Clone;","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" The type of a range of items yielded from this stream.\n Types which do not a have a way of yielding ranges of items should just use the\n `Self::Token` for this type.\n","sig":null,"attributes":[{"value":"/ The type of a range of items yielded from this stream.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":70141,"byte_end":70199,"line_start":120,"line_end":120,"column_start":5,"column_end":63}},{"value":"/ Types which do not a have a way of yielding ranges of items should just use the","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":70204,"byte_end":70287,"line_start":121,"line_end":121,"column_start":5,"column_end":88}},{"value":"/ `Self::Token` for this type.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":70292,"byte_end":70324,"line_start":122,"line_end":122,"column_start":5,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1396},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":70512,"byte_end":70520,"line_start":127,"line_end":127,"column_start":10,"column_end":18},"name":"Position","qualname":"::stream::StreamOnce::Position","value":"type Position: Clone + Ord;","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" Type which represents the position in a stream.\n `Ord` is required to allow parsers to determine which of two positions are further ahead.\n","sig":null,"attributes":[{"value":"/ Type which represents the position in a stream.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":70353,"byte_end":70404,"line_start":125,"line_end":125,"column_start":5,"column_end":56}},{"value":"/ `Ord` is required to allow parsers to determine which of two positions are further ahead.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":70409,"byte_end":70502,"line_start":126,"line_end":126,"column_start":5,"column_end":98}}]},{"kind":"Type","id":{"krate":0,"index":1397},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":70545,"byte_end":70550,"line_start":129,"line_end":129,"column_start":10,"column_end":15},"name":"Error","qualname":"::stream::StreamOnce::Error","value":"type Error: ParseError<Self::Token, Self::Range, Self::Position>;","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1398},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":70770,"byte_end":70776,"line_start":132,"line_end":132,"column_start":8,"column_end":14},"name":"uncons","qualname":"::stream::StreamOnce::uncons","value":"pub fn uncons(&mut Self) -> Result<Self::Token, StreamErrorFor<Self>>","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" Takes a stream and removes its first token, yielding the token and the rest of the elements.\n Returns `Err` if no element could be retrieved.\n","sig":null,"attributes":[{"value":"/ Takes a stream and removes its first token, yielding the token and the rest of the elements.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":70610,"byte_end":70706,"line_start":130,"line_end":130,"column_start":5,"column_end":101}},{"value":"/ Returns `Err` if no element could be retrieved.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":70711,"byte_end":70762,"line_start":131,"line_end":131,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":70946,"byte_end":70956,"line_start":137,"line_end":137,"column_start":8,"column_end":18},"name":"is_partial","qualname":"::stream::StreamOnce::is_partial","value":"pub fn is_partial(&Self) -> bool","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" Returns `true` if this stream only contains partial input.","sig":null,"attributes":[{"value":"/ Returns `true` if this stream only contains partial input.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":70839,"byte_end":70901,"line_start":134,"line_end":134,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":70906,"byte_end":70909,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ See `PartialStream`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":70914,"byte_end":70938,"line_start":136,"line_end":136,"column_start":5,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":1400},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":71088,"byte_end":71099,"line_start":143,"line_end":143,"column_start":11,"column_end":22},"name":"ResetStream","qualname":"::stream::ResetStream","value":"ResetStream: StreamOnce","parent":null,"children":[{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1403}],"decl_id":null,"docs":" A `StreamOnce` which can create checkpoints which the stream can be reset to\n","sig":null,"attributes":[{"value":"/ A `StreamOnce` which can create checkpoints which the stream can be reset to","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":70997,"byte_end":71077,"line_start":142,"line_end":142,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":1401},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":71123,"byte_end":71133,"line_start":144,"line_end":144,"column_start":10,"column_end":20},"name":"Checkpoint","qualname":"::stream::ResetStream::Checkpoint","value":"type Checkpoint: Clone;","parent":{"krate":0,"index":1400},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1402},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":71281,"byte_end":71291,"line_start":148,"line_end":148,"column_start":8,"column_end":18},"name":"checkpoint","qualname":"::stream::ResetStream::checkpoint","value":"pub fn checkpoint(&Self) -> Self::Checkpoint","parent":{"krate":0,"index":1400},"children":[],"decl_id":null,"docs":" Creates a `Checkpoint` at the current position which can be used to reset the stream\n later to the current position\n","sig":null,"attributes":[{"value":"/ Creates a `Checkpoint` at the current position which can be used to reset the stream","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":71147,"byte_end":71235,"line_start":146,"line_end":146,"column_start":5,"column_end":93}},{"value":"/ later to the current position","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":71240,"byte_end":71273,"line_start":147,"line_end":147,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1403},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":71388,"byte_end":71393,"line_start":150,"line_end":150,"column_start":8,"column_end":13},"name":"reset","qualname":"::stream::ResetStream::reset","value":"pub fn reset(&mut Self, Self::Checkpoint) -> Result<(), Self::Error>","parent":{"krate":0,"index":1400},"children":[],"decl_id":null,"docs":" Attempts to reset the stream to an earlier position.\n","sig":null,"attributes":[{"value":"/ Attempts to reset the stream to an earlier position.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":71324,"byte_end":71380,"line_start":149,"line_end":149,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":1404},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":71910,"byte_end":71916,"line_start":163,"line_end":163,"column_start":11,"column_end":17},"name":"Stream","qualname":"::stream::Stream","value":"Stream: StreamOnce + ResetStream + Positioned","parent":null,"children":[],"decl_id":null,"docs":" A stream of tokens which can be duplicated","sig":null,"attributes":[{"value":"/ A stream of tokens which can be duplicated","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":71629,"byte_end":71675,"line_start":158,"line_end":158,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":71676,"byte_end":71679,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ This is a trait over types which implement the `StreamOnce`, `ResetStream` and `Positioned`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":71680,"byte_end":71775,"line_start":160,"line_end":160,"column_start":1,"column_end":96}},{"value":"/ traits. If you need a custom `Stream` object then implement those traits and `Stream` is","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":71776,"byte_end":71868,"line_start":161,"line_end":161,"column_start":1,"column_end":93}},{"value":"/ implemented automatically.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":71869,"byte_end":71899,"line_start":162,"line_end":162,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":1407},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":72142,"byte_end":72148,"line_start":173,"line_end":173,"column_start":8,"column_end":14},"name":"uncons","qualname":"::stream::uncons","value":"pub fn uncons<Input: ?Sized>(&mut Input)\n-> ParseResult<Input::Token, Input::Error> where Input: Stream","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":72125,"byte_end":72134,"line_start":172,"line_end":172,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":1409},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":72469,"byte_end":72484,"line_start":184,"line_end":184,"column_start":11,"column_end":26},"name":"RangeStreamOnce","qualname":"::stream::RangeStreamOnce","value":"RangeStreamOnce: StreamOnce + ResetStream","parent":null,"children":[{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1413},{"krate":0,"index":1416},{"krate":0,"index":1417}],"decl_id":null,"docs":" A `RangeStream` is an extension of `StreamOnce` which allows for zero copy parsing.\n","sig":null,"attributes":[{"value":"/ A `RangeStream` is an extension of `StreamOnce` which allows for zero copy parsing.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":72371,"byte_end":72458,"line_start":183,"line_end":183,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":72630,"byte_end":72642,"line_start":187,"line_end":187,"column_start":8,"column_end":20},"name":"uncons_range","qualname":"::stream::RangeStreamOnce::uncons_range","value":"pub fn uncons_range(&mut Self, usize)\n-> Result<Self::Range, StreamErrorFor<Self>>","parent":{"krate":0,"index":1409},"children":[],"decl_id":null,"docs":" Takes `size` elements from the stream.\n Fails if the length of the stream is less than `size`.\n","sig":null,"attributes":[{"value":"/ Takes `size` elements from the stream.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":72517,"byte_end":72559,"line_start":185,"line_end":185,"column_start":5,"column_end":47}},{"value":"/ Fails if the length of the stream is less than `size`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":72564,"byte_end":72622,"line_start":186,"line_end":186,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1411},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":72850,"byte_end":72862,"line_start":191,"line_end":191,"column_start":8,"column_end":20},"name":"uncons_while","qualname":"::stream::RangeStreamOnce::uncons_while","value":"pub fn uncons_while<F>(&mut Self, F)\n-> Result<Self::Range, StreamErrorFor<Self>> where F: FnMut(Self::Token) ->\nbool","parent":{"krate":0,"index":1409},"children":[],"decl_id":null,"docs":" Takes items from stream, testing each one with `predicate`.\n returns the range of items which passed `predicate`.\n","sig":null,"attributes":[{"value":"/ Takes items from stream, testing each one with `predicate`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":72718,"byte_end":72781,"line_start":189,"line_end":189,"column_start":5,"column_end":68}},{"value":"/ returns the range of items which passed `predicate`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":72786,"byte_end":72842,"line_start":190,"line_end":190,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1413},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":73246,"byte_end":73259,"line_start":202,"line_end":202,"column_start":8,"column_end":21},"name":"uncons_while1","qualname":"::stream::RangeStreamOnce::uncons_while1","value":"pub fn uncons_while1<F>(&mut Self, F)\n-> ParseResult<Self::Range, StreamErrorFor<Self>> where F: FnMut(Self::Token)\n-> bool","parent":{"krate":0,"index":1409},"children":[],"decl_id":null,"docs":" Takes items from stream, testing each one with `predicate`\n returns a range of at least one items which passed `predicate`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":72982,"byte_end":72991,"line_start":195,"line_end":195,"column_start":5,"column_end":14}},{"value":"/ Takes items from stream, testing each one with `predicate`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":72996,"byte_end":73058,"line_start":196,"line_end":196,"column_start":5,"column_end":67}},{"value":"/ returns a range of at least one items which passed `predicate`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":73063,"byte_end":73130,"line_start":197,"line_end":197,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":73135,"byte_end":73138,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":73143,"byte_end":73153,"line_start":199,"line_end":199,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":73158,"byte_end":73161,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ This may not return `PeekOk` as it should uncons at least one token.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":73166,"byte_end":73238,"line_start":201,"line_end":201,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1416},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":74295,"byte_end":74303,"line_start":235,"line_end":235,"column_start":8,"column_end":16},"name":"distance","qualname":"::stream::RangeStreamOnce::distance","value":"pub fn distance(&Self, &Self::Checkpoint) -> usize","parent":{"krate":0,"index":1409},"children":[],"decl_id":null,"docs":" Returns the distance between `self` and `end`. The returned `usize` must be so that","sig":null,"attributes":[{"value":"/ Returns the distance between `self` and `end`. The returned `usize` must be so that","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":74038,"byte_end":74125,"line_start":228,"line_end":228,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":74130,"byte_end":74133,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":74138,"byte_end":74151,"line_start":230,"line_end":230,"column_start":5,"column_end":18}},{"value":"/ let start = stream.checkpoint();","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":74156,"byte_end":74192,"line_start":231,"line_end":231,"column_start":5,"column_end":41}},{"value":"/ stream.uncons_range(distance);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":74197,"byte_end":74231,"line_start":232,"line_end":232,"column_start":5,"column_end":39}},{"value":"/ stream.distance(&start) == distance","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":74236,"byte_end":74275,"line_start":233,"line_end":233,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":74280,"byte_end":74287,"line_start":234,"line_end":234,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1417},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":74396,"byte_end":74401,"line_start":238,"line_end":238,"column_start":8,"column_end":13},"name":"range","qualname":"::stream::RangeStreamOnce::range","value":"pub fn range(&Self) -> Self::Range","parent":{"krate":0,"index":1409},"children":[],"decl_id":null,"docs":" Returns the entire range of `self`\n","sig":null,"attributes":[{"value":"/ Returns the entire range of `self`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":74350,"byte_end":74388,"line_start":237,"line_end":237,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":1418},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":74522,"byte_end":74533,"line_start":242,"line_end":242,"column_start":11,"column_end":22},"name":"RangeStream","qualname":"::stream::RangeStream","value":"RangeStream: Stream + RangeStreamOnce","parent":null,"children":[],"decl_id":null,"docs":" A `RangeStream` is an extension of `Stream` which allows for zero copy parsing.\n","sig":null,"attributes":[{"value":"/ A `RangeStream` is an extension of `Stream` which allows for zero copy parsing.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":74428,"byte_end":74511,"line_start":241,"line_end":241,"column_start":1,"column_end":84}}]},{"kind":"Function","id":{"krate":0,"index":1421},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":74662,"byte_end":74679,"line_start":247,"line_end":247,"column_start":8,"column_end":25},"name":"wrap_stream_error","qualname":"::stream::wrap_stream_error","value":"pub fn wrap_stream_error<T,\n                         Input: ?Sized>(&Input,\n                                        <Input::Error as\n                                        ParseError<Input::Token, Input::Range,\n                                                   Input::Position>>::StreamError)\n-> ParseResult<T, <Input as StreamOnce>::Error> where Input: StreamOnce +\nPositioned","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1424},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":75091,"byte_end":75103,"line_start":263,"line_end":263,"column_start":8,"column_end":20},"name":"uncons_range","qualname":"::stream::uncons_range","value":"pub fn uncons_range<Input: ?Sized>(&mut Input, usize)\n-> ParseResult<Input::Range, <Input as StreamOnce>::Error> where\nInput: RangeStream","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":75074,"byte_end":75083,"line_start":262,"line_end":262,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1426},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":75518,"byte_end":75530,"line_start":283,"line_end":283,"column_start":8,"column_end":20},"name":"input_at_eof","qualname":"::stream::input_at_eof","value":"pub fn input_at_eof<Input: ?Sized>(&mut Input) -> bool where Input: Stream","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1429},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":75877,"byte_end":75889,"line_start":297,"line_end":297,"column_start":8,"column_end":20},"name":"uncons_while","qualname":"::stream::uncons_while","value":"pub fn uncons_while<Input: ?Sized, F>(&mut Input, F)\n-> ParseResult<Input::Range, Input::Error> where F: FnMut(Input::Token) ->\nbool, Input: RangeStream, Input::Range: Range","parent":null,"children":[],"decl_id":null,"docs":" Removes items from the input while `predicate` returns `true`.\n","sig":null,"attributes":[{"value":"/ Removes items from the input while `predicate` returns `true`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":75793,"byte_end":75859,"line_start":295,"line_end":295,"column_start":1,"column_end":67}},{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":75860,"byte_end":75869,"line_start":296,"line_end":296,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1432},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":76925,"byte_end":76938,"line_start":332,"line_end":332,"column_start":8,"column_end":21},"name":"uncons_while1","qualname":"::stream::uncons_while1","value":"pub fn uncons_while1<Input: ?Sized, F>(&mut Input, F)\n-> ParseResult<Input::Range, Input::Error> where F: FnMut(Input::Token) ->\nbool, Input: RangeStream","parent":null,"children":[],"decl_id":null,"docs":" Takes items from stream, testing each one with `predicate`\n returns a range of at least one items which passed `predicate`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":76685,"byte_end":76694,"line_start":325,"line_end":325,"column_start":1,"column_end":10}},{"value":"/ Takes items from stream, testing each one with `predicate`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":76695,"byte_end":76757,"line_start":326,"line_end":326,"column_start":1,"column_end":63}},{"value":"/ returns a range of at least one items which passed `predicate`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":76758,"byte_end":76825,"line_start":327,"line_end":327,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":76826,"byte_end":76829,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":76830,"byte_end":76840,"line_start":329,"line_end":329,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":76841,"byte_end":76844,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ This may not return `PeekOk` as it should uncons at least one token.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":76845,"byte_end":76917,"line_start":331,"line_end":331,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":1435},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":78629,"byte_end":78634,"line_start":382,"line_end":382,"column_start":11,"column_end":16},"name":"Range","qualname":"::stream::Range","value":"Range","parent":null,"children":[{"krate":0,"index":1436},{"krate":0,"index":1437}],"decl_id":null,"docs":" Trait representing a range of elements.\n","sig":null,"attributes":[{"value":"/ Trait representing a range of elements.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":78575,"byte_end":78618,"line_start":381,"line_end":381,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1436},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":78784,"byte_end":78787,"line_start":385,"line_end":385,"column_start":8,"column_end":11},"name":"len","qualname":"::stream::Range::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":1435},"children":[],"decl_id":null,"docs":" Returns the remaining length of `self`.\n The returned length need not be the same as the number of items left in the stream.\n","sig":null,"attributes":[{"value":"/ Returns the remaining length of `self`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":78641,"byte_end":78684,"line_start":383,"line_end":383,"column_start":5,"column_end":48}},{"value":"/ The returned length need not be the same as the number of items left in the stream.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":78689,"byte_end":78776,"line_start":384,"line_end":384,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1437},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":78901,"byte_end":78909,"line_start":388,"line_end":388,"column_start":8,"column_end":16},"name":"is_empty","qualname":"::stream::Range::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":{"krate":0,"index":1435},"children":[],"decl_id":null,"docs":" Returns `true` if the range does not contain any elements (`Range::len() == 0`)\n","sig":null,"attributes":[{"value":"/ Returns `true` if the range does not contain any elements (`Range::len() == 0`)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":78810,"byte_end":78893,"line_start":387,"line_end":387,"column_start":5,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":4172},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":87454,"byte_end":87467,"line_start":757,"line_end":757,"column_start":12,"column_end":25},"name":"PartialStream","qualname":"::stream::PartialStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream type which indicates that the stream is partial if end of input is reached\n","sig":null,"attributes":[{"value":"/ Stream type which indicates that the stream is partial if end of input is reached","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":87295,"byte_end":87380,"line_start":755,"line_end":755,"column_start":1,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":4175},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":87471,"byte_end":87476,"line_start":757,"line_end":757,"column_start":29,"column_end":34},"name":"0","qualname":"::stream::PartialStream::0","value":"S","parent":{"krate":0,"index":4172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4201},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":89527,"byte_end":89541,"line_start":852,"line_end":852,"column_start":12,"column_end":26},"name":"CompleteStream","qualname":"::stream::CompleteStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream type which indicates that the stream is complete if end of input is reached","sig":null,"attributes":[{"value":"/ Stream type which indicates that the stream is complete if end of input is reached","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":89223,"byte_end":89309,"line_start":846,"line_end":846,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":89310,"byte_end":89313,"line_start":847,"line_end":847,"column_start":1,"column_end":4}},{"value":"/ For most streams this is already the default but this wrapper can be used to override a nested","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":89314,"byte_end":89412,"line_start":848,"line_end":848,"column_start":1,"column_end":99}},{"value":"/ `PartialStream`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":89413,"byte_end":89432,"line_start":849,"line_end":849,"column_start":1,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":89495,"byte_end":89515,"line_start":851,"line_end":851,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":4204},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":89545,"byte_end":89550,"line_start":852,"line_end":852,"column_start":30,"column_end":35},"name":"0","qualname":"::stream::CompleteStream::0","value":"S","parent":{"krate":0,"index":4201},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4230},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":91614,"byte_end":91632,"line_start":949,"line_end":949,"column_start":12,"column_end":30},"name":"MaybePartialStream","qualname":"::stream::MaybePartialStream","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4233},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":91636,"byte_end":91641,"line_start":949,"line_end":949,"column_start":34,"column_end":39},"name":"0","qualname":"::stream::MaybePartialStream::0","value":"S","parent":{"krate":0,"index":4230},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4234},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":91643,"byte_end":91651,"line_start":949,"line_end":949,"column_start":41,"column_end":49},"name":"1","qualname":"::stream::MaybePartialStream::1","value":"bool","parent":{"krate":0,"index":4230},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4260},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":93483,"byte_end":93494,"line_start":1034,"line_end":1034,"column_start":12,"column_end":23},"name":"SliceStream","qualname":"::stream::SliceStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" Newtype for constructing a stream from a slice where the items in the slice are not copyable.\n","sig":null,"attributes":[{"value":"/ Newtype for constructing a stream from a slice where the items in the slice are not copyable.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":93319,"byte_end":93416,"line_start":1032,"line_end":1032,"column_start":1,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":4264},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":93502,"byte_end":93513,"line_start":1034,"line_end":1034,"column_start":31,"column_end":42},"name":"0","qualname":"::stream::SliceStream::0","value":"&'a [T]","parent":{"krate":0,"index":4260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4295},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":96851,"byte_end":96865,"line_start":1172,"line_end":1172,"column_start":12,"column_end":26},"name":"IteratorStream","qualname":"::stream::IteratorStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper around iterators which allows them to be treated as a stream.\n Returned by [`IteratorStream::new`].\n","sig":null,"attributes":[{"value":"/ Wrapper around iterators which allows them to be treated as a stream.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":96695,"byte_end":96768,"line_start":1169,"line_end":1169,"column_start":1,"column_end":74}},{"value":"/ Returned by [`IteratorStream::new`].","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":96769,"byte_end":96809,"line_start":1170,"line_end":1170,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1654},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":97200,"byte_end":97203,"line_start":1182,"line_end":1182,"column_start":12,"column_end":15},"name":"new","qualname":"<IteratorStream<Input>>::new","value":"pub fn new<T>(T) -> IteratorStream<Input> where T: IntoIterator<IntoIter =\nInput, Item = Input>","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a stream.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a stream.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":96949,"byte_end":96990,"line_start":1178,"line_end":1178,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":96995,"byte_end":96998,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ NOTE: This type do not implement `Positioned` and `Clone` and must be wrapped with types","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":97003,"byte_end":97095,"line_start":1180,"line_end":1180,"column_start":5,"column_end":97}},{"value":"/     such as `BufferedStreamRef` and `State` to become a `Stream` which can be parsed","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":97100,"byte_end":97188,"line_start":1181,"line_end":1181,"column_start":5,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":1667},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":98070,"byte_end":98083,"line_start":1219,"line_end":1219,"column_start":12,"column_end":25},"name":"PointerOffset","qualname":"::stream::PointerOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" Newtype around a pointer offset into a slice stream (`&[T]`/`&str`).\n","sig":null,"attributes":[{"value":"/ Newtype around a pointer offset into a slice stream (`&[T]`/`&str`).","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":97986,"byte_end":98058,"line_start":1218,"line_end":1218,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":1670},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":98095,"byte_end":98104,"line_start":1219,"line_end":1219,"column_start":37,"column_end":46},"name":"0","qualname":"::stream::PointerOffset::0","value":"usize","parent":{"krate":0,"index":1667},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1699},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":99279,"byte_end":99282,"line_start":1277,"line_end":1277,"column_start":12,"column_end":15},"name":"new","qualname":"<PointerOffset<T>>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1700},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":99793,"byte_end":99811,"line_start":1293,"line_end":1293,"column_start":12,"column_end":30},"name":"translate_position","qualname":"<PointerOffset<T>>::translate_position","value":"pub fn translate_position(Self, &T) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer-based position into an indexed position.","sig":null,"attributes":[{"value":"/ Converts the pointer-based position into an indexed position.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":99362,"byte_end":99427,"line_start":1281,"line_end":1281,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":99432,"byte_end":99435,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":99440,"byte_end":99451,"line_start":1283,"line_end":1283,"column_start":5,"column_end":16}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":99456,"byte_end":99483,"line_start":1284,"line_end":1284,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":99488,"byte_end":99509,"line_start":1285,"line_end":1285,"column_start":5,"column_end":26}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":99514,"byte_end":99531,"line_start":1286,"line_end":1286,"column_start":5,"column_end":22}},{"value":"/ let text = \"b\";","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":99536,"byte_end":99555,"line_start":1287,"line_end":1287,"column_start":5,"column_end":24}},{"value":"/ let err = token('a').easy_parse(text).unwrap_err();","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":99560,"byte_end":99615,"line_start":1288,"line_end":1288,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(err.position.0, text.as_ptr() as usize);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":99620,"byte_end":99675,"line_start":1289,"line_end":1289,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(err.map_position(|p| p.translate_position(text)).position, 0);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":99680,"byte_end":99757,"line_start":1290,"line_end":1290,"column_start":5,"column_end":82}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":99762,"byte_end":99769,"line_start":1291,"line_end":1291,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":99774,"byte_end":99781,"line_start":1292,"line_end":1292,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1701},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":100296,"byte_end":100302,"line_start":1307,"line_end":1307,"column_start":8,"column_end":14},"name":"decode","qualname":"::stream::decode","value":"pub fn decode<Input, P>(P, &mut Input, &mut P::PartialState)\n-> Result<(Option<P::Output>, usize), <Input as StreamOnce>::Error> where\nP: Parser<Input>, Input: RangeStream","parent":null,"children":[],"decl_id":null,"docs":" Decodes `input` using `parser`.","sig":null,"attributes":[{"value":"/ Decodes `input` using `parser`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":99943,"byte_end":99978,"line_start":1299,"line_end":1299,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":99979,"byte_end":99982,"line_start":1300,"line_end":1300,"column_start":1,"column_end":4}},{"value":"/ Return `Ok(Some(token), committed_data)` if there was enough data to finish parsing using","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":99983,"byte_end":100076,"line_start":1301,"line_end":1301,"column_start":1,"column_end":94}},{"value":"/ `parser`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":100077,"byte_end":100090,"line_start":1302,"line_end":1302,"column_start":1,"column_end":14}},{"value":"/ Returns `Ok(None, committed_data)` if `input` did not contain enough data to finish parsing","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":100091,"byte_end":100186,"line_start":1303,"line_end":1303,"column_start":1,"column_end":96}},{"value":"/ using `parser`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":100187,"byte_end":100206,"line_start":1304,"line_end":1304,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":100207,"byte_end":100210,"line_start":1305,"line_end":1305,"column_start":1,"column_end":4}},{"value":"/ See `examples/async.rs` for example usage in a `tokio_io::codec::Decoder`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":100211,"byte_end":100288,"line_start":1306,"line_end":1306,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":1704},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":101769,"byte_end":101781,"line_start":1346,"line_end":1346,"column_start":8,"column_end":20},"name":"decode_tokio","qualname":"::stream::decode_tokio","value":"pub fn decode_tokio<Input, P>(P, &mut Input, &mut P::PartialState)\n-> Result<(Option<P::Output>, usize), <Input as StreamOnce>::Error> where\nP: Parser<Input>, Input: RangeStream","parent":null,"children":[],"decl_id":null,"docs":" Decodes `input` using `parser`. Like `decode` but works directly in both\n `tokio_util::Decoder::decode` and `tokio_util::Decoder::decode_eof`","sig":null,"attributes":[{"value":"/ Decodes `input` using `parser`. Like `decode` but works directly in both","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":101200,"byte_end":101276,"line_start":1335,"line_end":1335,"column_start":1,"column_end":77}},{"value":"/ `tokio_util::Decoder::decode` and `tokio_util::Decoder::decode_eof`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":101277,"byte_end":101348,"line_start":1336,"line_end":1336,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":101349,"byte_end":101352,"line_start":1337,"line_end":1337,"column_start":1,"column_end":4}},{"value":"/ Return `Ok(Some(token), committed_data)` if there was enough data to finish parsing using","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":101353,"byte_end":101446,"line_start":1338,"line_end":1338,"column_start":1,"column_end":94}},{"value":"/ `parser`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":101447,"byte_end":101460,"line_start":1339,"line_end":1339,"column_start":1,"column_end":14}},{"value":"/ Returns `Ok(None, committed_data)` if `input` did not contain enough data to finish parsing","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":101461,"byte_end":101556,"line_start":1340,"line_end":1340,"column_start":1,"column_end":96}},{"value":"/ using `parser`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":101557,"byte_end":101576,"line_start":1341,"line_end":1341,"column_start":1,"column_end":20}},{"value":"/ Returns `Ok(None, 0)` if `input` did not contain enough data to finish parsing","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":101577,"byte_end":101659,"line_start":1342,"line_end":1342,"column_start":1,"column_end":83}},{"value":"/ using `parser`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":101660,"byte_end":101679,"line_start":1343,"line_end":1343,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":101680,"byte_end":101683,"line_start":1344,"line_end":1344,"column_start":1,"column_end":4}},{"value":"/ See `examples/async.rs` for example usage in a `tokio_io::codec::Decoder`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":101684,"byte_end":101761,"line_start":1345,"line_end":1345,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":1708},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":121685,"byte_end":121695,"line_start":1851,"line_end":1851,"column_start":8,"column_end":18},"name":"call_with2","qualname":"::stream::call_with2","value":"pub fn call_with2<F, A, B, R>(A, B, F) -> R where F: FnOnce(A, B) -> R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1713},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":121802,"byte_end":121811,"line_start":1859,"line_end":1859,"column_start":8,"column_end":17},"name":"call_with","qualname":"::stream::call_with","value":"pub fn call_with<F, A, R>(A, F) -> R where F: FnOnce(A) -> R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1717},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parser","qualname":"::parser","value":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","parent":null,"children":[{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1723},{"krate":0,"index":1726},{"krate":0,"index":1727},{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1734},{"krate":0,"index":1737},{"krate":0,"index":1738},{"krate":0,"index":1740},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1748},{"krate":0,"index":1751},{"krate":0,"index":1754},{"krate":0,"index":1757},{"krate":0,"index":1760},{"krate":0,"index":1763},{"krate":0,"index":1766},{"krate":0,"index":1769},{"krate":0,"index":1772},{"krate":0,"index":1775},{"krate":0,"index":1778},{"krate":0,"index":1779},{"krate":0,"index":1782},{"krate":0,"index":1785},{"krate":0,"index":1788},{"krate":0,"index":1791},{"krate":0,"index":1794},{"krate":0,"index":1797},{"krate":0,"index":1800},{"krate":0,"index":1801},{"krate":0,"index":1804},{"krate":0,"index":1807},{"krate":0,"index":1810},{"krate":0,"index":1813},{"krate":0,"index":1816},{"krate":0,"index":1819},{"krate":0,"index":1820},{"krate":0,"index":1823},{"krate":0,"index":1826},{"krate":0,"index":1829},{"krate":0,"index":1830},{"krate":0,"index":1832},{"krate":0,"index":1833},{"krate":0,"index":1834},{"krate":0,"index":1837},{"krate":0,"index":1840},{"krate":0,"index":1841},{"krate":0,"index":1844},{"krate":0,"index":1847},{"krate":0,"index":1850},{"krate":0,"index":1853},{"krate":0,"index":1857},{"krate":0,"index":1965},{"krate":0,"index":2051},{"krate":0,"index":2166},{"krate":0,"index":2593},{"krate":0,"index":2690},{"krate":0,"index":2748},{"krate":0,"index":2927},{"krate":0,"index":3298},{"krate":0,"index":3440},{"krate":0,"index":3607},{"krate":0,"index":3677},{"krate":0,"index":3681},{"krate":0,"index":3685},{"krate":0,"index":3689},{"krate":0,"index":3692},{"krate":0,"index":10049},{"krate":0,"index":10051},{"krate":0,"index":10052},{"krate":0,"index":3701},{"krate":0,"index":10054},{"krate":0,"index":10056},{"krate":0,"index":10057},{"krate":0,"index":10059},{"krate":0,"index":3707}],"decl_id":null,"docs":" A collection of both concrete parsers as well as parser combinators.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":22939,"byte_end":22951,"line_start":619,"line_end":619,"column_start":1,"column_end":13}},{"value":"/ A collection of both concrete parsers as well as parser combinators.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":209569,"byte_end":209641,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":209642,"byte_end":209645,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Implements the [`Parser`] trait which is the core of `combine` and contains the submodules","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":209646,"byte_end":209740,"line_start":3,"line_end":3,"column_start":1,"column_end":95}},{"value":"/ implementing all combine parsers.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":209741,"byte_end":209778,"line_start":4,"line_end":4,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":1857},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"byte","qualname":"::parser::byte","value":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","parent":null,"children":[{"krate":0,"index":1858},{"krate":0,"index":1859},{"krate":0,"index":1860},{"krate":0,"index":1863},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1875},{"krate":0,"index":1878},{"krate":0,"index":1881},{"krate":0,"index":1882},{"krate":0,"index":1885},{"krate":0,"index":1888},{"krate":0,"index":1891},{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1898},{"krate":0,"index":1901},{"krate":0,"index":1904},{"krate":0,"index":1907},{"krate":0,"index":1910},{"krate":0,"index":1913},{"krate":0,"index":1916},{"krate":0,"index":1920},{"krate":0,"index":1924},{"krate":0,"index":1928},{"krate":0,"index":1931},{"krate":0,"index":1934},{"krate":0,"index":1937},{"krate":0,"index":1940},{"krate":0,"index":1944},{"krate":0,"index":4314},{"krate":0,"index":4320},{"krate":0,"index":4332},{"krate":0,"index":4339},{"krate":0,"index":4347},{"krate":0,"index":4360},{"krate":0,"index":4380},{"krate":0,"index":4384},{"krate":0,"index":4368},{"krate":0,"index":4378},{"krate":0,"index":4402},{"krate":0,"index":4407},{"krate":0,"index":4390},{"krate":0,"index":4400},{"krate":0,"index":4425},{"krate":0,"index":4431},{"krate":0,"index":4413},{"krate":0,"index":4423},{"krate":0,"index":4437},{"krate":0,"index":4442},{"krate":0,"index":4453},{"krate":0,"index":1948},{"krate":0,"index":1949}],"decl_id":null,"docs":" Module containing parsers specialized on byte streams.\n","sig":null,"attributes":[{"value":"/ Module containing parsers specialized on byte streams.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":248437,"byte_end":248495,"line_start":1,"line_end":1,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":1904},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":249094,"byte_end":249098,"line_start":24,"line_end":24,"column_start":8,"column_end":12},"name":"byte","qualname":"::parser::byte::byte","value":"pub fn byte<Input>(u8) -> Token<Input> where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses a byte and succeeds if the byte is equal to `c`.","sig":null,"attributes":[{"value":"/ Parses a byte and succeeds if the byte is equal to `c`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":248777,"byte_end":248836,"line_start":15,"line_end":15,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":248837,"byte_end":248840,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":248841,"byte_end":248848,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":248849,"byte_end":248873,"line_start":18,"line_end":18,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::byte;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":248874,"byte_end":248910,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(byte(b'!').parse(&b\"!\"[..]), Ok((b'!', &b\"\"[..])));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":248911,"byte_end":248977,"line_start":20,"line_end":20,"column_start":1,"column_end":67}},{"value":"/ assert!(byte(b'A').parse(&b\"\"[..]).is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":248978,"byte_end":249027,"line_start":21,"line_end":21,"column_start":1,"column_end":50}},{"value":"/ assert!(byte(b'A').parse(&b\"!\"[..]).is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":249028,"byte_end":249078,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":249079,"byte_end":249086,"line_start":23,"line_end":23,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1907},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":249802,"byte_end":249807,"line_start":51,"line_end":51,"column_start":8,"column_end":13},"name":"digit","qualname":"::parser::byte::digit","value":"pub fn digit<Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses a base-10 digit (0–9).","sig":null,"attributes":[{"value":"/ Parses a base-10 digit (0–9).","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":249564,"byte_end":249599,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":249600,"byte_end":249603,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":249604,"byte_end":249611,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":249612,"byte_end":249636,"line_start":46,"line_end":46,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::digit;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":249637,"byte_end":249674,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(digit().parse(&b\"9\"[..]), Ok((b'9', &b\"\"[..])));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":249675,"byte_end":249738,"line_start":48,"line_end":48,"column_start":1,"column_end":64}},{"value":"/ assert!(digit().parse(&b\"A\"[..]).is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":249739,"byte_end":249786,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":249787,"byte_end":249794,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1910},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":250403,"byte_end":250408,"line_start":69,"line_end":69,"column_start":8,"column_end":13},"name":"space","qualname":"::parser::byte::space","value":"pub fn space<Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses a `b' '`, `b'\\t'`, `b'\\n'` or `'b\\'r'`.","sig":null,"attributes":[{"value":"/ Parses a `b' '`, `b'\\t'`, `b'\\n'` or `'b\\'r'`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":250037,"byte_end":250087,"line_start":59,"line_end":59,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":250088,"byte_end":250091,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":250092,"byte_end":250099,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":250100,"byte_end":250124,"line_start":62,"line_end":62,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::space;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":250125,"byte_end":250162,"line_start":63,"line_end":63,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(space().parse(&b\" \"[..]), Ok((b' ', &b\"\"[..])));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":250163,"byte_end":250226,"line_start":64,"line_end":64,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(space().parse(&b\"  \"[..]), Ok((b' ', &b\" \"[..])));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":250227,"byte_end":250292,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ assert!(space().parse(&b\"!\"[..]).is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":250293,"byte_end":250340,"line_start":66,"line_end":66,"column_start":1,"column_end":48}},{"value":"/ assert!(space().parse(&b\"\"[..]).is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":250341,"byte_end":250387,"line_start":67,"line_end":67,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":250388,"byte_end":250395,"line_start":68,"line_end":68,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1913},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":250936,"byte_end":250942,"line_start":87,"line_end":87,"column_start":8,"column_end":14},"name":"spaces","qualname":"::parser::byte::spaces","value":"pub fn spaces<Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Skips over [`space`] zero or more times","sig":null,"attributes":[{"value":"/ Skips over [`space`] zero or more times","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":250641,"byte_end":250684,"line_start":77,"line_end":77,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":250685,"byte_end":250688,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ [`space`]: fn.space.html","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":250689,"byte_end":250717,"line_start":79,"line_end":79,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":250718,"byte_end":250721,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":250722,"byte_end":250729,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":250730,"byte_end":250754,"line_start":82,"line_end":82,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::spaces;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":250755,"byte_end":250793,"line_start":83,"line_end":83,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(spaces().parse(&b\"\"[..]), Ok(((), &b\"\"[..])));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":250794,"byte_end":250855,"line_start":84,"line_end":84,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(spaces().parse(&b\"   \"[..]), Ok(((), &b\"\"[..])));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":250856,"byte_end":250920,"line_start":85,"line_end":85,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":250921,"byte_end":250928,"line_start":86,"line_end":86,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1916},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":251399,"byte_end":251406,"line_start":103,"line_end":103,"column_start":8,"column_end":15},"name":"newline","qualname":"::parser::byte::newline","value":"pub fn newline<Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses a newline byte (`b'\\n'`).","sig":null,"attributes":[{"value":"/ Parses a newline byte (`b'\\n'`).","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":251151,"byte_end":251187,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":251188,"byte_end":251191,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":251192,"byte_end":251199,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":251200,"byte_end":251224,"line_start":98,"line_end":98,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::newline;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":251225,"byte_end":251264,"line_start":99,"line_end":99,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(newline().parse(&b\"\\n\"[..]), Ok((b'\\n', &b\"\"[..])));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":251265,"byte_end":251332,"line_start":100,"line_end":100,"column_start":1,"column_end":68}},{"value":"/ assert!(newline().parse(&b\"\\r\"[..]).is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":251333,"byte_end":251383,"line_start":101,"line_end":101,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":251384,"byte_end":251391,"line_start":102,"line_end":102,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1920},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":251977,"byte_end":251981,"line_start":120,"line_end":120,"column_start":8,"column_end":12},"name":"crlf","qualname":"::parser::byte::crlf","value":"pub fn crlf<Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses carriage return and newline (`&b\"\\r\\n\"`), returning the newline byte.","sig":null,"attributes":[{"value":"/ Parses carriage return and newline (`&b\"\\r\\n\"`), returning the newline byte.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":251644,"byte_end":251724,"line_start":111,"line_end":111,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":251725,"byte_end":251728,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":251729,"byte_end":251736,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":251737,"byte_end":251761,"line_start":114,"line_end":114,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::crlf;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":251762,"byte_end":251798,"line_start":115,"line_end":115,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(crlf().parse(&b\"\\r\\n\"[..]), Ok((b'\\n', &b\"\"[..])));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":251799,"byte_end":251865,"line_start":116,"line_end":116,"column_start":1,"column_end":67}},{"value":"/ assert!(crlf().parse(&b\"\\r\"[..]).is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":251866,"byte_end":251913,"line_start":117,"line_end":117,"column_start":1,"column_end":48}},{"value":"/ assert!(crlf().parse(&b\"\\n\"[..]).is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":251914,"byte_end":251961,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":251962,"byte_end":251969,"line_start":119,"line_end":119,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1924},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":252480,"byte_end":252483,"line_start":136,"line_end":136,"column_start":8,"column_end":11},"name":"tab","qualname":"::parser::byte::tab","value":"pub fn tab<Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses a tab byte (`b'\\t'`).","sig":null,"attributes":[{"value":"/ Parses a tab byte (`b'\\t'`).","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":252249,"byte_end":252281,"line_start":128,"line_end":128,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":252282,"byte_end":252285,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":252286,"byte_end":252293,"line_start":130,"line_end":130,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":252294,"byte_end":252318,"line_start":131,"line_end":131,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::tab;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":252319,"byte_end":252354,"line_start":132,"line_end":132,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(tab().parse(&b\"\\t\"[..]), Ok((b'\\t', &b\"\"[..])));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":252355,"byte_end":252418,"line_start":133,"line_end":133,"column_start":1,"column_end":64}},{"value":"/ assert!(tab().parse(&b\" \"[..]).is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":252419,"byte_end":252464,"line_start":134,"line_end":134,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":252465,"byte_end":252472,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1928},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":252958,"byte_end":252963,"line_start":152,"line_end":152,"column_start":8,"column_end":13},"name":"upper","qualname":"::parser::byte::upper","value":"pub fn upper<Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses an uppercase ASCII letter (A–Z).","sig":null,"attributes":[{"value":"/ Parses an uppercase ASCII letter (A–Z).","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":252710,"byte_end":252755,"line_start":144,"line_end":144,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":252756,"byte_end":252759,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":252760,"byte_end":252767,"line_start":146,"line_end":146,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":252768,"byte_end":252792,"line_start":147,"line_end":147,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::upper;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":252793,"byte_end":252830,"line_start":148,"line_end":148,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(upper().parse(&b\"A\"[..]), Ok((b'A', &b\"\"[..])));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":252831,"byte_end":252894,"line_start":149,"line_end":149,"column_start":1,"column_end":64}},{"value":"/ assert!(upper().parse(&b\"a\"[..]).is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":252895,"byte_end":252942,"line_start":150,"line_end":150,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":252943,"byte_end":252950,"line_start":151,"line_end":151,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1931},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":253443,"byte_end":253448,"line_start":168,"line_end":168,"column_start":8,"column_end":13},"name":"lower","qualname":"::parser::byte::lower","value":"pub fn lower<Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses an lowercase ASCII letter (a–z).","sig":null,"attributes":[{"value":"/ Parses an lowercase ASCII letter (a–z).","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":253195,"byte_end":253240,"line_start":160,"line_end":160,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":253241,"byte_end":253244,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":253245,"byte_end":253252,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":253253,"byte_end":253277,"line_start":163,"line_end":163,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::lower;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":253278,"byte_end":253315,"line_start":164,"line_end":164,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(lower().parse(&b\"a\"[..]), Ok((b'a', &b\"\"[..])));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":253316,"byte_end":253379,"line_start":165,"line_end":165,"column_start":1,"column_end":64}},{"value":"/ assert!(lower().parse(&b\"A\"[..]).is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":253380,"byte_end":253427,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":253428,"byte_end":253435,"line_start":167,"line_end":167,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1934},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":254037,"byte_end":254046,"line_start":185,"line_end":185,"column_start":8,"column_end":17},"name":"alpha_num","qualname":"::parser::byte::alpha_num","value":"pub fn alpha_num<Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses either an ASCII alphabet letter or digit (a–z, A–Z, 0–9).","sig":null,"attributes":[{"value":"/ Parses either an ASCII alphabet letter or digit (a–z, A–Z, 0–9).","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":253680,"byte_end":253754,"line_start":176,"line_end":176,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":253755,"byte_end":253758,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":253759,"byte_end":253766,"line_start":178,"line_end":178,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":253767,"byte_end":253791,"line_start":179,"line_end":179,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::alpha_num;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":253792,"byte_end":253833,"line_start":180,"line_end":180,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(alpha_num().parse(&b\"A\"[..]), Ok((b'A', &b\"\"[..])));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":253834,"byte_end":253901,"line_start":181,"line_end":181,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(alpha_num().parse(&b\"1\"[..]), Ok((b'1', &b\"\"[..])));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":253902,"byte_end":253969,"line_start":182,"line_end":182,"column_start":1,"column_end":68}},{"value":"/ assert!(alpha_num().parse(&b\"!\"[..]).is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":253970,"byte_end":254021,"line_start":183,"line_end":183,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":254022,"byte_end":254029,"line_start":184,"line_end":184,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1937},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":254610,"byte_end":254616,"line_start":202,"line_end":202,"column_start":8,"column_end":14},"name":"letter","qualname":"::parser::byte::letter","value":"pub fn letter<Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses an ASCII alphabet letter (a–z, A–Z).","sig":null,"attributes":[{"value":"/ Parses an ASCII alphabet letter (a–z, A–Z).","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":254288,"byte_end":254339,"line_start":193,"line_end":193,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":254340,"byte_end":254343,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":254344,"byte_end":254351,"line_start":195,"line_end":195,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":254352,"byte_end":254376,"line_start":196,"line_end":196,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::letter;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":254377,"byte_end":254415,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(letter().parse(&b\"a\"[..]), Ok((b'a', &b\"\"[..])));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":254416,"byte_end":254480,"line_start":198,"line_end":198,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(letter().parse(&b\"A\"[..]), Ok((b'A', &b\"\"[..])));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":254481,"byte_end":254545,"line_start":199,"line_end":199,"column_start":1,"column_end":65}},{"value":"/ assert!(letter().parse(&b\"9\"[..]).is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":254546,"byte_end":254594,"line_start":200,"line_end":200,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":254595,"byte_end":254602,"line_start":201,"line_end":201,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1940},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":255092,"byte_end":255101,"line_start":218,"line_end":218,"column_start":8,"column_end":17},"name":"oct_digit","qualname":"::parser::byte::oct_digit","value":"pub fn oct_digit<Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses an octal digit.","sig":null,"attributes":[{"value":"/ Parses an octal digit.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":254851,"byte_end":254877,"line_start":210,"line_end":210,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":254878,"byte_end":254881,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":254882,"byte_end":254889,"line_start":212,"line_end":212,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":254890,"byte_end":254914,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::oct_digit;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":254915,"byte_end":254956,"line_start":214,"line_end":214,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(oct_digit().parse(&b\"7\"[..]), Ok((b'7', &b\"\"[..])));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":254957,"byte_end":255024,"line_start":215,"line_end":215,"column_start":1,"column_end":68}},{"value":"/ assert!(oct_digit().parse(&b\"8\"[..]).is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":255025,"byte_end":255076,"line_start":216,"line_end":216,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":255077,"byte_end":255084,"line_start":217,"line_end":217,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1944},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":255643,"byte_end":255652,"line_start":234,"line_end":234,"column_start":8,"column_end":17},"name":"hex_digit","qualname":"::parser::byte::hex_digit","value":"pub fn hex_digit<Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses an ASCII hexdecimal digit (accepts both uppercase and lowercase).","sig":null,"attributes":[{"value":"/ Parses an ASCII hexdecimal digit (accepts both uppercase and lowercase).","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":255352,"byte_end":255428,"line_start":226,"line_end":226,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":255429,"byte_end":255432,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":255433,"byte_end":255440,"line_start":228,"line_end":228,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":255441,"byte_end":255465,"line_start":229,"line_end":229,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::hex_digit;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":255466,"byte_end":255507,"line_start":230,"line_end":230,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(hex_digit().parse(&b\"F\"[..]), Ok((b'F', &b\"\"[..])));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":255508,"byte_end":255575,"line_start":231,"line_end":231,"column_start":1,"column_end":68}},{"value":"/ assert!(hex_digit().parse(&b\"H\"[..]).is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":255576,"byte_end":255627,"line_start":232,"line_end":232,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":255628,"byte_end":255635,"line_start":233,"line_end":233,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4314},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":256441,"byte_end":256446,"line_start":262,"line_end":262,"column_start":8,"column_end":13},"name":"bytes","qualname":"::parser::byte::bytes","value":"bytes { s }","parent":null,"children":[{"krate":0,"index":4318},{"krate":0,"index":4319}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":16013,"byte_end":16023,"line_start":433,"line_end":433,"column_start":11,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":4318},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":256462,"byte_end":256463,"line_start":262,"line_end":262,"column_start":29,"column_end":30},"name":"s","qualname":"::parser::byte::bytes::s","value":"&'static [u8]","parent":{"krate":0,"index":4314},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4332},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":256441,"byte_end":256446,"line_start":262,"line_end":262,"column_start":8,"column_end":13},"name":"bytes","qualname":"::parser::byte::bytes","value":"pub fn bytes<'a, 'b, Input>(&'static [u8]) -> bytes where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, Input: Stream<Token = u8, Range = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses the bytes `s`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":19233,"byte_end":19242,"line_start":509,"line_end":509,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":4339},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":257332,"byte_end":257341,"line_start":292,"line_end":292,"column_start":8,"column_end":17},"name":"bytes_cmp","qualname":"::parser::byte::bytes_cmp","value":"bytes_cmp { s, cmp }","parent":null,"children":[{"krate":0,"index":4344},{"krate":0,"index":4345},{"krate":0,"index":4346}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":16013,"byte_end":16023,"line_start":433,"line_end":433,"column_start":11,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":4344},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":257360,"byte_end":257361,"line_start":292,"line_end":292,"column_start":36,"column_end":37},"name":"s","qualname":"::parser::byte::bytes_cmp::s","value":"&'static [u8]","parent":{"krate":0,"index":4339},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4345},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":257378,"byte_end":257381,"line_start":292,"line_end":292,"column_start":54,"column_end":57},"name":"cmp","qualname":"::parser::byte::bytes_cmp::cmp","value":"C","parent":{"krate":0,"index":4339},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4360},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":257332,"byte_end":257341,"line_start":292,"line_end":292,"column_start":8,"column_end":17},"name":"bytes_cmp","qualname":"::parser::byte::bytes_cmp","value":"pub fn bytes_cmp<'a, 'b, C, Input>(&'static [u8], C) -> bytes_cmp where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, C: FnMut(u8, u8) -> bool, Input: Stream<Token =\nu8, Range = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses the bytes `s` using `cmp` to compare each token.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":19233,"byte_end":19242,"line_start":509,"line_end":509,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":4380},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":259188,"byte_end":259201,"line_start":350,"line_end":350,"column_start":5,"column_end":18},"name":"TakeUntilByte","qualname":"::parser::byte::TakeUntilByte","value":"TakeUntilByte { a }","parent":null,"children":[{"krate":0,"index":4382},{"krate":0,"index":4383}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4382},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":259228,"byte_end":259229,"line_start":350,"line_end":350,"column_start":45,"column_end":46},"name":"a","qualname":"::parser::byte::TakeUntilByte::a","value":"u8","parent":{"krate":0,"index":4380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4378},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":259203,"byte_end":259218,"line_start":350,"line_end":350,"column_start":20,"column_end":35},"name":"take_until_byte","qualname":"::parser::byte::take_until_byte","value":"pub fn take_until_byte<Input>(u8) -> TakeUntilByte<Input> where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, Input: RangeStream, Input::Range: AsRef<[u8]> +\ncrate::stream::Range","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of 0 or more tokens until `a` is found.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":19233,"byte_end":19242,"line_start":509,"line_end":509,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":4402},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":259893,"byte_end":259907,"line_start":369,"line_end":369,"column_start":5,"column_end":19},"name":"TakeUntilByte2","qualname":"::parser::byte::TakeUntilByte2","value":"TakeUntilByte2 { a, b }","parent":null,"children":[{"krate":0,"index":4404},{"krate":0,"index":4405},{"krate":0,"index":4406}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4404},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":259936,"byte_end":259937,"line_start":369,"line_end":369,"column_start":48,"column_end":49},"name":"a","qualname":"::parser::byte::TakeUntilByte2::a","value":"u8","parent":{"krate":0,"index":4402},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4405},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":259939,"byte_end":259940,"line_start":369,"line_end":369,"column_start":51,"column_end":52},"name":"b","qualname":"::parser::byte::TakeUntilByte2::b","value":"u8","parent":{"krate":0,"index":4402},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4400},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":259909,"byte_end":259925,"line_start":369,"line_end":369,"column_start":21,"column_end":37},"name":"take_until_byte2","qualname":"::parser::byte::take_until_byte2","value":"pub fn take_until_byte2<Input>(u8, u8) -> TakeUntilByte2<Input> where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, Input: RangeStream, Input::Range: AsRef<[u8]> +\ncrate::stream::Range","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of 0 or more tokens until `a` or `b` is found.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":19233,"byte_end":19242,"line_start":509,"line_end":509,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":4425},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":260594,"byte_end":260608,"line_start":388,"line_end":388,"column_start":5,"column_end":19},"name":"TakeUntilByte3","qualname":"::parser::byte::TakeUntilByte3","value":"TakeUntilByte3 { a, b, c }","parent":null,"children":[{"krate":0,"index":4427},{"krate":0,"index":4428},{"krate":0,"index":4429},{"krate":0,"index":4430}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4427},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":260637,"byte_end":260638,"line_start":388,"line_end":388,"column_start":48,"column_end":49},"name":"a","qualname":"::parser::byte::TakeUntilByte3::a","value":"u8","parent":{"krate":0,"index":4425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4428},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":260640,"byte_end":260641,"line_start":388,"line_end":388,"column_start":51,"column_end":52},"name":"b","qualname":"::parser::byte::TakeUntilByte3::b","value":"u8","parent":{"krate":0,"index":4425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4429},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":260643,"byte_end":260644,"line_start":388,"line_end":388,"column_start":54,"column_end":55},"name":"c","qualname":"::parser::byte::TakeUntilByte3::c","value":"u8","parent":{"krate":0,"index":4425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4423},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":260610,"byte_end":260626,"line_start":388,"line_end":388,"column_start":21,"column_end":37},"name":"take_until_byte3","qualname":"::parser::byte::take_until_byte3","value":"pub fn take_until_byte3<Input>(u8, u8, u8) -> TakeUntilByte3<Input> where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, Input: RangeStream, Input::Range: AsRef<[u8]> +\ncrate::stream::Range","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of 0 or more tokens until `a`, 'b' or `c` is found.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":19233,"byte_end":19242,"line_start":509,"line_end":509,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":4437},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":261316,"byte_end":261332,"line_start":411,"line_end":411,"column_start":8,"column_end":24},"name":"take_until_bytes","qualname":"::parser::byte::take_until_bytes","value":"take_until_bytes { needle }","parent":null,"children":[{"krate":0,"index":4440},{"krate":0,"index":4441}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":16013,"byte_end":16023,"line_start":433,"line_end":433,"column_start":11,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":4440},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":261344,"byte_end":261350,"line_start":411,"line_end":411,"column_start":36,"column_end":42},"name":"needle","qualname":"::parser::byte::take_until_bytes::needle","value":"&'a [u8]","parent":{"krate":0,"index":4437},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4453},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":261316,"byte_end":261332,"line_start":411,"line_end":411,"column_start":8,"column_end":24},"name":"take_until_bytes","qualname":"::parser::byte::take_until_bytes","value":"pub fn take_until_bytes<'a, Input>(&'a [u8]) -> take_until_bytes where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, Input: RangeStream, Input::Range: AsRef<[u8]> +\ncrate::stream::Range","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of 0 or more tokens until `needle` is found.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":19233,"byte_end":19242,"line_start":509,"line_end":509,"column_start":9,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":1949},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":262181,"byte_end":262184,"line_start":442,"line_end":442,"column_start":9,"column_end":12},"name":"num","qualname":"::parser::byte::num","value":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","parent":null,"children":[{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1954},{"krate":0,"index":1957},{"krate":0,"index":1960},{"krate":0,"index":1963},{"krate":0,"index":4459},{"krate":0,"index":4466},{"krate":0,"index":4473},{"krate":0,"index":4480},{"krate":0,"index":4487},{"krate":0,"index":4494},{"krate":0,"index":4501},{"krate":0,"index":4508},{"krate":0,"index":4515},{"krate":0,"index":4522},{"krate":0,"index":4529},{"krate":0,"index":4536},{"krate":0,"index":4543},{"krate":0,"index":4550},{"krate":0,"index":4557},{"krate":0,"index":4564}],"decl_id":null,"docs":" Parsers for decoding numbers in big-endian or little-endian order.\n","sig":null,"attributes":[{"value":"/ Parsers for decoding numbers in big-endian or little-endian order.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":262102,"byte_end":262172,"line_start":441,"line_end":441,"column_start":1,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":4459},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":264882,"byte_end":264888,"line_start":510,"line_end":510,"column_start":23,"column_end":29},"name":"be_u16","qualname":"::parser::byte::num::be_u16","value":"pub fn be_u16<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a u16 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4466},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":264890,"byte_end":264896,"line_start":510,"line_end":510,"column_start":31,"column_end":37},"name":"le_u16","qualname":"::parser::byte::num::le_u16","value":"pub fn le_u16<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a u16 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4473},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":265317,"byte_end":265323,"line_start":522,"line_end":522,"column_start":23,"column_end":29},"name":"be_u32","qualname":"::parser::byte::num::be_u32","value":"pub fn be_u32<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a u32 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4480},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":265325,"byte_end":265331,"line_start":522,"line_end":522,"column_start":31,"column_end":37},"name":"le_u32","qualname":"::parser::byte::num::le_u32","value":"pub fn le_u32<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a u32 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4487},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":265768,"byte_end":265774,"line_start":534,"line_end":534,"column_start":23,"column_end":29},"name":"be_u64","qualname":"::parser::byte::num::be_u64","value":"pub fn be_u64<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a u64 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4494},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":265776,"byte_end":265782,"line_start":534,"line_end":534,"column_start":31,"column_end":37},"name":"le_u64","qualname":"::parser::byte::num::le_u64","value":"pub fn le_u64<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a u64 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4501},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":266196,"byte_end":266202,"line_start":547,"line_end":547,"column_start":23,"column_end":29},"name":"be_i16","qualname":"::parser::byte::num::be_i16","value":"pub fn be_i16<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i16 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4508},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":266204,"byte_end":266210,"line_start":547,"line_end":547,"column_start":31,"column_end":37},"name":"le_i16","qualname":"::parser::byte::num::le_i16","value":"pub fn le_i16<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i16 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4515},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":266632,"byte_end":266638,"line_start":560,"line_end":560,"column_start":23,"column_end":29},"name":"be_i32","qualname":"::parser::byte::num::be_i32","value":"pub fn be_i32<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i32 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4522},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":266640,"byte_end":266646,"line_start":560,"line_end":560,"column_start":31,"column_end":37},"name":"le_i32","qualname":"::parser::byte::num::le_i32","value":"pub fn le_i32<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i32 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4529},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":267083,"byte_end":267089,"line_start":572,"line_end":572,"column_start":23,"column_end":29},"name":"be_i64","qualname":"::parser::byte::num::be_i64","value":"pub fn be_i64<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i64 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4536},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":267091,"byte_end":267097,"line_start":572,"line_end":572,"column_start":31,"column_end":37},"name":"le_i64","qualname":"::parser::byte::num::le_i64","value":"pub fn le_i64<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i64 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4543},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":267561,"byte_end":267567,"line_start":586,"line_end":586,"column_start":23,"column_end":29},"name":"be_f32","qualname":"::parser::byte::num::be_f32","value":"pub fn be_f32<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i32 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4550},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":267569,"byte_end":267575,"line_start":586,"line_end":586,"column_start":31,"column_end":37},"name":"le_f32","qualname":"::parser::byte::num::le_f32","value":"pub fn le_f32<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i32 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4557},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":268046,"byte_end":268052,"line_start":599,"line_end":599,"column_start":23,"column_end":29},"name":"be_f64","qualname":"::parser::byte::num::be_f64","value":"pub fn be_f64<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i64 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4564},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/byte.rs","byte_start":268054,"byte_end":268060,"line_start":599,"line_end":599,"column_start":31,"column_end":37},"name":"le_f64","qualname":"::parser::byte::num::le_f64","value":"pub fn le_f64<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i64 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1965},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"char","qualname":"::parser::char","value":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","parent":null,"children":[{"krate":0,"index":1966},{"krate":0,"index":1967},{"krate":0,"index":1970},{"krate":0,"index":1971},{"krate":0,"index":1974},{"krate":0,"index":1977},{"krate":0,"index":1978},{"krate":0,"index":1981},{"krate":0,"index":1984},{"krate":0,"index":1987},{"krate":0,"index":1990},{"krate":0,"index":1993},{"krate":0,"index":1996},{"krate":0,"index":4583},{"krate":0,"index":4586},{"krate":0,"index":4588},{"krate":0,"index":4571},{"krate":0,"index":4581},{"krate":0,"index":1998},{"krate":0,"index":2001},{"krate":0,"index":2004},{"krate":0,"index":2008},{"krate":0,"index":2012},{"krate":0,"index":2016},{"krate":0,"index":2020},{"krate":0,"index":2024},{"krate":0,"index":2028},{"krate":0,"index":2032},{"krate":0,"index":2036},{"krate":0,"index":2040},{"krate":0,"index":2045}],"decl_id":null,"docs":" Module containing parsers specialized on character streams.\n","sig":null,"attributes":[{"value":"/ Module containing parsers specialized on character streams.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":270257,"byte_end":270320,"line_start":1,"line_end":1,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":1996},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":270782,"byte_end":270786,"line_start":22,"line_end":22,"column_start":8,"column_end":12},"name":"char","qualname":"::parser::char::char","value":"pub fn char<Input>(char) -> Token<Input> where Input: Stream<Token = char>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses a character and succeeds if the character is equal to `c`.","sig":null,"attributes":[{"value":"/ Parses a character and succeeds if the character is equal to `c`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":270526,"byte_end":270595,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":270596,"byte_end":270599,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":270600,"byte_end":270607,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":270608,"byte_end":270632,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::char;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":270633,"byte_end":270669,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(char('!').parse(\"!\"), Ok(('!', \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":270670,"byte_end":270722,"line_start":19,"line_end":19,"column_start":1,"column_end":53}},{"value":"/ assert!(char('A').parse(\"!\").is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":270723,"byte_end":270766,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":270767,"byte_end":270774,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4583},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":271003,"byte_end":271008,"line_start":32,"line_end":32,"column_start":16,"column_end":21},"name":"Digit","qualname":"::parser::char::Digit","value":"Digit {  }","parent":null,"children":[{"krate":0,"index":4585}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4581},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":271257,"byte_end":271262,"line_start":41,"line_end":41,"column_start":12,"column_end":17},"name":"digit","qualname":"::parser::char::digit","value":"pub fn digit<Input>() -> Digit<Input> where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, Input: Stream<Token = char>","parent":null,"children":[],"decl_id":null,"docs":" Parses a base-10 digit.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":19233,"byte_end":19242,"line_start":509,"line_end":509,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":1998},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":271929,"byte_end":271934,"line_start":63,"line_end":63,"column_start":8,"column_end":13},"name":"space","qualname":"::parser::char::space","value":"pub fn space<Input>() -> /*impl Trait*/ where Input: Stream<Token = char>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parse a single whitespace according to [`std::char::is_whitespace`].","sig":null,"attributes":[{"value":"/ Parse a single whitespace according to [`std::char::is_whitespace`].","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":271411,"byte_end":271483,"line_start":49,"line_end":49,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":271484,"byte_end":271487,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ This includes space characters, tabs and newlines.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":271488,"byte_end":271542,"line_start":51,"line_end":51,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":271543,"byte_end":271546,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ [`std::char::is_whitespace`]: https://doc.rust-lang.org/std/primitive.char.html#method.is_whitespace","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":271547,"byte_end":271651,"line_start":53,"line_end":53,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":271652,"byte_end":271655,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":271656,"byte_end":271663,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":271664,"byte_end":271688,"line_start":56,"line_end":56,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::space;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":271689,"byte_end":271726,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(space().parse(\" \"), Ok((' ', \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":271727,"byte_end":271777,"line_start":58,"line_end":58,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(space().parse(\"  \"), Ok((' ', \" \")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":271778,"byte_end":271830,"line_start":59,"line_end":59,"column_start":1,"column_end":53}},{"value":"/ assert!(space().parse(\"!\").is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":271831,"byte_end":271872,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/ assert!(space().parse(\"\").is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":271873,"byte_end":271913,"line_start":61,"line_end":61,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":271914,"byte_end":271921,"line_start":62,"line_end":62,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2001},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":272648,"byte_end":272654,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"spaces","qualname":"::parser::char::spaces","value":"pub fn spaces<Input>() -> /*impl Trait*/ where Input: Stream<Token = char>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Skips over zero or more spaces according to [`std::char::is_whitespace`].","sig":null,"attributes":[{"value":"/ Skips over zero or more spaces according to [`std::char::is_whitespace`].","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":272208,"byte_end":272285,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":272286,"byte_end":272289,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ This includes space characters, tabs and newlines.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":272290,"byte_end":272344,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":272345,"byte_end":272348,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [`std::char::is_whitespace`]: https://doc.rust-lang.org/std/primitive.char.html#method.is_whitespace","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":272349,"byte_end":272453,"line_start":76,"line_end":76,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":272454,"byte_end":272457,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":272458,"byte_end":272465,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":272466,"byte_end":272490,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::spaces;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":272491,"byte_end":272529,"line_start":80,"line_end":80,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(spaces().parse(\"\"), Ok(((), \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":272530,"byte_end":272579,"line_start":81,"line_end":81,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(spaces().parse(\"   \"), Ok(((), \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":272580,"byte_end":272632,"line_start":82,"line_end":82,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":272633,"byte_end":272640,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2004},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":273098,"byte_end":273105,"line_start":100,"line_end":100,"column_start":8,"column_end":15},"name":"newline","qualname":"::parser::char::newline","value":"pub fn newline<Input>() -> /*impl Trait*/ where Input: Stream<Token = char>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses a newline character (`'\\n'`).","sig":null,"attributes":[{"value":"/ Parses a newline character (`'\\n'`).","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":272865,"byte_end":272905,"line_start":92,"line_end":92,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":272906,"byte_end":272909,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":272910,"byte_end":272917,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":272918,"byte_end":272942,"line_start":95,"line_end":95,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::newline;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":272943,"byte_end":272982,"line_start":96,"line_end":96,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(newline().parse(\"\\n\"), Ok(('\\n', \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":272983,"byte_end":273037,"line_start":97,"line_end":97,"column_start":1,"column_end":55}},{"value":"/ assert!(newline().parse(\"\\r\").is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":273038,"byte_end":273082,"line_start":98,"line_end":98,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":273083,"byte_end":273090,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2008},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":273659,"byte_end":273663,"line_start":117,"line_end":117,"column_start":8,"column_end":12},"name":"crlf","qualname":"::parser::char::crlf","value":"pub fn crlf<Input>() -> /*impl Trait*/ where Input: Stream<Token = char>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses carriage return and newline (`\"\\r\\n\"`), returning the newline character.","sig":null,"attributes":[{"value":"/ Parses carriage return and newline (`\"\\r\\n\"`), returning the newline character.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":273348,"byte_end":273431,"line_start":108,"line_end":108,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":273432,"byte_end":273435,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":273436,"byte_end":273443,"line_start":110,"line_end":110,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":273444,"byte_end":273468,"line_start":111,"line_end":111,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::crlf;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":273469,"byte_end":273505,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(crlf().parse(\"\\r\\n\"), Ok(('\\n', \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":273506,"byte_end":273559,"line_start":113,"line_end":113,"column_start":1,"column_end":54}},{"value":"/ assert!(crlf().parse(\"\\r\").is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":273560,"byte_end":273601,"line_start":114,"line_end":114,"column_start":1,"column_end":42}},{"value":"/ assert!(crlf().parse(\"\\n\").is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":273602,"byte_end":273643,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":273644,"byte_end":273651,"line_start":116,"line_end":116,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2012},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":274152,"byte_end":274155,"line_start":133,"line_end":133,"column_start":8,"column_end":11},"name":"tab","qualname":"::parser::char::tab","value":"pub fn tab<Input>() -> /*impl Trait*/ where Input: Stream<Token = char>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses a tab character (`'\\t'`).","sig":null,"attributes":[{"value":"/ Parses a tab character (`'\\t'`).","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":273936,"byte_end":273972,"line_start":125,"line_end":125,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":273973,"byte_end":273976,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":273977,"byte_end":273984,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":273985,"byte_end":274009,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::tab;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":274010,"byte_end":274045,"line_start":129,"line_end":129,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(tab().parse(\"\\t\"), Ok(('\\t', \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":274046,"byte_end":274096,"line_start":130,"line_end":130,"column_start":1,"column_end":51}},{"value":"/ assert!(tab().parse(\" \").is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":274097,"byte_end":274136,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":274137,"byte_end":274144,"line_start":132,"line_end":132,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2016},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":274754,"byte_end":274759,"line_start":151,"line_end":151,"column_start":8,"column_end":13},"name":"upper","qualname":"::parser::char::upper","value":"pub fn upper<Input>() -> /*impl Trait*/ where Input: Stream<Token = char>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses an uppercase letter according to [`std::char::is_uppercase`].","sig":null,"attributes":[{"value":"/ Parses an uppercase letter according to [`std::char::is_uppercase`].","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":274391,"byte_end":274463,"line_start":141,"line_end":141,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":274464,"byte_end":274467,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ [`std::char::is_uppercase`]: https://doc.rust-lang.org/std/primitive.char.html#method.is_uppercase","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":274468,"byte_end":274570,"line_start":143,"line_end":143,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":274571,"byte_end":274574,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":274575,"byte_end":274582,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":274583,"byte_end":274607,"line_start":146,"line_end":146,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::upper;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":274608,"byte_end":274645,"line_start":147,"line_end":147,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(upper().parse(\"A\"), Ok(('A', \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":274646,"byte_end":274696,"line_start":148,"line_end":148,"column_start":1,"column_end":51}},{"value":"/ assert!(upper().parse(\"a\").is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":274697,"byte_end":274738,"line_start":149,"line_end":149,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":274739,"byte_end":274746,"line_start":150,"line_end":150,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2020},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":275378,"byte_end":275383,"line_start":169,"line_end":169,"column_start":8,"column_end":13},"name":"lower","qualname":"::parser::char::lower","value":"pub fn lower<Input>() -> /*impl Trait*/ where Input: Stream<Token = char>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses an lowercase letter according to [`std::char::is_lowercase`].","sig":null,"attributes":[{"value":"/ Parses an lowercase letter according to [`std::char::is_lowercase`].","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":275015,"byte_end":275087,"line_start":159,"line_end":159,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":275088,"byte_end":275091,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ [`std::char::is_lowercase`]: https://doc.rust-lang.org/std/primitive.char.html#method.is_lowercase","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":275092,"byte_end":275194,"line_start":161,"line_end":161,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":275195,"byte_end":275198,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":275199,"byte_end":275206,"line_start":163,"line_end":163,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":275207,"byte_end":275231,"line_start":164,"line_end":164,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::lower;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":275232,"byte_end":275269,"line_start":165,"line_end":165,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(lower().parse(\"a\"), Ok(('a', \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":275270,"byte_end":275320,"line_start":166,"line_end":166,"column_start":1,"column_end":51}},{"value":"/ assert!(lower().parse(\"A\").is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":275321,"byte_end":275362,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":275363,"byte_end":275370,"line_start":168,"line_end":168,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2024},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":276093,"byte_end":276102,"line_start":188,"line_end":188,"column_start":8,"column_end":17},"name":"alpha_num","qualname":"::parser::char::alpha_num","value":"pub fn alpha_num<Input>() -> /*impl Trait*/ where Input: Stream<Token = char>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses either an alphabet letter or digit according to [`std::char::is_alphanumeric`].","sig":null,"attributes":[{"value":"/ Parses either an alphabet letter or digit according to [`std::char::is_alphanumeric`].","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":275639,"byte_end":275729,"line_start":177,"line_end":177,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":275730,"byte_end":275733,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ [`std::char::is_alphanumeric`]: https://doc.rust-lang.org/std/primitive.char.html#method.is_alphanumeric","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":275734,"byte_end":275842,"line_start":179,"line_end":179,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":275843,"byte_end":275846,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":275847,"byte_end":275854,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":275855,"byte_end":275879,"line_start":182,"line_end":182,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::alpha_num;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":275880,"byte_end":275921,"line_start":183,"line_end":183,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(alpha_num().parse(\"A\"), Ok(('A', \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":275922,"byte_end":275976,"line_start":184,"line_end":184,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(alpha_num().parse(\"1\"), Ok(('1', \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":275977,"byte_end":276031,"line_start":185,"line_end":185,"column_start":1,"column_end":55}},{"value":"/ assert!(alpha_num().parse(\"!\").is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":276032,"byte_end":276077,"line_start":186,"line_end":186,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":276078,"byte_end":276085,"line_start":187,"line_end":187,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2028},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":276780,"byte_end":276786,"line_start":207,"line_end":207,"column_start":8,"column_end":14},"name":"letter","qualname":"::parser::char::letter","value":"pub fn letter<Input>() -> /*impl Trait*/ where Input: Stream<Token = char>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses an alphabet letter according to [`std::char::is_alphabetic`].","sig":null,"attributes":[{"value":"/ Parses an alphabet letter according to [`std::char::is_alphabetic`].","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":276360,"byte_end":276432,"line_start":196,"line_end":196,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":276433,"byte_end":276436,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ [`std::char::is_alphabetic`]: https://doc.rust-lang.org/std/primitive.char.html#method.is_alphabetic","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":276437,"byte_end":276541,"line_start":198,"line_end":198,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":276542,"byte_end":276545,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":276546,"byte_end":276553,"line_start":200,"line_end":200,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":276554,"byte_end":276578,"line_start":201,"line_end":201,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::letter;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":276579,"byte_end":276617,"line_start":202,"line_end":202,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(letter().parse(\"a\"), Ok(('a', \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":276618,"byte_end":276669,"line_start":203,"line_end":203,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(letter().parse(\"A\"), Ok(('A', \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":276670,"byte_end":276721,"line_start":204,"line_end":204,"column_start":1,"column_end":52}},{"value":"/ assert!(letter().parse(\"9\").is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":276722,"byte_end":276764,"line_start":205,"line_end":205,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":276765,"byte_end":276772,"line_start":206,"line_end":206,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2032},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":277255,"byte_end":277264,"line_start":223,"line_end":223,"column_start":8,"column_end":17},"name":"oct_digit","qualname":"::parser::char::oct_digit","value":"pub fn oct_digit<Input>() -> /*impl Trait*/ where Input: Stream<Token = char>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses an octal digit.","sig":null,"attributes":[{"value":"/ Parses an octal digit.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":277033,"byte_end":277059,"line_start":215,"line_end":215,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":277060,"byte_end":277063,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":277064,"byte_end":277071,"line_start":217,"line_end":217,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":277072,"byte_end":277096,"line_start":218,"line_end":218,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::oct_digit;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":277097,"byte_end":277138,"line_start":219,"line_end":219,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(oct_digit().parse(\"7\"), Ok(('7', \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":277139,"byte_end":277193,"line_start":220,"line_end":220,"column_start":1,"column_end":55}},{"value":"/ assert!(oct_digit().parse(\"8\").is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":277194,"byte_end":277239,"line_start":221,"line_end":221,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":277240,"byte_end":277247,"line_start":222,"line_end":222,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2036},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":277767,"byte_end":277776,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"hex_digit","qualname":"::parser::char::hex_digit","value":"pub fn hex_digit<Input>() -> /*impl Trait*/ where Input: Stream<Token = char>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses a hexdecimal digit with uppercase and lowercase.","sig":null,"attributes":[{"value":"/ Parses a hexdecimal digit with uppercase and lowercase.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":277512,"byte_end":277571,"line_start":231,"line_end":231,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":277572,"byte_end":277575,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":277576,"byte_end":277583,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":277584,"byte_end":277608,"line_start":234,"line_end":234,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::hex_digit;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":277609,"byte_end":277650,"line_start":235,"line_end":235,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(hex_digit().parse(\"F\"), Ok(('F', \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":277651,"byte_end":277705,"line_start":236,"line_end":236,"column_start":1,"column_end":55}},{"value":"/ assert!(hex_digit().parse(\"H\").is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":277706,"byte_end":277751,"line_start":237,"line_end":237,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":277752,"byte_end":277759,"line_start":238,"line_end":238,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2040},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":278318,"byte_end":278324,"line_start":260,"line_end":260,"column_start":8,"column_end":14},"name":"string","qualname":"::parser::char::string","value":"pub fn string<'a, Input>(&'static str) -> /*impl Trait*/ where\nInput: Stream<Token = char>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses the string `s`.","sig":null,"attributes":[{"value":"/ Parses the string `s`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":278033,"byte_end":278059,"line_start":247,"line_end":247,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":278060,"byte_end":278063,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":278064,"byte_end":278071,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":278072,"byte_end":278099,"line_start":250,"line_end":250,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":278100,"byte_end":278121,"line_start":251,"line_end":251,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::string;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":278122,"byte_end":278162,"line_start":252,"line_end":252,"column_start":1,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":278163,"byte_end":278180,"line_start":253,"line_end":253,"column_start":1,"column_end":18}},{"value":"/ let result = string(\"rust\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":278181,"byte_end":278212,"line_start":254,"line_end":254,"column_start":1,"column_end":32}},{"value":"/     .parse(\"rust\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":278213,"byte_end":278235,"line_start":255,"line_end":255,"column_start":1,"column_end":23}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":278236,"byte_end":278258,"line_start":256,"line_end":256,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(\"rust\"));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":278259,"byte_end":278294,"line_start":257,"line_end":257,"column_start":1,"column_end":36}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":278295,"byte_end":278302,"line_start":258,"line_end":258,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":278303,"byte_end":278310,"line_start":259,"line_end":259,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2045},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":278942,"byte_end":278952,"line_start":282,"line_end":282,"column_start":8,"column_end":18},"name":"string_cmp","qualname":"::parser::char::string_cmp","value":"pub fn string_cmp<'a, C, Input>(&'static str, C) -> /*impl Trait*/ where\nC: FnMut(char, char) -> bool, Input: Stream<Token = char>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses the string `s`, using `cmp` to compare each character.","sig":null,"attributes":[{"value":"/ Parses the string `s`, using `cmp` to compare each character.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":278545,"byte_end":278610,"line_start":268,"line_end":268,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":278611,"byte_end":278614,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":278615,"byte_end":278622,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":278623,"byte_end":278650,"line_start":271,"line_end":271,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":278651,"byte_end":278672,"line_start":272,"line_end":272,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::string_cmp;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":278673,"byte_end":278717,"line_start":273,"line_end":273,"column_start":1,"column_end":45}},{"value":"/ use std::ascii::AsciiExt;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":278718,"byte_end":278747,"line_start":274,"line_end":274,"column_start":1,"column_end":30}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":278748,"byte_end":278765,"line_start":275,"line_end":275,"column_start":1,"column_end":18}},{"value":"/ let result = string_cmp(\"rust\", |l, r| l.eq_ignore_ascii_case(&r))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":278766,"byte_end":278836,"line_start":276,"line_end":276,"column_start":1,"column_end":71}},{"value":"/     .parse(\"RusT\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":278837,"byte_end":278859,"line_start":277,"line_end":277,"column_start":1,"column_end":23}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":278860,"byte_end":278882,"line_start":278,"line_end":278,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(\"rust\"));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":278883,"byte_end":278918,"line_start":279,"line_end":279,"column_start":1,"column_end":36}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":278919,"byte_end":278926,"line_start":280,"line_end":280,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/char.rs","byte_start":278927,"byte_end":278934,"line_start":281,"line_end":281,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":2051},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"choice","qualname":"::parser::choice","value":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","parent":null,"children":[{"krate":0,"index":2052},{"krate":0,"index":2053},{"krate":0,"index":2054},{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2065},{"krate":0,"index":2068},{"krate":0,"index":2071},{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2077},{"krate":0,"index":2080},{"krate":0,"index":2083},{"krate":0,"index":2088},{"krate":0,"index":2097},{"krate":0,"index":4596},{"krate":0,"index":4699},{"krate":0,"index":4726},{"krate":0,"index":4761},{"krate":0,"index":4860},{"krate":0,"index":4886},{"krate":0,"index":4920},{"krate":0,"index":5015},{"krate":0,"index":5040},{"krate":0,"index":5073},{"krate":0,"index":5164},{"krate":0,"index":5188},{"krate":0,"index":5220},{"krate":0,"index":5307},{"krate":0,"index":5330},{"krate":0,"index":5361},{"krate":0,"index":5444},{"krate":0,"index":5466},{"krate":0,"index":5496},{"krate":0,"index":5575},{"krate":0,"index":5596},{"krate":0,"index":5625},{"krate":0,"index":5700},{"krate":0,"index":5720},{"krate":0,"index":5748},{"krate":0,"index":5819},{"krate":0,"index":5838},{"krate":0,"index":5865},{"krate":0,"index":5932},{"krate":0,"index":5950},{"krate":0,"index":5976},{"krate":0,"index":6039},{"krate":0,"index":6056},{"krate":0,"index":6081},{"krate":0,"index":6140},{"krate":0,"index":6156},{"krate":0,"index":6180},{"krate":0,"index":6235},{"krate":0,"index":6250},{"krate":0,"index":6273},{"krate":0,"index":6324},{"krate":0,"index":6338},{"krate":0,"index":6360},{"krate":0,"index":6407},{"krate":0,"index":6420},{"krate":0,"index":6441},{"krate":0,"index":6484},{"krate":0,"index":6496},{"krate":0,"index":6516},{"krate":0,"index":6555},{"krate":0,"index":6566},{"krate":0,"index":6585},{"krate":0,"index":6620},{"krate":0,"index":6630},{"krate":0,"index":6648},{"krate":0,"index":6679},{"krate":0,"index":6688},{"krate":0,"index":6705},{"krate":0,"index":6732},{"krate":0,"index":6740},{"krate":0,"index":6756},{"krate":0,"index":6779},{"krate":0,"index":6786},{"krate":0,"index":6801},{"krate":0,"index":6820},{"krate":0,"index":6826},{"krate":0,"index":6840},{"krate":0,"index":6855},{"krate":0,"index":6860},{"krate":0,"index":6873},{"krate":0,"index":6884},{"krate":0,"index":6888},{"krate":0,"index":6900},{"krate":0,"index":6907},{"krate":0,"index":6910},{"krate":0,"index":6921},{"krate":0,"index":6930},{"krate":0,"index":6939},{"krate":0,"index":6948},{"krate":0,"index":6957},{"krate":0,"index":6966},{"krate":0,"index":6975},{"krate":0,"index":6984},{"krate":0,"index":6993},{"krate":0,"index":7002},{"krate":0,"index":7011},{"krate":0,"index":7020},{"krate":0,"index":7029},{"krate":0,"index":7038},{"krate":0,"index":7047},{"krate":0,"index":7056},{"krate":0,"index":7065},{"krate":0,"index":7074},{"krate":0,"index":7083},{"krate":0,"index":7092},{"krate":0,"index":7101},{"krate":0,"index":7110},{"krate":0,"index":7119},{"krate":0,"index":7128},{"krate":0,"index":7137},{"krate":0,"index":7146},{"krate":0,"index":7155},{"krate":0,"index":7164},{"krate":0,"index":7173},{"krate":0,"index":7182},{"krate":0,"index":7191},{"krate":0,"index":7200},{"krate":0,"index":7209},{"krate":0,"index":7284},{"krate":0,"index":7288},{"krate":0,"index":7290},{"krate":0,"index":2111},{"krate":0,"index":2119},{"krate":0,"index":2124},{"krate":0,"index":2135},{"krate":0,"index":7295},{"krate":0,"index":7300},{"krate":0,"index":7303},{"krate":0,"index":2138},{"krate":0,"index":2148},{"krate":0,"index":7309},{"krate":0,"index":7313},{"krate":0,"index":7315},{"krate":0,"index":2152},{"krate":0,"index":2159}],"decl_id":null,"docs":" Combinators which take one or more parsers and attempts to parse successfully with at least one\n of them.\n","sig":null,"attributes":[{"value":"/ Combinators which take one or more parsers and attempts to parse successfully with at least one","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":280390,"byte_end":280489,"line_start":1,"line_end":1,"column_start":1,"column_end":100}},{"value":"/ of them.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":280490,"byte_end":280502,"line_start":2,"line_end":2,"column_start":1,"column_end":13}}]},{"kind":"Trait","id":{"krate":0,"index":2088},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":282424,"byte_end":282436,"line_start":70,"line_end":70,"column_start":11,"column_end":23},"name":"ChoiceParser","qualname":"::parser::choice::ChoiceParser","value":"ChoiceParser<Input: Stream>","parent":null,"children":[{"krate":0,"index":2090},{"krate":0,"index":2091},{"krate":0,"index":2092},{"krate":0,"index":2093},{"krate":0,"index":2094},{"krate":0,"index":2096}],"decl_id":null,"docs":" `ChoiceParser` represents a parser which may parse one of several different choices depending\n on the input.","sig":null,"attributes":[{"value":"/ `ChoiceParser` represents a parser which may parse one of several different choices depending","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":282224,"byte_end":282321,"line_start":66,"line_end":66,"column_start":1,"column_end":98}},{"value":"/ on the input.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":282322,"byte_end":282339,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":282340,"byte_end":282343,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ This is an internal trait used to overload the `choice` function.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":282344,"byte_end":282413,"line_start":69,"line_end":69,"column_start":1,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":2090},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":282463,"byte_end":282469,"line_start":71,"line_end":71,"column_start":10,"column_end":16},"name":"Output","qualname":"::parser::choice::ChoiceParser::Output","value":"type Output;","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2091},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":282480,"byte_end":282492,"line_start":72,"line_end":72,"column_start":10,"column_end":22},"name":"PartialState","qualname":"::parser::choice::ChoiceParser::PartialState","value":"type PartialState: Default;","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2092},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":282511,"byte_end":282522,"line_start":74,"line_end":74,"column_start":8,"column_end":19},"name":"parse_first","qualname":"::parser::choice::ChoiceParser::parse_first","value":"pub fn parse_first(&mut Self, &mut Input, &mut Self::PartialState)\n-> ParseResult<Self::Output, <Input as StreamOnce>::Error>","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2093},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":282684,"byte_end":282697,"line_start":80,"line_end":80,"column_start":8,"column_end":21},"name":"parse_partial","qualname":"::parser::choice::ChoiceParser::parse_partial","value":"pub fn parse_partial(&mut Self, &mut Input, &mut Self::PartialState)\n-> ParseResult<Self::Output, <Input as StreamOnce>::Error>","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2094},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":282859,"byte_end":282876,"line_start":86,"line_end":86,"column_start":8,"column_end":25},"name":"parse_mode_choice","qualname":"::parser::choice::ChoiceParser::parse_mode_choice","value":"pub fn parse_mode_choice<M>(&mut Self, M, &mut Input, &mut Self::PartialState)\n-> ParseResult<Self::Output, <Input as StreamOnce>::Error> where M: ParseMode,\nSelf: Sized","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2096},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":283110,"byte_end":283126,"line_start":96,"line_end":96,"column_start":8,"column_end":24},"name":"add_error_choice","qualname":"::parser::choice::ChoiceParser::add_error_choice","value":"pub fn add_error_choice(&mut Self, &mut Tracked<<Input as StreamOnce>::Error>)","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4624},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290030,"byte_end":290031,"line_start":303,"line_end":303,"column_start":22,"column_end":23},"name":"A","qualname":"::parser::choice::A::A","value":"A::A(A)","parent":{"krate":0,"index":4596},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4627},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290032,"byte_end":290033,"line_start":303,"line_end":303,"column_start":24,"column_end":25},"name":"B","qualname":"::parser::choice::A::B","value":"A::B(B)","parent":{"krate":0,"index":4596},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4630},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290034,"byte_end":290035,"line_start":303,"line_end":303,"column_start":26,"column_end":27},"name":"C","qualname":"::parser::choice::A::C","value":"A::C(C)","parent":{"krate":0,"index":4596},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4633},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290036,"byte_end":290037,"line_start":303,"line_end":303,"column_start":28,"column_end":29},"name":"D","qualname":"::parser::choice::A::D","value":"A::D(D)","parent":{"krate":0,"index":4596},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4636},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290038,"byte_end":290039,"line_start":303,"line_end":303,"column_start":30,"column_end":31},"name":"E","qualname":"::parser::choice::A::E","value":"A::E(E)","parent":{"krate":0,"index":4596},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4639},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290040,"byte_end":290041,"line_start":303,"line_end":303,"column_start":32,"column_end":33},"name":"F","qualname":"::parser::choice::A::F","value":"A::F(F)","parent":{"krate":0,"index":4596},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4642},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290042,"byte_end":290043,"line_start":303,"line_end":303,"column_start":34,"column_end":35},"name":"G","qualname":"::parser::choice::A::G","value":"A::G(G)","parent":{"krate":0,"index":4596},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4645},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290044,"byte_end":290045,"line_start":303,"line_end":303,"column_start":36,"column_end":37},"name":"H","qualname":"::parser::choice::A::H","value":"A::H(H)","parent":{"krate":0,"index":4596},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4648},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290046,"byte_end":290047,"line_start":303,"line_end":303,"column_start":38,"column_end":39},"name":"I","qualname":"::parser::choice::A::I","value":"A::I(I)","parent":{"krate":0,"index":4596},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4651},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290048,"byte_end":290049,"line_start":303,"line_end":303,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::A::J","value":"A::J(J)","parent":{"krate":0,"index":4596},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4654},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290050,"byte_end":290051,"line_start":303,"line_end":303,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::A::K","value":"A::K(K)","parent":{"krate":0,"index":4596},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4657},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290052,"byte_end":290053,"line_start":303,"line_end":303,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::A::L","value":"A::L(L)","parent":{"krate":0,"index":4596},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4660},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290054,"byte_end":290055,"line_start":303,"line_end":303,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::A::M","value":"A::M(M)","parent":{"krate":0,"index":4596},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4663},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290056,"byte_end":290057,"line_start":303,"line_end":303,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::A::N","value":"A::N(N)","parent":{"krate":0,"index":4596},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4666},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290058,"byte_end":290059,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::A::O","value":"A::O(O)","parent":{"krate":0,"index":4596},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4669},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290060,"byte_end":290061,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::A::P","value":"A::P(P)","parent":{"krate":0,"index":4596},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4672},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290062,"byte_end":290063,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::A::Q","value":"A::Q(Q)","parent":{"krate":0,"index":4596},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4675},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290064,"byte_end":290065,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::A::R","value":"A::R(R)","parent":{"krate":0,"index":4596},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4678},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290066,"byte_end":290067,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::A::S","value":"A::S(S)","parent":{"krate":0,"index":4596},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4681},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290068,"byte_end":290069,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::A::T","value":"A::T(T)","parent":{"krate":0,"index":4596},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4684},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290070,"byte_end":290071,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::A::U","value":"A::U(U)","parent":{"krate":0,"index":4596},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4687},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290072,"byte_end":290073,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::A::V","value":"A::V(V)","parent":{"krate":0,"index":4596},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4690},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290074,"byte_end":290075,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::A::X","value":"A::X(X)","parent":{"krate":0,"index":4596},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4693},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290076,"byte_end":290077,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::A::Y","value":"A::Y(Y)","parent":{"krate":0,"index":4596},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4696},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290078,"byte_end":290079,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::A::Z","value":"A::Z(Z)","parent":{"krate":0,"index":4596},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4596},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290030,"byte_end":290031,"line_start":303,"line_end":303,"column_start":22,"column_end":23},"name":"A","qualname":"::parser::choice::A","value":"pub enum A<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V,\n           X, Y, Z> {\n    Peek,\n    A(A),\n    B(B),\n    C(C),\n    D(D),\n    E(E),\n    F(F),\n    G(G),\n    H(H),\n    I(I),\n    J(J),\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":4622},{"krate":0,"index":4624},{"krate":0,"index":4627},{"krate":0,"index":4630},{"krate":0,"index":4633},{"krate":0,"index":4636},{"krate":0,"index":4639},{"krate":0,"index":4642},{"krate":0,"index":4645},{"krate":0,"index":4648},{"krate":0,"index":4651},{"krate":0,"index":4654},{"krate":0,"index":4657},{"krate":0,"index":4660},{"krate":0,"index":4663},{"krate":0,"index":4666},{"krate":0,"index":4669},{"krate":0,"index":4672},{"krate":0,"index":4675},{"krate":0,"index":4678},{"krate":0,"index":4681},{"krate":0,"index":4684},{"krate":0,"index":4687},{"krate":0,"index":4690},{"krate":0,"index":4693},{"krate":0,"index":4696}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4788},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290032,"byte_end":290033,"line_start":303,"line_end":303,"column_start":24,"column_end":25},"name":"B","qualname":"::parser::choice::B::B","value":"B::B(B)","parent":{"krate":0,"index":4761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4791},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290034,"byte_end":290035,"line_start":303,"line_end":303,"column_start":26,"column_end":27},"name":"C","qualname":"::parser::choice::B::C","value":"B::C(C)","parent":{"krate":0,"index":4761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4794},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290036,"byte_end":290037,"line_start":303,"line_end":303,"column_start":28,"column_end":29},"name":"D","qualname":"::parser::choice::B::D","value":"B::D(D)","parent":{"krate":0,"index":4761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4797},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290038,"byte_end":290039,"line_start":303,"line_end":303,"column_start":30,"column_end":31},"name":"E","qualname":"::parser::choice::B::E","value":"B::E(E)","parent":{"krate":0,"index":4761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4800},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290040,"byte_end":290041,"line_start":303,"line_end":303,"column_start":32,"column_end":33},"name":"F","qualname":"::parser::choice::B::F","value":"B::F(F)","parent":{"krate":0,"index":4761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4803},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290042,"byte_end":290043,"line_start":303,"line_end":303,"column_start":34,"column_end":35},"name":"G","qualname":"::parser::choice::B::G","value":"B::G(G)","parent":{"krate":0,"index":4761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4806},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290044,"byte_end":290045,"line_start":303,"line_end":303,"column_start":36,"column_end":37},"name":"H","qualname":"::parser::choice::B::H","value":"B::H(H)","parent":{"krate":0,"index":4761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4809},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290046,"byte_end":290047,"line_start":303,"line_end":303,"column_start":38,"column_end":39},"name":"I","qualname":"::parser::choice::B::I","value":"B::I(I)","parent":{"krate":0,"index":4761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4812},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290048,"byte_end":290049,"line_start":303,"line_end":303,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::B::J","value":"B::J(J)","parent":{"krate":0,"index":4761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4815},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290050,"byte_end":290051,"line_start":303,"line_end":303,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::B::K","value":"B::K(K)","parent":{"krate":0,"index":4761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4818},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290052,"byte_end":290053,"line_start":303,"line_end":303,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::B::L","value":"B::L(L)","parent":{"krate":0,"index":4761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4821},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290054,"byte_end":290055,"line_start":303,"line_end":303,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::B::M","value":"B::M(M)","parent":{"krate":0,"index":4761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4824},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290056,"byte_end":290057,"line_start":303,"line_end":303,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::B::N","value":"B::N(N)","parent":{"krate":0,"index":4761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4827},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290058,"byte_end":290059,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::B::O","value":"B::O(O)","parent":{"krate":0,"index":4761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4830},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290060,"byte_end":290061,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::B::P","value":"B::P(P)","parent":{"krate":0,"index":4761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4833},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290062,"byte_end":290063,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::B::Q","value":"B::Q(Q)","parent":{"krate":0,"index":4761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4836},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290064,"byte_end":290065,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::B::R","value":"B::R(R)","parent":{"krate":0,"index":4761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4839},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290066,"byte_end":290067,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::B::S","value":"B::S(S)","parent":{"krate":0,"index":4761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4842},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290068,"byte_end":290069,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::B::T","value":"B::T(T)","parent":{"krate":0,"index":4761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4845},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290070,"byte_end":290071,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::B::U","value":"B::U(U)","parent":{"krate":0,"index":4761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4848},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290072,"byte_end":290073,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::B::V","value":"B::V(V)","parent":{"krate":0,"index":4761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4851},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290074,"byte_end":290075,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::B::X","value":"B::X(X)","parent":{"krate":0,"index":4761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4854},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290076,"byte_end":290077,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::B::Y","value":"B::Y(Y)","parent":{"krate":0,"index":4761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4857},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290078,"byte_end":290079,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::B::Z","value":"B::Z(Z)","parent":{"krate":0,"index":4761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4761},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290032,"byte_end":290033,"line_start":303,"line_end":303,"column_start":24,"column_end":25},"name":"B","qualname":"::parser::choice::B","value":"pub enum B<B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, X,\n           Y, Z> {\n    Peek,\n    B(B),\n    C(C),\n    D(D),\n    E(E),\n    F(F),\n    G(G),\n    H(H),\n    I(I),\n    J(J),\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":4786},{"krate":0,"index":4788},{"krate":0,"index":4791},{"krate":0,"index":4794},{"krate":0,"index":4797},{"krate":0,"index":4800},{"krate":0,"index":4803},{"krate":0,"index":4806},{"krate":0,"index":4809},{"krate":0,"index":4812},{"krate":0,"index":4815},{"krate":0,"index":4818},{"krate":0,"index":4821},{"krate":0,"index":4824},{"krate":0,"index":4827},{"krate":0,"index":4830},{"krate":0,"index":4833},{"krate":0,"index":4836},{"krate":0,"index":4839},{"krate":0,"index":4842},{"krate":0,"index":4845},{"krate":0,"index":4848},{"krate":0,"index":4851},{"krate":0,"index":4854},{"krate":0,"index":4857}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4946},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290034,"byte_end":290035,"line_start":303,"line_end":303,"column_start":26,"column_end":27},"name":"C","qualname":"::parser::choice::C::C","value":"C::C(C)","parent":{"krate":0,"index":4920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4949},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290036,"byte_end":290037,"line_start":303,"line_end":303,"column_start":28,"column_end":29},"name":"D","qualname":"::parser::choice::C::D","value":"C::D(D)","parent":{"krate":0,"index":4920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4952},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290038,"byte_end":290039,"line_start":303,"line_end":303,"column_start":30,"column_end":31},"name":"E","qualname":"::parser::choice::C::E","value":"C::E(E)","parent":{"krate":0,"index":4920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4955},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290040,"byte_end":290041,"line_start":303,"line_end":303,"column_start":32,"column_end":33},"name":"F","qualname":"::parser::choice::C::F","value":"C::F(F)","parent":{"krate":0,"index":4920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4958},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290042,"byte_end":290043,"line_start":303,"line_end":303,"column_start":34,"column_end":35},"name":"G","qualname":"::parser::choice::C::G","value":"C::G(G)","parent":{"krate":0,"index":4920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4961},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290044,"byte_end":290045,"line_start":303,"line_end":303,"column_start":36,"column_end":37},"name":"H","qualname":"::parser::choice::C::H","value":"C::H(H)","parent":{"krate":0,"index":4920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4964},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290046,"byte_end":290047,"line_start":303,"line_end":303,"column_start":38,"column_end":39},"name":"I","qualname":"::parser::choice::C::I","value":"C::I(I)","parent":{"krate":0,"index":4920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4967},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290048,"byte_end":290049,"line_start":303,"line_end":303,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::C::J","value":"C::J(J)","parent":{"krate":0,"index":4920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4970},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290050,"byte_end":290051,"line_start":303,"line_end":303,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::C::K","value":"C::K(K)","parent":{"krate":0,"index":4920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4973},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290052,"byte_end":290053,"line_start":303,"line_end":303,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::C::L","value":"C::L(L)","parent":{"krate":0,"index":4920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4976},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290054,"byte_end":290055,"line_start":303,"line_end":303,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::C::M","value":"C::M(M)","parent":{"krate":0,"index":4920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4979},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290056,"byte_end":290057,"line_start":303,"line_end":303,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::C::N","value":"C::N(N)","parent":{"krate":0,"index":4920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4982},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290058,"byte_end":290059,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::C::O","value":"C::O(O)","parent":{"krate":0,"index":4920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4985},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290060,"byte_end":290061,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::C::P","value":"C::P(P)","parent":{"krate":0,"index":4920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4988},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290062,"byte_end":290063,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::C::Q","value":"C::Q(Q)","parent":{"krate":0,"index":4920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4991},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290064,"byte_end":290065,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::C::R","value":"C::R(R)","parent":{"krate":0,"index":4920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4994},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290066,"byte_end":290067,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::C::S","value":"C::S(S)","parent":{"krate":0,"index":4920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4997},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290068,"byte_end":290069,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::C::T","value":"C::T(T)","parent":{"krate":0,"index":4920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5000},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290070,"byte_end":290071,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::C::U","value":"C::U(U)","parent":{"krate":0,"index":4920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5003},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290072,"byte_end":290073,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::C::V","value":"C::V(V)","parent":{"krate":0,"index":4920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5006},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290074,"byte_end":290075,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::C::X","value":"C::X(X)","parent":{"krate":0,"index":4920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5009},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290076,"byte_end":290077,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::C::Y","value":"C::Y(Y)","parent":{"krate":0,"index":4920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5012},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290078,"byte_end":290079,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::C::Z","value":"C::Z(Z)","parent":{"krate":0,"index":4920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4920},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290034,"byte_end":290035,"line_start":303,"line_end":303,"column_start":26,"column_end":27},"name":"C","qualname":"::parser::choice::C","value":"pub enum C<C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, X, Y,\n           Z> {\n    Peek,\n    C(C),\n    D(D),\n    E(E),\n    F(F),\n    G(G),\n    H(H),\n    I(I),\n    J(J),\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":4944},{"krate":0,"index":4946},{"krate":0,"index":4949},{"krate":0,"index":4952},{"krate":0,"index":4955},{"krate":0,"index":4958},{"krate":0,"index":4961},{"krate":0,"index":4964},{"krate":0,"index":4967},{"krate":0,"index":4970},{"krate":0,"index":4973},{"krate":0,"index":4976},{"krate":0,"index":4979},{"krate":0,"index":4982},{"krate":0,"index":4985},{"krate":0,"index":4988},{"krate":0,"index":4991},{"krate":0,"index":4994},{"krate":0,"index":4997},{"krate":0,"index":5000},{"krate":0,"index":5003},{"krate":0,"index":5006},{"krate":0,"index":5009},{"krate":0,"index":5012}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5098},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290036,"byte_end":290037,"line_start":303,"line_end":303,"column_start":28,"column_end":29},"name":"D","qualname":"::parser::choice::D::D","value":"D::D(D)","parent":{"krate":0,"index":5073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5101},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290038,"byte_end":290039,"line_start":303,"line_end":303,"column_start":30,"column_end":31},"name":"E","qualname":"::parser::choice::D::E","value":"D::E(E)","parent":{"krate":0,"index":5073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5104},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290040,"byte_end":290041,"line_start":303,"line_end":303,"column_start":32,"column_end":33},"name":"F","qualname":"::parser::choice::D::F","value":"D::F(F)","parent":{"krate":0,"index":5073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5107},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290042,"byte_end":290043,"line_start":303,"line_end":303,"column_start":34,"column_end":35},"name":"G","qualname":"::parser::choice::D::G","value":"D::G(G)","parent":{"krate":0,"index":5073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5110},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290044,"byte_end":290045,"line_start":303,"line_end":303,"column_start":36,"column_end":37},"name":"H","qualname":"::parser::choice::D::H","value":"D::H(H)","parent":{"krate":0,"index":5073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5113},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290046,"byte_end":290047,"line_start":303,"line_end":303,"column_start":38,"column_end":39},"name":"I","qualname":"::parser::choice::D::I","value":"D::I(I)","parent":{"krate":0,"index":5073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5116},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290048,"byte_end":290049,"line_start":303,"line_end":303,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::D::J","value":"D::J(J)","parent":{"krate":0,"index":5073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5119},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290050,"byte_end":290051,"line_start":303,"line_end":303,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::D::K","value":"D::K(K)","parent":{"krate":0,"index":5073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5122},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290052,"byte_end":290053,"line_start":303,"line_end":303,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::D::L","value":"D::L(L)","parent":{"krate":0,"index":5073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5125},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290054,"byte_end":290055,"line_start":303,"line_end":303,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::D::M","value":"D::M(M)","parent":{"krate":0,"index":5073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5128},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290056,"byte_end":290057,"line_start":303,"line_end":303,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::D::N","value":"D::N(N)","parent":{"krate":0,"index":5073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5131},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290058,"byte_end":290059,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::D::O","value":"D::O(O)","parent":{"krate":0,"index":5073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5134},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290060,"byte_end":290061,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::D::P","value":"D::P(P)","parent":{"krate":0,"index":5073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5137},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290062,"byte_end":290063,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::D::Q","value":"D::Q(Q)","parent":{"krate":0,"index":5073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5140},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290064,"byte_end":290065,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::D::R","value":"D::R(R)","parent":{"krate":0,"index":5073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5143},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290066,"byte_end":290067,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::D::S","value":"D::S(S)","parent":{"krate":0,"index":5073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5146},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290068,"byte_end":290069,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::D::T","value":"D::T(T)","parent":{"krate":0,"index":5073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5149},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290070,"byte_end":290071,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::D::U","value":"D::U(U)","parent":{"krate":0,"index":5073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5152},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290072,"byte_end":290073,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::D::V","value":"D::V(V)","parent":{"krate":0,"index":5073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5155},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290074,"byte_end":290075,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::D::X","value":"D::X(X)","parent":{"krate":0,"index":5073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5158},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290076,"byte_end":290077,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::D::Y","value":"D::Y(Y)","parent":{"krate":0,"index":5073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5161},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290078,"byte_end":290079,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::D::Z","value":"D::Z(Z)","parent":{"krate":0,"index":5073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5073},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290036,"byte_end":290037,"line_start":303,"line_end":303,"column_start":28,"column_end":29},"name":"D","qualname":"::parser::choice::D","value":"pub enum D<D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Peek,\n    D(D),\n    E(E),\n    F(F),\n    G(G),\n    H(H),\n    I(I),\n    J(J),\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":5096},{"krate":0,"index":5098},{"krate":0,"index":5101},{"krate":0,"index":5104},{"krate":0,"index":5107},{"krate":0,"index":5110},{"krate":0,"index":5113},{"krate":0,"index":5116},{"krate":0,"index":5119},{"krate":0,"index":5122},{"krate":0,"index":5125},{"krate":0,"index":5128},{"krate":0,"index":5131},{"krate":0,"index":5134},{"krate":0,"index":5137},{"krate":0,"index":5140},{"krate":0,"index":5143},{"krate":0,"index":5146},{"krate":0,"index":5149},{"krate":0,"index":5152},{"krate":0,"index":5155},{"krate":0,"index":5158},{"krate":0,"index":5161}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5244},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290038,"byte_end":290039,"line_start":303,"line_end":303,"column_start":30,"column_end":31},"name":"E","qualname":"::parser::choice::E::E","value":"E::E(E)","parent":{"krate":0,"index":5220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5247},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290040,"byte_end":290041,"line_start":303,"line_end":303,"column_start":32,"column_end":33},"name":"F","qualname":"::parser::choice::E::F","value":"E::F(F)","parent":{"krate":0,"index":5220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5250},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290042,"byte_end":290043,"line_start":303,"line_end":303,"column_start":34,"column_end":35},"name":"G","qualname":"::parser::choice::E::G","value":"E::G(G)","parent":{"krate":0,"index":5220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5253},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290044,"byte_end":290045,"line_start":303,"line_end":303,"column_start":36,"column_end":37},"name":"H","qualname":"::parser::choice::E::H","value":"E::H(H)","parent":{"krate":0,"index":5220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5256},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290046,"byte_end":290047,"line_start":303,"line_end":303,"column_start":38,"column_end":39},"name":"I","qualname":"::parser::choice::E::I","value":"E::I(I)","parent":{"krate":0,"index":5220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5259},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290048,"byte_end":290049,"line_start":303,"line_end":303,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::E::J","value":"E::J(J)","parent":{"krate":0,"index":5220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5262},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290050,"byte_end":290051,"line_start":303,"line_end":303,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::E::K","value":"E::K(K)","parent":{"krate":0,"index":5220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5265},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290052,"byte_end":290053,"line_start":303,"line_end":303,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::E::L","value":"E::L(L)","parent":{"krate":0,"index":5220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5268},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290054,"byte_end":290055,"line_start":303,"line_end":303,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::E::M","value":"E::M(M)","parent":{"krate":0,"index":5220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5271},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290056,"byte_end":290057,"line_start":303,"line_end":303,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::E::N","value":"E::N(N)","parent":{"krate":0,"index":5220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5274},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290058,"byte_end":290059,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::E::O","value":"E::O(O)","parent":{"krate":0,"index":5220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5277},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290060,"byte_end":290061,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::E::P","value":"E::P(P)","parent":{"krate":0,"index":5220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5280},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290062,"byte_end":290063,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::E::Q","value":"E::Q(Q)","parent":{"krate":0,"index":5220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5283},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290064,"byte_end":290065,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::E::R","value":"E::R(R)","parent":{"krate":0,"index":5220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5286},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290066,"byte_end":290067,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::E::S","value":"E::S(S)","parent":{"krate":0,"index":5220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5289},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290068,"byte_end":290069,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::E::T","value":"E::T(T)","parent":{"krate":0,"index":5220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5292},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290070,"byte_end":290071,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::E::U","value":"E::U(U)","parent":{"krate":0,"index":5220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5295},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290072,"byte_end":290073,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::E::V","value":"E::V(V)","parent":{"krate":0,"index":5220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5298},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290074,"byte_end":290075,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::E::X","value":"E::X(X)","parent":{"krate":0,"index":5220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5301},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290076,"byte_end":290077,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::E::Y","value":"E::Y(Y)","parent":{"krate":0,"index":5220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5304},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290078,"byte_end":290079,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::E::Z","value":"E::Z(Z)","parent":{"krate":0,"index":5220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5220},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290038,"byte_end":290039,"line_start":303,"line_end":303,"column_start":30,"column_end":31},"name":"E","qualname":"::parser::choice::E","value":"pub enum E<E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Peek,\n    E(E),\n    F(F),\n    G(G),\n    H(H),\n    I(I),\n    J(J),\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":5242},{"krate":0,"index":5244},{"krate":0,"index":5247},{"krate":0,"index":5250},{"krate":0,"index":5253},{"krate":0,"index":5256},{"krate":0,"index":5259},{"krate":0,"index":5262},{"krate":0,"index":5265},{"krate":0,"index":5268},{"krate":0,"index":5271},{"krate":0,"index":5274},{"krate":0,"index":5277},{"krate":0,"index":5280},{"krate":0,"index":5283},{"krate":0,"index":5286},{"krate":0,"index":5289},{"krate":0,"index":5292},{"krate":0,"index":5295},{"krate":0,"index":5298},{"krate":0,"index":5301},{"krate":0,"index":5304}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5384},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290040,"byte_end":290041,"line_start":303,"line_end":303,"column_start":32,"column_end":33},"name":"F","qualname":"::parser::choice::F::F","value":"F::F(F)","parent":{"krate":0,"index":5361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5387},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290042,"byte_end":290043,"line_start":303,"line_end":303,"column_start":34,"column_end":35},"name":"G","qualname":"::parser::choice::F::G","value":"F::G(G)","parent":{"krate":0,"index":5361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5390},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290044,"byte_end":290045,"line_start":303,"line_end":303,"column_start":36,"column_end":37},"name":"H","qualname":"::parser::choice::F::H","value":"F::H(H)","parent":{"krate":0,"index":5361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5393},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290046,"byte_end":290047,"line_start":303,"line_end":303,"column_start":38,"column_end":39},"name":"I","qualname":"::parser::choice::F::I","value":"F::I(I)","parent":{"krate":0,"index":5361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5396},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290048,"byte_end":290049,"line_start":303,"line_end":303,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::F::J","value":"F::J(J)","parent":{"krate":0,"index":5361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5399},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290050,"byte_end":290051,"line_start":303,"line_end":303,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::F::K","value":"F::K(K)","parent":{"krate":0,"index":5361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5402},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290052,"byte_end":290053,"line_start":303,"line_end":303,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::F::L","value":"F::L(L)","parent":{"krate":0,"index":5361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5405},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290054,"byte_end":290055,"line_start":303,"line_end":303,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::F::M","value":"F::M(M)","parent":{"krate":0,"index":5361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5408},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290056,"byte_end":290057,"line_start":303,"line_end":303,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::F::N","value":"F::N(N)","parent":{"krate":0,"index":5361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5411},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290058,"byte_end":290059,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::F::O","value":"F::O(O)","parent":{"krate":0,"index":5361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5414},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290060,"byte_end":290061,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::F::P","value":"F::P(P)","parent":{"krate":0,"index":5361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5417},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290062,"byte_end":290063,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::F::Q","value":"F::Q(Q)","parent":{"krate":0,"index":5361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5420},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290064,"byte_end":290065,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::F::R","value":"F::R(R)","parent":{"krate":0,"index":5361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5423},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290066,"byte_end":290067,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::F::S","value":"F::S(S)","parent":{"krate":0,"index":5361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5426},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290068,"byte_end":290069,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::F::T","value":"F::T(T)","parent":{"krate":0,"index":5361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5429},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290070,"byte_end":290071,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::F::U","value":"F::U(U)","parent":{"krate":0,"index":5361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5432},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290072,"byte_end":290073,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::F::V","value":"F::V(V)","parent":{"krate":0,"index":5361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5435},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290074,"byte_end":290075,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::F::X","value":"F::X(X)","parent":{"krate":0,"index":5361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5438},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290076,"byte_end":290077,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::F::Y","value":"F::Y(Y)","parent":{"krate":0,"index":5361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5441},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290078,"byte_end":290079,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::F::Z","value":"F::Z(Z)","parent":{"krate":0,"index":5361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5361},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290040,"byte_end":290041,"line_start":303,"line_end":303,"column_start":32,"column_end":33},"name":"F","qualname":"::parser::choice::F","value":"pub enum F<F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Peek,\n    F(F),\n    G(G),\n    H(H),\n    I(I),\n    J(J),\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":5382},{"krate":0,"index":5384},{"krate":0,"index":5387},{"krate":0,"index":5390},{"krate":0,"index":5393},{"krate":0,"index":5396},{"krate":0,"index":5399},{"krate":0,"index":5402},{"krate":0,"index":5405},{"krate":0,"index":5408},{"krate":0,"index":5411},{"krate":0,"index":5414},{"krate":0,"index":5417},{"krate":0,"index":5420},{"krate":0,"index":5423},{"krate":0,"index":5426},{"krate":0,"index":5429},{"krate":0,"index":5432},{"krate":0,"index":5435},{"krate":0,"index":5438},{"krate":0,"index":5441}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5518},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290042,"byte_end":290043,"line_start":303,"line_end":303,"column_start":34,"column_end":35},"name":"G","qualname":"::parser::choice::G::G","value":"G::G(G)","parent":{"krate":0,"index":5496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5521},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290044,"byte_end":290045,"line_start":303,"line_end":303,"column_start":36,"column_end":37},"name":"H","qualname":"::parser::choice::G::H","value":"G::H(H)","parent":{"krate":0,"index":5496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5524},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290046,"byte_end":290047,"line_start":303,"line_end":303,"column_start":38,"column_end":39},"name":"I","qualname":"::parser::choice::G::I","value":"G::I(I)","parent":{"krate":0,"index":5496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5527},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290048,"byte_end":290049,"line_start":303,"line_end":303,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::G::J","value":"G::J(J)","parent":{"krate":0,"index":5496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5530},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290050,"byte_end":290051,"line_start":303,"line_end":303,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::G::K","value":"G::K(K)","parent":{"krate":0,"index":5496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5533},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290052,"byte_end":290053,"line_start":303,"line_end":303,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::G::L","value":"G::L(L)","parent":{"krate":0,"index":5496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5536},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290054,"byte_end":290055,"line_start":303,"line_end":303,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::G::M","value":"G::M(M)","parent":{"krate":0,"index":5496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5539},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290056,"byte_end":290057,"line_start":303,"line_end":303,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::G::N","value":"G::N(N)","parent":{"krate":0,"index":5496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5542},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290058,"byte_end":290059,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::G::O","value":"G::O(O)","parent":{"krate":0,"index":5496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5545},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290060,"byte_end":290061,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::G::P","value":"G::P(P)","parent":{"krate":0,"index":5496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5548},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290062,"byte_end":290063,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::G::Q","value":"G::Q(Q)","parent":{"krate":0,"index":5496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5551},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290064,"byte_end":290065,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::G::R","value":"G::R(R)","parent":{"krate":0,"index":5496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5554},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290066,"byte_end":290067,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::G::S","value":"G::S(S)","parent":{"krate":0,"index":5496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5557},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290068,"byte_end":290069,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::G::T","value":"G::T(T)","parent":{"krate":0,"index":5496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5560},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290070,"byte_end":290071,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::G::U","value":"G::U(U)","parent":{"krate":0,"index":5496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5563},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290072,"byte_end":290073,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::G::V","value":"G::V(V)","parent":{"krate":0,"index":5496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5566},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290074,"byte_end":290075,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::G::X","value":"G::X(X)","parent":{"krate":0,"index":5496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5569},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290076,"byte_end":290077,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::G::Y","value":"G::Y(Y)","parent":{"krate":0,"index":5496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5572},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290078,"byte_end":290079,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::G::Z","value":"G::Z(Z)","parent":{"krate":0,"index":5496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5496},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290042,"byte_end":290043,"line_start":303,"line_end":303,"column_start":34,"column_end":35},"name":"G","qualname":"::parser::choice::G","value":"pub enum G<G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Peek,\n    G(G),\n    H(H),\n    I(I),\n    J(J),\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":5516},{"krate":0,"index":5518},{"krate":0,"index":5521},{"krate":0,"index":5524},{"krate":0,"index":5527},{"krate":0,"index":5530},{"krate":0,"index":5533},{"krate":0,"index":5536},{"krate":0,"index":5539},{"krate":0,"index":5542},{"krate":0,"index":5545},{"krate":0,"index":5548},{"krate":0,"index":5551},{"krate":0,"index":5554},{"krate":0,"index":5557},{"krate":0,"index":5560},{"krate":0,"index":5563},{"krate":0,"index":5566},{"krate":0,"index":5569},{"krate":0,"index":5572}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5646},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290044,"byte_end":290045,"line_start":303,"line_end":303,"column_start":36,"column_end":37},"name":"H","qualname":"::parser::choice::H::H","value":"H::H(H)","parent":{"krate":0,"index":5625},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5649},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290046,"byte_end":290047,"line_start":303,"line_end":303,"column_start":38,"column_end":39},"name":"I","qualname":"::parser::choice::H::I","value":"H::I(I)","parent":{"krate":0,"index":5625},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5652},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290048,"byte_end":290049,"line_start":303,"line_end":303,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::H::J","value":"H::J(J)","parent":{"krate":0,"index":5625},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5655},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290050,"byte_end":290051,"line_start":303,"line_end":303,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::H::K","value":"H::K(K)","parent":{"krate":0,"index":5625},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5658},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290052,"byte_end":290053,"line_start":303,"line_end":303,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::H::L","value":"H::L(L)","parent":{"krate":0,"index":5625},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5661},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290054,"byte_end":290055,"line_start":303,"line_end":303,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::H::M","value":"H::M(M)","parent":{"krate":0,"index":5625},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5664},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290056,"byte_end":290057,"line_start":303,"line_end":303,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::H::N","value":"H::N(N)","parent":{"krate":0,"index":5625},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5667},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290058,"byte_end":290059,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::H::O","value":"H::O(O)","parent":{"krate":0,"index":5625},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5670},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290060,"byte_end":290061,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::H::P","value":"H::P(P)","parent":{"krate":0,"index":5625},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5673},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290062,"byte_end":290063,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::H::Q","value":"H::Q(Q)","parent":{"krate":0,"index":5625},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5676},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290064,"byte_end":290065,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::H::R","value":"H::R(R)","parent":{"krate":0,"index":5625},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5679},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290066,"byte_end":290067,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::H::S","value":"H::S(S)","parent":{"krate":0,"index":5625},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5682},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290068,"byte_end":290069,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::H::T","value":"H::T(T)","parent":{"krate":0,"index":5625},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5685},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290070,"byte_end":290071,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::H::U","value":"H::U(U)","parent":{"krate":0,"index":5625},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5688},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290072,"byte_end":290073,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::H::V","value":"H::V(V)","parent":{"krate":0,"index":5625},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5691},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290074,"byte_end":290075,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::H::X","value":"H::X(X)","parent":{"krate":0,"index":5625},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5694},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290076,"byte_end":290077,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::H::Y","value":"H::Y(Y)","parent":{"krate":0,"index":5625},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5697},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290078,"byte_end":290079,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::H::Z","value":"H::Z(Z)","parent":{"krate":0,"index":5625},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5625},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290044,"byte_end":290045,"line_start":303,"line_end":303,"column_start":36,"column_end":37},"name":"H","qualname":"::parser::choice::H","value":"pub enum H<H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Peek,\n    H(H),\n    I(I),\n    J(J),\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":5644},{"krate":0,"index":5646},{"krate":0,"index":5649},{"krate":0,"index":5652},{"krate":0,"index":5655},{"krate":0,"index":5658},{"krate":0,"index":5661},{"krate":0,"index":5664},{"krate":0,"index":5667},{"krate":0,"index":5670},{"krate":0,"index":5673},{"krate":0,"index":5676},{"krate":0,"index":5679},{"krate":0,"index":5682},{"krate":0,"index":5685},{"krate":0,"index":5688},{"krate":0,"index":5691},{"krate":0,"index":5694},{"krate":0,"index":5697}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5768},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290046,"byte_end":290047,"line_start":303,"line_end":303,"column_start":38,"column_end":39},"name":"I","qualname":"::parser::choice::I::I","value":"I::I(I)","parent":{"krate":0,"index":5748},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5771},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290048,"byte_end":290049,"line_start":303,"line_end":303,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::I::J","value":"I::J(J)","parent":{"krate":0,"index":5748},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5774},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290050,"byte_end":290051,"line_start":303,"line_end":303,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::I::K","value":"I::K(K)","parent":{"krate":0,"index":5748},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5777},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290052,"byte_end":290053,"line_start":303,"line_end":303,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::I::L","value":"I::L(L)","parent":{"krate":0,"index":5748},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5780},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290054,"byte_end":290055,"line_start":303,"line_end":303,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::I::M","value":"I::M(M)","parent":{"krate":0,"index":5748},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5783},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290056,"byte_end":290057,"line_start":303,"line_end":303,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::I::N","value":"I::N(N)","parent":{"krate":0,"index":5748},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5786},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290058,"byte_end":290059,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::I::O","value":"I::O(O)","parent":{"krate":0,"index":5748},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5789},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290060,"byte_end":290061,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::I::P","value":"I::P(P)","parent":{"krate":0,"index":5748},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5792},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290062,"byte_end":290063,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::I::Q","value":"I::Q(Q)","parent":{"krate":0,"index":5748},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5795},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290064,"byte_end":290065,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::I::R","value":"I::R(R)","parent":{"krate":0,"index":5748},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5798},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290066,"byte_end":290067,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::I::S","value":"I::S(S)","parent":{"krate":0,"index":5748},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5801},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290068,"byte_end":290069,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::I::T","value":"I::T(T)","parent":{"krate":0,"index":5748},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5804},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290070,"byte_end":290071,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::I::U","value":"I::U(U)","parent":{"krate":0,"index":5748},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5807},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290072,"byte_end":290073,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::I::V","value":"I::V(V)","parent":{"krate":0,"index":5748},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5810},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290074,"byte_end":290075,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::I::X","value":"I::X(X)","parent":{"krate":0,"index":5748},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5813},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290076,"byte_end":290077,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::I::Y","value":"I::Y(Y)","parent":{"krate":0,"index":5748},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5816},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290078,"byte_end":290079,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::I::Z","value":"I::Z(Z)","parent":{"krate":0,"index":5748},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5748},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290046,"byte_end":290047,"line_start":303,"line_end":303,"column_start":38,"column_end":39},"name":"I","qualname":"::parser::choice::I","value":"pub enum I<I, J, K, L, M, N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Peek,\n    I(I),\n    J(J),\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":5766},{"krate":0,"index":5768},{"krate":0,"index":5771},{"krate":0,"index":5774},{"krate":0,"index":5777},{"krate":0,"index":5780},{"krate":0,"index":5783},{"krate":0,"index":5786},{"krate":0,"index":5789},{"krate":0,"index":5792},{"krate":0,"index":5795},{"krate":0,"index":5798},{"krate":0,"index":5801},{"krate":0,"index":5804},{"krate":0,"index":5807},{"krate":0,"index":5810},{"krate":0,"index":5813},{"krate":0,"index":5816}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5884},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290048,"byte_end":290049,"line_start":303,"line_end":303,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::J::J","value":"J::J(J)","parent":{"krate":0,"index":5865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5887},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290050,"byte_end":290051,"line_start":303,"line_end":303,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::J::K","value":"J::K(K)","parent":{"krate":0,"index":5865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5890},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290052,"byte_end":290053,"line_start":303,"line_end":303,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::J::L","value":"J::L(L)","parent":{"krate":0,"index":5865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5893},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290054,"byte_end":290055,"line_start":303,"line_end":303,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::J::M","value":"J::M(M)","parent":{"krate":0,"index":5865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5896},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290056,"byte_end":290057,"line_start":303,"line_end":303,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::J::N","value":"J::N(N)","parent":{"krate":0,"index":5865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5899},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290058,"byte_end":290059,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::J::O","value":"J::O(O)","parent":{"krate":0,"index":5865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5902},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290060,"byte_end":290061,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::J::P","value":"J::P(P)","parent":{"krate":0,"index":5865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5905},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290062,"byte_end":290063,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::J::Q","value":"J::Q(Q)","parent":{"krate":0,"index":5865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5908},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290064,"byte_end":290065,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::J::R","value":"J::R(R)","parent":{"krate":0,"index":5865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5911},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290066,"byte_end":290067,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::J::S","value":"J::S(S)","parent":{"krate":0,"index":5865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5914},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290068,"byte_end":290069,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::J::T","value":"J::T(T)","parent":{"krate":0,"index":5865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5917},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290070,"byte_end":290071,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::J::U","value":"J::U(U)","parent":{"krate":0,"index":5865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5920},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290072,"byte_end":290073,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::J::V","value":"J::V(V)","parent":{"krate":0,"index":5865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5923},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290074,"byte_end":290075,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::J::X","value":"J::X(X)","parent":{"krate":0,"index":5865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5926},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290076,"byte_end":290077,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::J::Y","value":"J::Y(Y)","parent":{"krate":0,"index":5865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5929},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290078,"byte_end":290079,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::J::Z","value":"J::Z(Z)","parent":{"krate":0,"index":5865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5865},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290048,"byte_end":290049,"line_start":303,"line_end":303,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::J","value":"pub enum J<J, K, L, M, N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Peek,\n    J(J),\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":5882},{"krate":0,"index":5884},{"krate":0,"index":5887},{"krate":0,"index":5890},{"krate":0,"index":5893},{"krate":0,"index":5896},{"krate":0,"index":5899},{"krate":0,"index":5902},{"krate":0,"index":5905},{"krate":0,"index":5908},{"krate":0,"index":5911},{"krate":0,"index":5914},{"krate":0,"index":5917},{"krate":0,"index":5920},{"krate":0,"index":5923},{"krate":0,"index":5926},{"krate":0,"index":5929}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5994},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290050,"byte_end":290051,"line_start":303,"line_end":303,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::K::K","value":"K::K(K)","parent":{"krate":0,"index":5976},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5997},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290052,"byte_end":290053,"line_start":303,"line_end":303,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::K::L","value":"K::L(L)","parent":{"krate":0,"index":5976},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6000},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290054,"byte_end":290055,"line_start":303,"line_end":303,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::K::M","value":"K::M(M)","parent":{"krate":0,"index":5976},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6003},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290056,"byte_end":290057,"line_start":303,"line_end":303,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::K::N","value":"K::N(N)","parent":{"krate":0,"index":5976},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6006},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290058,"byte_end":290059,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::K::O","value":"K::O(O)","parent":{"krate":0,"index":5976},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6009},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290060,"byte_end":290061,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::K::P","value":"K::P(P)","parent":{"krate":0,"index":5976},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6012},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290062,"byte_end":290063,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::K::Q","value":"K::Q(Q)","parent":{"krate":0,"index":5976},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6015},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290064,"byte_end":290065,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::K::R","value":"K::R(R)","parent":{"krate":0,"index":5976},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6018},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290066,"byte_end":290067,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::K::S","value":"K::S(S)","parent":{"krate":0,"index":5976},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6021},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290068,"byte_end":290069,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::K::T","value":"K::T(T)","parent":{"krate":0,"index":5976},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6024},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290070,"byte_end":290071,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::K::U","value":"K::U(U)","parent":{"krate":0,"index":5976},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6027},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290072,"byte_end":290073,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::K::V","value":"K::V(V)","parent":{"krate":0,"index":5976},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6030},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290074,"byte_end":290075,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::K::X","value":"K::X(X)","parent":{"krate":0,"index":5976},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6033},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290076,"byte_end":290077,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::K::Y","value":"K::Y(Y)","parent":{"krate":0,"index":5976},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6036},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290078,"byte_end":290079,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::K::Z","value":"K::Z(Z)","parent":{"krate":0,"index":5976},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5976},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290050,"byte_end":290051,"line_start":303,"line_end":303,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::K","value":"pub enum K<K, L, M, N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Peek,\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":5992},{"krate":0,"index":5994},{"krate":0,"index":5997},{"krate":0,"index":6000},{"krate":0,"index":6003},{"krate":0,"index":6006},{"krate":0,"index":6009},{"krate":0,"index":6012},{"krate":0,"index":6015},{"krate":0,"index":6018},{"krate":0,"index":6021},{"krate":0,"index":6024},{"krate":0,"index":6027},{"krate":0,"index":6030},{"krate":0,"index":6033},{"krate":0,"index":6036}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6098},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290052,"byte_end":290053,"line_start":303,"line_end":303,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::L::L","value":"L::L(L)","parent":{"krate":0,"index":6081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6101},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290054,"byte_end":290055,"line_start":303,"line_end":303,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::L::M","value":"L::M(M)","parent":{"krate":0,"index":6081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6104},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290056,"byte_end":290057,"line_start":303,"line_end":303,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::L::N","value":"L::N(N)","parent":{"krate":0,"index":6081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6107},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290058,"byte_end":290059,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::L::O","value":"L::O(O)","parent":{"krate":0,"index":6081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6110},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290060,"byte_end":290061,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::L::P","value":"L::P(P)","parent":{"krate":0,"index":6081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6113},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290062,"byte_end":290063,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::L::Q","value":"L::Q(Q)","parent":{"krate":0,"index":6081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6116},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290064,"byte_end":290065,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::L::R","value":"L::R(R)","parent":{"krate":0,"index":6081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6119},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290066,"byte_end":290067,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::L::S","value":"L::S(S)","parent":{"krate":0,"index":6081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6122},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290068,"byte_end":290069,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::L::T","value":"L::T(T)","parent":{"krate":0,"index":6081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6125},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290070,"byte_end":290071,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::L::U","value":"L::U(U)","parent":{"krate":0,"index":6081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6128},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290072,"byte_end":290073,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::L::V","value":"L::V(V)","parent":{"krate":0,"index":6081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6131},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290074,"byte_end":290075,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::L::X","value":"L::X(X)","parent":{"krate":0,"index":6081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6134},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290076,"byte_end":290077,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::L::Y","value":"L::Y(Y)","parent":{"krate":0,"index":6081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6137},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290078,"byte_end":290079,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::L::Z","value":"L::Z(Z)","parent":{"krate":0,"index":6081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6081},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290052,"byte_end":290053,"line_start":303,"line_end":303,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::L","value":"pub enum L<L, M, N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Peek,\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":6096},{"krate":0,"index":6098},{"krate":0,"index":6101},{"krate":0,"index":6104},{"krate":0,"index":6107},{"krate":0,"index":6110},{"krate":0,"index":6113},{"krate":0,"index":6116},{"krate":0,"index":6119},{"krate":0,"index":6122},{"krate":0,"index":6125},{"krate":0,"index":6128},{"krate":0,"index":6131},{"krate":0,"index":6134},{"krate":0,"index":6137}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6196},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290054,"byte_end":290055,"line_start":303,"line_end":303,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::M::M","value":"M::M(M)","parent":{"krate":0,"index":6180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6199},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290056,"byte_end":290057,"line_start":303,"line_end":303,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::M::N","value":"M::N(N)","parent":{"krate":0,"index":6180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6202},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290058,"byte_end":290059,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::M::O","value":"M::O(O)","parent":{"krate":0,"index":6180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6205},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290060,"byte_end":290061,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::M::P","value":"M::P(P)","parent":{"krate":0,"index":6180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6208},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290062,"byte_end":290063,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::M::Q","value":"M::Q(Q)","parent":{"krate":0,"index":6180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6211},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290064,"byte_end":290065,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::M::R","value":"M::R(R)","parent":{"krate":0,"index":6180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6214},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290066,"byte_end":290067,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::M::S","value":"M::S(S)","parent":{"krate":0,"index":6180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6217},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290068,"byte_end":290069,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::M::T","value":"M::T(T)","parent":{"krate":0,"index":6180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6220},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290070,"byte_end":290071,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::M::U","value":"M::U(U)","parent":{"krate":0,"index":6180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6223},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290072,"byte_end":290073,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::M::V","value":"M::V(V)","parent":{"krate":0,"index":6180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6226},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290074,"byte_end":290075,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::M::X","value":"M::X(X)","parent":{"krate":0,"index":6180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6229},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290076,"byte_end":290077,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::M::Y","value":"M::Y(Y)","parent":{"krate":0,"index":6180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6232},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290078,"byte_end":290079,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::M::Z","value":"M::Z(Z)","parent":{"krate":0,"index":6180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6180},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290054,"byte_end":290055,"line_start":303,"line_end":303,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::M","value":"pub enum M<M, N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Peek,\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":6194},{"krate":0,"index":6196},{"krate":0,"index":6199},{"krate":0,"index":6202},{"krate":0,"index":6205},{"krate":0,"index":6208},{"krate":0,"index":6211},{"krate":0,"index":6214},{"krate":0,"index":6217},{"krate":0,"index":6220},{"krate":0,"index":6223},{"krate":0,"index":6226},{"krate":0,"index":6229},{"krate":0,"index":6232}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6288},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290056,"byte_end":290057,"line_start":303,"line_end":303,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::N::N","value":"N::N(N)","parent":{"krate":0,"index":6273},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6291},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290058,"byte_end":290059,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::N::O","value":"N::O(O)","parent":{"krate":0,"index":6273},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6294},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290060,"byte_end":290061,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::N::P","value":"N::P(P)","parent":{"krate":0,"index":6273},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6297},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290062,"byte_end":290063,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::N::Q","value":"N::Q(Q)","parent":{"krate":0,"index":6273},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6300},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290064,"byte_end":290065,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::N::R","value":"N::R(R)","parent":{"krate":0,"index":6273},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6303},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290066,"byte_end":290067,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::N::S","value":"N::S(S)","parent":{"krate":0,"index":6273},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6306},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290068,"byte_end":290069,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::N::T","value":"N::T(T)","parent":{"krate":0,"index":6273},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6309},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290070,"byte_end":290071,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::N::U","value":"N::U(U)","parent":{"krate":0,"index":6273},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6312},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290072,"byte_end":290073,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::N::V","value":"N::V(V)","parent":{"krate":0,"index":6273},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6315},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290074,"byte_end":290075,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::N::X","value":"N::X(X)","parent":{"krate":0,"index":6273},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6318},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290076,"byte_end":290077,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::N::Y","value":"N::Y(Y)","parent":{"krate":0,"index":6273},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6321},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290078,"byte_end":290079,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::N::Z","value":"N::Z(Z)","parent":{"krate":0,"index":6273},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6273},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290056,"byte_end":290057,"line_start":303,"line_end":303,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::N","value":"pub enum N<N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Peek,\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":6286},{"krate":0,"index":6288},{"krate":0,"index":6291},{"krate":0,"index":6294},{"krate":0,"index":6297},{"krate":0,"index":6300},{"krate":0,"index":6303},{"krate":0,"index":6306},{"krate":0,"index":6309},{"krate":0,"index":6312},{"krate":0,"index":6315},{"krate":0,"index":6318},{"krate":0,"index":6321}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6374},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290058,"byte_end":290059,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::O::O","value":"O::O(O)","parent":{"krate":0,"index":6360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6377},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290060,"byte_end":290061,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::O::P","value":"O::P(P)","parent":{"krate":0,"index":6360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6380},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290062,"byte_end":290063,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::O::Q","value":"O::Q(Q)","parent":{"krate":0,"index":6360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6383},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290064,"byte_end":290065,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::O::R","value":"O::R(R)","parent":{"krate":0,"index":6360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6386},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290066,"byte_end":290067,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::O::S","value":"O::S(S)","parent":{"krate":0,"index":6360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6389},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290068,"byte_end":290069,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::O::T","value":"O::T(T)","parent":{"krate":0,"index":6360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6392},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290070,"byte_end":290071,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::O::U","value":"O::U(U)","parent":{"krate":0,"index":6360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6395},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290072,"byte_end":290073,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::O::V","value":"O::V(V)","parent":{"krate":0,"index":6360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6398},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290074,"byte_end":290075,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::O::X","value":"O::X(X)","parent":{"krate":0,"index":6360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6401},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290076,"byte_end":290077,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::O::Y","value":"O::Y(Y)","parent":{"krate":0,"index":6360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6404},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290078,"byte_end":290079,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::O::Z","value":"O::Z(Z)","parent":{"krate":0,"index":6360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6360},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290058,"byte_end":290059,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::O","value":"pub enum O<O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Peek,\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":6372},{"krate":0,"index":6374},{"krate":0,"index":6377},{"krate":0,"index":6380},{"krate":0,"index":6383},{"krate":0,"index":6386},{"krate":0,"index":6389},{"krate":0,"index":6392},{"krate":0,"index":6395},{"krate":0,"index":6398},{"krate":0,"index":6401},{"krate":0,"index":6404}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6454},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290060,"byte_end":290061,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::P::P","value":"P::P(P)","parent":{"krate":0,"index":6441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6457},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290062,"byte_end":290063,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::P::Q","value":"P::Q(Q)","parent":{"krate":0,"index":6441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6460},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290064,"byte_end":290065,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::P::R","value":"P::R(R)","parent":{"krate":0,"index":6441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6463},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290066,"byte_end":290067,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::P::S","value":"P::S(S)","parent":{"krate":0,"index":6441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6466},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290068,"byte_end":290069,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::P::T","value":"P::T(T)","parent":{"krate":0,"index":6441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6469},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290070,"byte_end":290071,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::P::U","value":"P::U(U)","parent":{"krate":0,"index":6441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6472},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290072,"byte_end":290073,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::P::V","value":"P::V(V)","parent":{"krate":0,"index":6441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6475},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290074,"byte_end":290075,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::P::X","value":"P::X(X)","parent":{"krate":0,"index":6441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6478},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290076,"byte_end":290077,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::P::Y","value":"P::Y(Y)","parent":{"krate":0,"index":6441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6481},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290078,"byte_end":290079,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::P::Z","value":"P::Z(Z)","parent":{"krate":0,"index":6441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6441},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290060,"byte_end":290061,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::P","value":"pub enum P<P, Q, R, S, T, U, V, X, Y, Z> {\n    Peek,\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":6452},{"krate":0,"index":6454},{"krate":0,"index":6457},{"krate":0,"index":6460},{"krate":0,"index":6463},{"krate":0,"index":6466},{"krate":0,"index":6469},{"krate":0,"index":6472},{"krate":0,"index":6475},{"krate":0,"index":6478},{"krate":0,"index":6481}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6528},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290062,"byte_end":290063,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::Q::Q","value":"Q::Q(Q)","parent":{"krate":0,"index":6516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6531},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290064,"byte_end":290065,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::Q::R","value":"Q::R(R)","parent":{"krate":0,"index":6516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6534},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290066,"byte_end":290067,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::Q::S","value":"Q::S(S)","parent":{"krate":0,"index":6516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6537},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290068,"byte_end":290069,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::Q::T","value":"Q::T(T)","parent":{"krate":0,"index":6516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6540},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290070,"byte_end":290071,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::Q::U","value":"Q::U(U)","parent":{"krate":0,"index":6516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6543},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290072,"byte_end":290073,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::Q::V","value":"Q::V(V)","parent":{"krate":0,"index":6516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6546},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290074,"byte_end":290075,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::Q::X","value":"Q::X(X)","parent":{"krate":0,"index":6516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6549},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290076,"byte_end":290077,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::Q::Y","value":"Q::Y(Y)","parent":{"krate":0,"index":6516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6552},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290078,"byte_end":290079,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::Q::Z","value":"Q::Z(Z)","parent":{"krate":0,"index":6516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6516},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290062,"byte_end":290063,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::Q","value":"pub enum Q<Q, R, S, T, U, V, X, Y, Z> {\n    Peek,\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":6526},{"krate":0,"index":6528},{"krate":0,"index":6531},{"krate":0,"index":6534},{"krate":0,"index":6537},{"krate":0,"index":6540},{"krate":0,"index":6543},{"krate":0,"index":6546},{"krate":0,"index":6549},{"krate":0,"index":6552}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6596},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290064,"byte_end":290065,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::R::R","value":"R::R(R)","parent":{"krate":0,"index":6585},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6599},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290066,"byte_end":290067,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::R::S","value":"R::S(S)","parent":{"krate":0,"index":6585},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6602},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290068,"byte_end":290069,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::R::T","value":"R::T(T)","parent":{"krate":0,"index":6585},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6605},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290070,"byte_end":290071,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::R::U","value":"R::U(U)","parent":{"krate":0,"index":6585},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6608},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290072,"byte_end":290073,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::R::V","value":"R::V(V)","parent":{"krate":0,"index":6585},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6611},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290074,"byte_end":290075,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::R::X","value":"R::X(X)","parent":{"krate":0,"index":6585},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6614},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290076,"byte_end":290077,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::R::Y","value":"R::Y(Y)","parent":{"krate":0,"index":6585},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6617},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290078,"byte_end":290079,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::R::Z","value":"R::Z(Z)","parent":{"krate":0,"index":6585},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6585},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290064,"byte_end":290065,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::R","value":"pub enum R<R, S, T, U, V, X, Y, Z> {\n    Peek,\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":6594},{"krate":0,"index":6596},{"krate":0,"index":6599},{"krate":0,"index":6602},{"krate":0,"index":6605},{"krate":0,"index":6608},{"krate":0,"index":6611},{"krate":0,"index":6614},{"krate":0,"index":6617}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6658},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290066,"byte_end":290067,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::S::S","value":"S::S(S)","parent":{"krate":0,"index":6648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6661},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290068,"byte_end":290069,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::S::T","value":"S::T(T)","parent":{"krate":0,"index":6648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6664},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290070,"byte_end":290071,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::S::U","value":"S::U(U)","parent":{"krate":0,"index":6648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6667},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290072,"byte_end":290073,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::S::V","value":"S::V(V)","parent":{"krate":0,"index":6648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6670},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290074,"byte_end":290075,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::S::X","value":"S::X(X)","parent":{"krate":0,"index":6648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6673},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290076,"byte_end":290077,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::S::Y","value":"S::Y(Y)","parent":{"krate":0,"index":6648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6676},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290078,"byte_end":290079,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::S::Z","value":"S::Z(Z)","parent":{"krate":0,"index":6648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6648},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290066,"byte_end":290067,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::S","value":"pub enum S<S, T, U, V, X, Y, Z> {\n    Peek,\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":6656},{"krate":0,"index":6658},{"krate":0,"index":6661},{"krate":0,"index":6664},{"krate":0,"index":6667},{"krate":0,"index":6670},{"krate":0,"index":6673},{"krate":0,"index":6676}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6714},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290068,"byte_end":290069,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::T::T","value":"T::T(T)","parent":{"krate":0,"index":6705},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6717},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290070,"byte_end":290071,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::T::U","value":"T::U(U)","parent":{"krate":0,"index":6705},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6720},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290072,"byte_end":290073,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::T::V","value":"T::V(V)","parent":{"krate":0,"index":6705},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6723},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290074,"byte_end":290075,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::T::X","value":"T::X(X)","parent":{"krate":0,"index":6705},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6726},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290076,"byte_end":290077,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::T::Y","value":"T::Y(Y)","parent":{"krate":0,"index":6705},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6729},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290078,"byte_end":290079,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::T::Z","value":"T::Z(Z)","parent":{"krate":0,"index":6705},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6705},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290068,"byte_end":290069,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::T","value":"pub enum T<T, U, V, X, Y, Z> { Peek, T(T), U(U), V(V), X(X), Y(Y), Z(Z), }","parent":null,"children":[{"krate":0,"index":6712},{"krate":0,"index":6714},{"krate":0,"index":6717},{"krate":0,"index":6720},{"krate":0,"index":6723},{"krate":0,"index":6726},{"krate":0,"index":6729}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6764},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290070,"byte_end":290071,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::U::U","value":"U::U(U)","parent":{"krate":0,"index":6756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6767},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290072,"byte_end":290073,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::U::V","value":"U::V(V)","parent":{"krate":0,"index":6756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6770},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290074,"byte_end":290075,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::U::X","value":"U::X(X)","parent":{"krate":0,"index":6756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6773},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290076,"byte_end":290077,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::U::Y","value":"U::Y(Y)","parent":{"krate":0,"index":6756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6776},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290078,"byte_end":290079,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::U::Z","value":"U::Z(Z)","parent":{"krate":0,"index":6756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6756},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290070,"byte_end":290071,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::U","value":"pub enum U<U, V, X, Y, Z> { Peek, U(U), V(V), X(X), Y(Y), Z(Z), }","parent":null,"children":[{"krate":0,"index":6762},{"krate":0,"index":6764},{"krate":0,"index":6767},{"krate":0,"index":6770},{"krate":0,"index":6773},{"krate":0,"index":6776}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6808},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290072,"byte_end":290073,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::V::V","value":"V::V(V)","parent":{"krate":0,"index":6801},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6811},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290074,"byte_end":290075,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::V::X","value":"V::X(X)","parent":{"krate":0,"index":6801},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6814},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290076,"byte_end":290077,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::V::Y","value":"V::Y(Y)","parent":{"krate":0,"index":6801},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6817},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290078,"byte_end":290079,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::V::Z","value":"V::Z(Z)","parent":{"krate":0,"index":6801},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6801},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290072,"byte_end":290073,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::V","value":"pub enum V<V, X, Y, Z> { Peek, V(V), X(X), Y(Y), Z(Z), }","parent":null,"children":[{"krate":0,"index":6806},{"krate":0,"index":6808},{"krate":0,"index":6811},{"krate":0,"index":6814},{"krate":0,"index":6817}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6846},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290074,"byte_end":290075,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::X::X","value":"X::X(X)","parent":{"krate":0,"index":6840},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6849},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290076,"byte_end":290077,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::X::Y","value":"X::Y(Y)","parent":{"krate":0,"index":6840},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6852},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290078,"byte_end":290079,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::X::Z","value":"X::Z(Z)","parent":{"krate":0,"index":6840},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6840},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290074,"byte_end":290075,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::X","value":"pub enum X<X, Y, Z> { Peek, X(X), Y(Y), Z(Z), }","parent":null,"children":[{"krate":0,"index":6844},{"krate":0,"index":6846},{"krate":0,"index":6849},{"krate":0,"index":6852}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6878},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290076,"byte_end":290077,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::Y::Y","value":"Y::Y(Y)","parent":{"krate":0,"index":6873},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6881},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290078,"byte_end":290079,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::Y::Z","value":"Y::Z(Z)","parent":{"krate":0,"index":6873},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6873},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290076,"byte_end":290077,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::Y","value":"pub enum Y<Y, Z> { Peek, Y(Y), Z(Z), }","parent":null,"children":[{"krate":0,"index":6876},{"krate":0,"index":6878},{"krate":0,"index":6881}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6904},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290078,"byte_end":290079,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::Z::Z","value":"Z::Z(Z)","parent":{"krate":0,"index":6900},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6900},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":290078,"byte_end":290079,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::Z","value":"pub enum Z<Z> { Peek, Z(Z), }","parent":null,"children":[{"krate":0,"index":6902},{"krate":0,"index":6904}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7284},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":291394,"byte_end":291400,"line_start":354,"line_end":354,"column_start":12,"column_end":18},"name":"Choice","qualname":"::parser::choice::Choice","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2135},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":298028,"byte_end":298034,"line_start":552,"line_end":552,"column_start":8,"column_end":14},"name":"choice","qualname":"::parser::choice::choice","value":"pub fn choice<Input, P>(P) -> Choice<P> where Input: Stream,\nP: ChoiceParser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Takes a tuple, a slice or an array of parsers and tries to apply them each in order.\n Fails if all the parsers fails or if an applied parser consumes input before failing.","sig":null,"attributes":[{"value":"/ Takes a tuple, a slice or an array of parsers and tries to apply them each in order.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":296572,"byte_end":296660,"line_start":521,"line_end":521,"column_start":1,"column_end":89}},{"value":"/ Fails if all the parsers fails or if an applied parser consumes input before failing.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":296661,"byte_end":296750,"line_start":522,"line_end":522,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":296751,"byte_end":296754,"line_start":523,"line_end":523,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":296755,"byte_end":296762,"line_start":524,"line_end":524,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":296763,"byte_end":296790,"line_start":525,"line_end":525,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":296791,"byte_end":296812,"line_start":526,"line_end":526,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::{digit, string};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":296813,"byte_end":296862,"line_start":527,"line_end":527,"column_start":1,"column_end":50}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":296863,"byte_end":296880,"line_start":528,"line_end":528,"column_start":1,"column_end":18}},{"value":"/ // `choice` is overloaded on tuples so that different types of parsers can be used","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":296881,"byte_end":296967,"line_start":529,"line_end":529,"column_start":1,"column_end":87}},{"value":"/ // (each parser must still have the same input and output types)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":296968,"byte_end":297036,"line_start":530,"line_end":530,"column_start":1,"column_end":69}},{"value":"/ let mut parser = choice((","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":297037,"byte_end":297066,"line_start":531,"line_end":531,"column_start":1,"column_end":30}},{"value":"/     string(\"Apple\").map(|s| s.to_string()),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":297067,"byte_end":297114,"line_start":532,"line_end":532,"column_start":1,"column_end":48}},{"value":"/     many1(digit()),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":297115,"byte_end":297138,"line_start":533,"line_end":533,"column_start":1,"column_end":24}},{"value":"/     string(\"Orange\").map(|s| s.to_string()),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":297139,"byte_end":297187,"line_start":534,"line_end":534,"column_start":1,"column_end":49}},{"value":"/ ));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":297188,"byte_end":297195,"line_start":535,"line_end":535,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(parser.parse(\"1234\"), Ok((\"1234\".to_string(), \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":297196,"byte_end":297263,"line_start":536,"line_end":536,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser.parse(\"Orangexx\"), Ok((\"Orange\".to_string(), \"xx\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":297264,"byte_end":297339,"line_start":537,"line_end":537,"column_start":1,"column_end":76}},{"value":"/ assert!(parser.parse(\"Appl\").is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":297340,"byte_end":297383,"line_start":538,"line_end":538,"column_start":1,"column_end":44}},{"value":"/ assert!(parser.parse(\"Pear\").is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":297384,"byte_end":297427,"line_start":539,"line_end":539,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":297428,"byte_end":297431,"line_start":540,"line_end":540,"column_start":1,"column_end":4}},{"value":"/ // If arrays or slices are used then all parsers must have the same type","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":297432,"byte_end":297508,"line_start":541,"line_end":541,"column_start":1,"column_end":77}},{"value":"/ // (`string` in this case)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":297509,"byte_end":297539,"line_start":542,"line_end":542,"column_start":1,"column_end":31}},{"value":"/ let mut parser2 = choice([string(\"one\"), string(\"two\"), string(\"three\")]);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":297540,"byte_end":297618,"line_start":543,"line_end":543,"column_start":1,"column_end":79}},{"value":"/ // Fails as the parser for \"two\" consumes the first 't' before failing","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":297619,"byte_end":297693,"line_start":544,"line_end":544,"column_start":1,"column_end":75}},{"value":"/ assert!(parser2.parse(\"three\").is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":297694,"byte_end":297739,"line_start":545,"line_end":545,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":297740,"byte_end":297743,"line_start":546,"line_end":546,"column_start":1,"column_end":4}},{"value":"/ // Use 'attempt' to make failing parsers always act as if they have not committed any input","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":297744,"byte_end":297839,"line_start":547,"line_end":547,"column_start":1,"column_end":96}},{"value":"/ let mut parser3 = choice([attempt(string(\"one\")), attempt(string(\"two\")), attempt(string(\"three\"))]);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":297840,"byte_end":297945,"line_start":548,"line_end":548,"column_start":1,"column_end":106}},{"value":"/ assert_eq!(parser3.parse(\"three\"), Ok((\"three\", \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":297946,"byte_end":298004,"line_start":549,"line_end":549,"column_start":1,"column_end":59}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":298005,"byte_end":298012,"line_start":550,"line_end":550,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":298013,"byte_end":298020,"line_start":551,"line_end":551,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7295},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":298172,"byte_end":298174,"line_start":561,"line_end":561,"column_start":12,"column_end":14},"name":"Or","qualname":"::parser::choice::Or","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2148},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":300146,"byte_end":300148,"line_start":624,"line_end":624,"column_start":8,"column_end":10},"name":"or","qualname":"::parser::choice::or","value":"pub fn or<Input, P1, P2>(P1, P2) -> Or<P1, P2> where Input: Stream,\nP1: Parser<Input>, P2: Parser<Input, Output = P1::Output>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p1.or(p2)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p1.or(p2)`].","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":298970,"byte_end":299002,"line_start":593,"line_end":593,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":299003,"byte_end":299006,"line_start":594,"line_end":594,"column_start":1,"column_end":4}},{"value":"/ If you are looking to chain 3 or more parsers using `or` you may consider using the","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":299007,"byte_end":299094,"line_start":595,"line_end":595,"column_start":1,"column_end":88}},{"value":"/ [`choice!`] macro instead, which can be clearer and may result in a faster parser.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":299095,"byte_end":299181,"line_start":596,"line_end":596,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":299182,"byte_end":299185,"line_start":597,"line_end":597,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":299186,"byte_end":299193,"line_start":598,"line_end":598,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":299194,"byte_end":299221,"line_start":599,"line_end":599,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":299222,"byte_end":299243,"line_start":600,"line_end":600,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::choice::or;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":299244,"byte_end":299282,"line_start":601,"line_end":601,"column_start":1,"column_end":39}},{"value":"/ # use combine::parser::char::{digit, string};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":299283,"byte_end":299332,"line_start":602,"line_end":602,"column_start":1,"column_end":50}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":299333,"byte_end":299350,"line_start":603,"line_end":603,"column_start":1,"column_end":18}},{"value":"/ let mut parser = or(","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":299351,"byte_end":299375,"line_start":604,"line_end":604,"column_start":1,"column_end":25}},{"value":"/     string(\"let\"),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":299376,"byte_end":299398,"line_start":605,"line_end":605,"column_start":1,"column_end":23}},{"value":"/     or(digit().map(|_| \"digit\"), string(\"led\")),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":299399,"byte_end":299451,"line_start":606,"line_end":606,"column_start":1,"column_end":53}},{"value":"/ );","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":299452,"byte_end":299458,"line_start":607,"line_end":607,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(parser.parse(\"let\"), Ok((\"let\", \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":299459,"byte_end":299512,"line_start":608,"line_end":608,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser.parse(\"1\"), Ok((\"digit\", \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":299513,"byte_end":299566,"line_start":609,"line_end":609,"column_start":1,"column_end":54}},{"value":"/ assert!(parser.parse(\"led\").is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":299567,"byte_end":299609,"line_start":610,"line_end":610,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":299610,"byte_end":299613,"line_start":611,"line_end":611,"column_start":1,"column_end":4}},{"value":"/ let mut parser2 = or(string(\"two\"), string(\"three\"));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":299614,"byte_end":299671,"line_start":612,"line_end":612,"column_start":1,"column_end":58}},{"value":"/ // Fails as the parser for \"two\" consumes the first 't' before failing","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":299672,"byte_end":299746,"line_start":613,"line_end":613,"column_start":1,"column_end":75}},{"value":"/ assert!(parser2.parse(\"three\").is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":299747,"byte_end":299792,"line_start":614,"line_end":614,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":299793,"byte_end":299796,"line_start":615,"line_end":615,"column_start":1,"column_end":4}},{"value":"/ // Use 'attempt' to make failing parsers always act as if they have not committed any input","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":299797,"byte_end":299892,"line_start":616,"line_end":616,"column_start":1,"column_end":96}},{"value":"/ let mut parser3 = or(attempt(string(\"two\")), attempt(string(\"three\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":299893,"byte_end":299968,"line_start":617,"line_end":617,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser3.parse(\"three\"), Ok((\"three\", \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":299969,"byte_end":300027,"line_start":618,"line_end":618,"column_start":1,"column_end":59}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":300028,"byte_end":300035,"line_start":619,"line_end":619,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":300036,"byte_end":300043,"line_start":620,"line_end":620,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":300044,"byte_end":300047,"line_start":621,"line_end":621,"column_start":1,"column_end":4}},{"value":"/ [`choice!`]: ../../macro.choice.html","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":300048,"byte_end":300088,"line_start":622,"line_end":622,"column_start":1,"column_end":41}},{"value":"/ [`p1.or(p2)`]: ../trait.Parser.html#method.or","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":300089,"byte_end":300138,"line_start":623,"line_end":623,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":7309},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":300350,"byte_end":300358,"line_start":634,"line_end":634,"column_start":12,"column_end":20},"name":"Optional","qualname":"::parser::choice::Optional","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2159},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":301774,"byte_end":301782,"line_start":683,"line_end":683,"column_start":8,"column_end":16},"name":"optional","qualname":"::parser::choice::optional","value":"pub fn optional<Input, P>(P) -> Optional<P> where Input: Stream,\nP: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` and outputs `Some(value)` if it succeeds, `None` if it fails without\n consuming any input. Fails if `parser` fails after having committed some input.","sig":null,"attributes":[{"value":"/ Parses `parser` and outputs `Some(value)` if it succeeds, `None` if it fails without","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":301241,"byte_end":301329,"line_start":669,"line_end":669,"column_start":1,"column_end":89}},{"value":"/ consuming any input. Fails if `parser` fails after having committed some input.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":301330,"byte_end":301413,"line_start":670,"line_end":670,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":301414,"byte_end":301417,"line_start":671,"line_end":671,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":301418,"byte_end":301425,"line_start":672,"line_end":672,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":301426,"byte_end":301453,"line_start":673,"line_end":673,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":301454,"byte_end":301475,"line_start":674,"line_end":674,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::string;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":301476,"byte_end":301516,"line_start":675,"line_end":675,"column_start":1,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":301517,"byte_end":301534,"line_start":676,"line_end":676,"column_start":1,"column_end":18}},{"value":"/ let mut parser = optional(string(\"hello\"));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":301535,"byte_end":301582,"line_start":677,"line_end":677,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser.parse(\"hello\"), Ok((Some(\"hello\"), \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":301583,"byte_end":301646,"line_start":678,"line_end":678,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser.parse(\"world\"), Ok((None, \"world\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":301647,"byte_end":301706,"line_start":679,"line_end":679,"column_start":1,"column_end":60}},{"value":"/ assert!(parser.parse(\"heya\").is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":301707,"byte_end":301750,"line_start":680,"line_end":680,"column_start":1,"column_end":44}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":301751,"byte_end":301758,"line_start":681,"line_end":681,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":301759,"byte_end":301766,"line_start":682,"line_end":682,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":2166},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"combinator","qualname":"::parser::combinator","value":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","parent":null,"children":[{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2172},{"krate":0,"index":2175},{"krate":0,"index":2176},{"krate":0,"index":2179},{"krate":0,"index":2180},{"krate":0,"index":2183},{"krate":0,"index":2186},{"krate":0,"index":2189},{"krate":0,"index":2190},{"krate":0,"index":2193},{"krate":0,"index":2194},{"krate":0,"index":2196},{"krate":0,"index":2199},{"krate":0,"index":2202},{"krate":0,"index":2205},{"krate":0,"index":2206},{"krate":0,"index":2209},{"krate":0,"index":2212},{"krate":0,"index":2215},{"krate":0,"index":2218},{"krate":0,"index":2221},{"krate":0,"index":2224},{"krate":0,"index":2227},{"krate":0,"index":2228},{"krate":0,"index":2231},{"krate":0,"index":2234},{"krate":0,"index":2237},{"krate":0,"index":7322},{"krate":0,"index":7326},{"krate":0,"index":7328},{"krate":0,"index":2240},{"krate":0,"index":2250},{"krate":0,"index":7334},{"krate":0,"index":7338},{"krate":0,"index":7340},{"krate":0,"index":2253},{"krate":0,"index":2264},{"krate":0,"index":7348},{"krate":0,"index":7352},{"krate":0,"index":7354},{"krate":0,"index":2267},{"krate":0,"index":2274},{"krate":0,"index":7360},{"krate":0,"index":7366},{"krate":0,"index":7369},{"krate":0,"index":2277},{"krate":0,"index":2287},{"krate":0,"index":7378},{"krate":0,"index":7384},{"krate":0,"index":7387},{"krate":0,"index":2292},{"krate":0,"index":2302},{"krate":0,"index":7396},{"krate":0,"index":7402},{"krate":0,"index":7405},{"krate":0,"index":2307},{"krate":0,"index":2317},{"krate":0,"index":7414},{"krate":0,"index":7420},{"krate":0,"index":7423},{"krate":0,"index":2322},{"krate":0,"index":2332},{"krate":0,"index":7432},{"krate":0,"index":7438},{"krate":0,"index":7441},{"krate":0,"index":2338},{"krate":0,"index":2343},{"krate":0,"index":2352},{"krate":0,"index":2356},{"krate":0,"index":2365},{"krate":0,"index":2375},{"krate":0,"index":2379},{"krate":0,"index":2387},{"krate":0,"index":7454},{"krate":0,"index":7458},{"krate":0,"index":7460},{"krate":0,"index":2390},{"krate":0,"index":2400},{"krate":0,"index":7468},{"krate":0,"index":7471},{"krate":0,"index":2403},{"krate":0,"index":2407},{"krate":0,"index":2415},{"krate":0,"index":7478},{"krate":0,"index":7481},{"krate":0,"index":2418},{"krate":0,"index":2422},{"krate":0,"index":2430},{"krate":0,"index":7488},{"krate":0,"index":7491},{"krate":0,"index":2433},{"krate":0,"index":2437},{"krate":0,"index":2445},{"krate":0,"index":7498},{"krate":0,"index":7502},{"krate":0,"index":7504},{"krate":0,"index":2448},{"krate":0,"index":2463},{"krate":0,"index":7509},{"krate":0,"index":7515},{"krate":0,"index":7518},{"krate":0,"index":2467},{"krate":0,"index":2472},{"krate":0,"index":2483},{"krate":0,"index":2487},{"krate":0,"index":2489},{"krate":0,"index":2492},{"krate":0,"index":2494},{"krate":0,"index":2495},{"krate":0,"index":2497},{"krate":0,"index":2499},{"krate":0,"index":2502},{"krate":0,"index":2503},{"krate":0,"index":2505},{"krate":0,"index":2506},{"krate":0,"index":2508},{"krate":0,"index":2510},{"krate":0,"index":2513},{"krate":0,"index":2514},{"krate":0,"index":7524},{"krate":0,"index":7530},{"krate":0,"index":7546},{"krate":0,"index":7555},{"krate":0,"index":7563},{"krate":0,"index":7568},{"krate":0,"index":2516},{"krate":0,"index":2534},{"krate":0,"index":2538},{"krate":0,"index":2544},{"krate":0,"index":2551},{"krate":0,"index":2562},{"krate":0,"index":2568},{"krate":0,"index":2575},{"krate":0,"index":7578},{"krate":0,"index":7582},{"krate":0,"index":2581},{"krate":0,"index":2590}],"decl_id":null,"docs":" Various combinators which do not fit anywhere else.\n","sig":null,"attributes":[{"value":"/ Various combinators which do not fit anywhere else.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":307370,"byte_end":307425,"line_start":1,"line_end":1,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":7322},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":307899,"byte_end":307912,"line_start":22,"line_end":22,"column_start":12,"column_end":25},"name":"NotFollowedBy","qualname":"::parser::combinator::NotFollowedBy","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2250},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":309347,"byte_end":309362,"line_start":76,"line_end":76,"column_start":8,"column_end":23},"name":"not_followed_by","qualname":"::parser::combinator::not_followed_by","value":"pub fn not_followed_by<Input, P>(P) -> NotFollowedBy<P> where Input: Stream,\nP: Parser<Input>,\nP::Output: Into<Info<<Input as StreamOnce>::Token,\n                     <Input as StreamOnce>::Range, &'static str>>","parent":null,"children":[],"decl_id":null,"docs":" Succeeds only if `parser` fails.\n Never consumes any input.","sig":null,"attributes":[{"value":"/ Succeeds only if `parser` fails.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":308968,"byte_end":309004,"line_start":60,"line_end":60,"column_start":1,"column_end":37}},{"value":"/ Never consumes any input.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":309005,"byte_end":309034,"line_start":61,"line_end":61,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":309035,"byte_end":309038,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":309039,"byte_end":309046,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":309047,"byte_end":309074,"line_start":64,"line_end":64,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":309075,"byte_end":309096,"line_start":65,"line_end":65,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::{alpha_num, string};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":309097,"byte_end":309150,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":309151,"byte_end":309168,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"/ let result = string(\"let\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":309169,"byte_end":309199,"line_start":68,"line_end":68,"column_start":1,"column_end":31}},{"value":"/     .skip(not_followed_by(alpha_num()))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":309200,"byte_end":309243,"line_start":69,"line_end":69,"column_start":1,"column_end":44}},{"value":"/     .parse(\"letx\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":309244,"byte_end":309266,"line_start":70,"line_end":70,"column_start":1,"column_end":23}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":309267,"byte_end":309289,"line_start":71,"line_end":71,"column_start":1,"column_end":23}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":309290,"byte_end":309319,"line_start":72,"line_end":72,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":309320,"byte_end":309323,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":309324,"byte_end":309331,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":309332,"byte_end":309339,"line_start":75,"line_end":75,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7334},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":309755,"byte_end":309758,"line_start":90,"line_end":90,"column_start":12,"column_end":15},"name":"Try","qualname":"::parser::combinator::Try","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2264},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":311609,"byte_end":311616,"line_start":159,"line_end":159,"column_start":8,"column_end":15},"name":"attempt","qualname":"::parser::combinator::attempt","value":"pub fn attempt<Input, P>(P) -> Try<P> where Input: Stream, P: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" `attempt(p)` behaves as `p` except it always acts as `p` peeked instead of committed on its\n parse.","sig":null,"attributes":[{"value":"/ `attempt(p)` behaves as `p` except it always acts as `p` peeked instead of committed on its","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":311134,"byte_end":311229,"line_start":143,"line_end":143,"column_start":1,"column_end":96}},{"value":"/ parse.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":311230,"byte_end":311240,"line_start":144,"line_end":144,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":311241,"byte_end":311244,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":311245,"byte_end":311252,"line_start":146,"line_end":146,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":311253,"byte_end":311280,"line_start":147,"line_end":147,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":311281,"byte_end":311302,"line_start":148,"line_end":148,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::string;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":311303,"byte_end":311343,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":311344,"byte_end":311361,"line_start":150,"line_end":150,"column_start":1,"column_end":18}},{"value":"/ let mut p = attempt(string(\"let\"))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":311362,"byte_end":311400,"line_start":151,"line_end":151,"column_start":1,"column_end":39}},{"value":"/     .or(string(\"lex\"));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":311401,"byte_end":311428,"line_start":152,"line_end":152,"column_start":1,"column_end":28}},{"value":"/ let result = p.parse(\"lex\").map(|x| x.0);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":311429,"byte_end":311474,"line_start":153,"line_end":153,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(result, Ok(\"lex\"));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":311475,"byte_end":311509,"line_start":154,"line_end":154,"column_start":1,"column_end":35}},{"value":"/ let result = p.parse(\"aet\").map(|x| x.0);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":311510,"byte_end":311555,"line_start":155,"line_end":155,"column_start":1,"column_end":46}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":311556,"byte_end":311585,"line_start":156,"line_end":156,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":311586,"byte_end":311593,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":311594,"byte_end":311601,"line_start":158,"line_end":158,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7348},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":311740,"byte_end":311749,"line_start":168,"line_end":168,"column_start":12,"column_end":21},"name":"LookAhead","qualname":"::parser::combinator::LookAhead","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2274},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":312736,"byte_end":312746,"line_start":206,"line_end":206,"column_start":8,"column_end":18},"name":"look_ahead","qualname":"::parser::combinator::look_ahead","value":"pub fn look_ahead<Input, P>(P) -> LookAhead<P> where Input: Stream,\nP: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" `look_ahead(p)` acts as `p` but doesn't consume input on success.","sig":null,"attributes":[{"value":"/ `look_ahead(p)` acts as `p` but doesn't consume input on success.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":312319,"byte_end":312388,"line_start":190,"line_end":190,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":312389,"byte_end":312392,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":312393,"byte_end":312400,"line_start":192,"line_end":192,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":312401,"byte_end":312428,"line_start":193,"line_end":193,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":312429,"byte_end":312450,"line_start":194,"line_end":194,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::string;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":312451,"byte_end":312491,"line_start":195,"line_end":195,"column_start":1,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":312492,"byte_end":312509,"line_start":196,"line_end":196,"column_start":1,"column_end":18}},{"value":"/ let mut p = look_ahead(string(\"test\"));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":312510,"byte_end":312553,"line_start":197,"line_end":197,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":312554,"byte_end":312557,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ let result = p.parse(\"test str\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":312558,"byte_end":312595,"line_start":199,"line_end":199,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(result, Ok((\"test\", \"test str\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":312596,"byte_end":312645,"line_start":200,"line_end":200,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":312646,"byte_end":312649,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ let result = p.parse(\"aet\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":312650,"byte_end":312682,"line_start":202,"line_end":202,"column_start":1,"column_end":33}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":312683,"byte_end":312712,"line_start":203,"line_end":203,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":312713,"byte_end":312720,"line_start":204,"line_end":204,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":312721,"byte_end":312728,"line_start":205,"line_end":205,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7360},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":312882,"byte_end":312885,"line_start":215,"line_end":215,"column_start":12,"column_end":15},"name":"Map","qualname":"::parser::combinator::Map","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2287},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":313803,"byte_end":313806,"line_start":250,"line_end":250,"column_start":8,"column_end":11},"name":"map","qualname":"::parser::combinator::map","value":"pub fn map<Input, P, F, B>(P, F) -> Map<P, F> where Input: Stream,\nP: Parser<Input>, F: FnMut(P::Output) -> B","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.map(f)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.map(f)`].","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":313710,"byte_end":313741,"line_start":247,"line_end":247,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":313742,"byte_end":313745,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ [`p.map(f)`]: ../trait.Parser.html#method.map","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":313746,"byte_end":313795,"line_start":249,"line_end":249,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":7378},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":313978,"byte_end":313986,"line_start":260,"line_end":260,"column_start":12,"column_end":20},"name":"MapInput","qualname":"::parser::combinator::MapInput","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2302},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":314953,"byte_end":314962,"line_start":295,"line_end":295,"column_start":8,"column_end":17},"name":"map_input","qualname":"::parser::combinator::map_input","value":"pub fn map_input<Input, P, F, B>(P, F) -> MapInput<P, F> where Input: Stream,\nP: Parser<Input>, F: FnMut(P::Output, &mut Input) -> B","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.map_input(f)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.map_input(f)`].","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":314842,"byte_end":314879,"line_start":292,"line_end":292,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":314880,"byte_end":314883,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ [`p.map_input(f)`]: ../trait.Parser.html#method.map_input","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":314884,"byte_end":314945,"line_start":294,"line_end":294,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":7396},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":315156,"byte_end":315163,"line_start":305,"line_end":305,"column_start":12,"column_end":19},"name":"FlatMap","qualname":"::parser::combinator::FlatMap","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2317},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":316315,"byte_end":316323,"line_start":346,"line_end":346,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::parser::combinator::flat_map","value":"pub fn flat_map<Input, P, F, B>(P, F) -> FlatMap<P, F> where Input: Stream,\nP: Parser<Input>, F: FnMut(P::Output) ->\nResult<B, <Input as StreamOnce>::Error>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.flat_map(f)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.flat_map(f)`].","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":316207,"byte_end":316243,"line_start":343,"line_end":343,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":316244,"byte_end":316247,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ [`p.flat_map(f)`]: ../trait.Parser.html#method.flat_map","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":316248,"byte_end":316307,"line_start":345,"line_end":345,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":7414},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":316541,"byte_end":316548,"line_start":356,"line_end":356,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::parser::combinator::AndThen","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2332},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":318622,"byte_end":318630,"line_start":417,"line_end":417,"column_start":8,"column_end":16},"name":"and_then","qualname":"::parser::combinator::and_then","value":"pub fn and_then<Input, P, F, O, E>(P, F) -> AndThen<P, F> where\nP: Parser<Input>, F: FnMut(P::Output) -> Result<O, E>, Input: Stream,\nE: Into<<Input::Error as\n        ParseError<Input::Token, Input::Range, Input::Position>>::StreamError>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.and_then(f)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.and_then(f)`].","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":318514,"byte_end":318550,"line_start":414,"line_end":414,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":318551,"byte_end":318554,"line_start":415,"line_end":415,"column_start":1,"column_end":4}},{"value":"/ [`p.and_then(f)`]: ../trait.Parser.html#method.and_then","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":318555,"byte_end":318614,"line_start":416,"line_end":416,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":7432},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":318925,"byte_end":318934,"line_start":428,"line_end":428,"column_start":12,"column_end":21},"name":"Recognize","qualname":"::parser::combinator::Recognize","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2352},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":322870,"byte_end":322879,"line_start":543,"line_end":543,"column_start":8,"column_end":17},"name":"recognize","qualname":"::parser::combinator::recognize","value":"pub fn recognize<F, Input, P>(P) -> Recognize<F, P> where Input: Stream,\nP: Parser<Input>, F: Default + Extend<<Input as StreamOnce>::Token>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a parser which returns the tokens parsed by `parser` accumulated in\n `F: Extend<Input::Token>` instead of `P::Output`.","sig":null,"attributes":[{"value":"/ Constructs a parser which returns the tokens parsed by `parser` accumulated in","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":322348,"byte_end":322430,"line_start":532,"line_end":532,"column_start":1,"column_end":83}},{"value":"/ `F: Extend<Input::Token>` instead of `P::Output`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":322431,"byte_end":322484,"line_start":533,"line_end":533,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":322485,"byte_end":322488,"line_start":534,"line_end":534,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":322489,"byte_end":322496,"line_start":535,"line_end":535,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":322497,"byte_end":322521,"line_start":536,"line_end":536,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::{repeat::skip_many1, token::token, combinator::recognize, char::digit};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":322522,"byte_end":322618,"line_start":537,"line_end":537,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":322619,"byte_end":322622,"line_start":538,"line_end":538,"column_start":1,"column_end":4}},{"value":"/ let mut parser = recognize((skip_many1(digit()), token('.'), skip_many1(digit())));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":322623,"byte_end":322710,"line_start":539,"line_end":539,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(parser.parse(\"123.45\"), Ok((\"123.45\".to_string(), \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":322711,"byte_end":322782,"line_start":540,"line_end":540,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(parser.parse(\"123.45\"), Ok((\"123.45\".to_string(), \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":322783,"byte_end":322854,"line_start":541,"line_end":541,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":322855,"byte_end":322862,"line_start":542,"line_end":542,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2359},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":323093,"byte_end":323097,"line_start":553,"line_end":553,"column_start":5,"column_end":9},"name":"Left","qualname":"::parser::combinator::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":2356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2362},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":323106,"byte_end":323111,"line_start":554,"line_end":554,"column_start":5,"column_end":10},"name":"Right","qualname":"::parser::combinator::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":2356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2356},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":323074,"byte_end":323080,"line_start":552,"line_end":552,"column_start":10,"column_end":16},"name":"Either","qualname":"::parser::combinator::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":2359},{"krate":0,"index":2362}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2375},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":325394,"byte_end":325403,"line_start":633,"line_end":633,"column_start":12,"column_end":21},"name":"NoPartial","qualname":"::parser::combinator::NoPartial","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2387},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":326177,"byte_end":326187,"line_start":668,"line_end":668,"column_start":8,"column_end":18},"name":"no_partial","qualname":"::parser::combinator::no_partial","value":"pub fn no_partial<Input, P>(P) -> NoPartial<P> where Input: Stream,\nP: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7454},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":326323,"byte_end":326329,"line_start":677,"line_end":677,"column_start":12,"column_end":18},"name":"Ignore","qualname":"::parser::combinator::Ignore","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2400},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":327136,"byte_end":327142,"line_start":712,"line_end":712,"column_start":8,"column_end":14},"name":"ignore","qualname":"::parser::combinator::ignore","value":"pub fn ignore<Input, P>(P) -> Ignore<P> where Input: Stream, P: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7468},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":327341,"byte_end":327356,"line_start":723,"line_end":723,"column_start":12,"column_end":27},"name":"AnyPartialState","qualname":"::parser::combinator::AnyPartialState","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":327238,"byte_end":327263,"line_start":720,"line_end":720,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":2403},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":327465,"byte_end":327486,"line_start":727,"line_end":727,"column_start":12,"column_end":33},"name":"AnyPartialStateParser","qualname":"::parser::combinator::AnyPartialStateParser","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":327381,"byte_end":327406,"line_start":725,"line_end":725,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":2415},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":329754,"byte_end":329771,"line_start":814,"line_end":814,"column_start":8,"column_end":25},"name":"any_partial_state","qualname":"::parser::combinator::any_partial_state","value":"pub fn any_partial_state<Input, P>(P) -> AnyPartialStateParser<P> where\nInput: Stream, P: Parser<Input>, P::PartialState: 'static","parent":null,"children":[],"decl_id":null,"docs":" Returns a parser where `P::PartialState` is boxed. Useful as a way to avoid writing the type\n since it can get very large after combining a few parsers.","sig":null,"attributes":[{"value":"/ Returns a parser where `P::PartialState` is boxed. Useful as a way to avoid writing the type","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":328943,"byte_end":329039,"line_start":784,"line_end":784,"column_start":1,"column_end":97}},{"value":"/ since it can get very large after combining a few parsers.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":329040,"byte_end":329102,"line_start":785,"line_end":785,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":329103,"byte_end":329106,"line_start":786,"line_end":786,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":329107,"byte_end":329114,"line_start":787,"line_end":787,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":329115,"byte_end":329133,"line_start":788,"line_end":788,"column_start":1,"column_end":19}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":329134,"byte_end":329161,"line_start":789,"line_end":789,"column_start":1,"column_end":28}},{"value":"/ # use combine::parser::combinator::{AnyPartialState, any_partial_state};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":329162,"byte_end":329238,"line_start":790,"line_end":790,"column_start":1,"column_end":77}},{"value":"/ # use combine::parser::char::letter;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":329239,"byte_end":329279,"line_start":791,"line_end":791,"column_start":1,"column_end":41}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":329280,"byte_end":329301,"line_start":792,"line_end":792,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":329302,"byte_end":329305,"line_start":793,"line_end":793,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":329306,"byte_end":329323,"line_start":794,"line_end":794,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":329324,"byte_end":329327,"line_start":795,"line_end":795,"column_start":1,"column_end":4}},{"value":"/ parser! {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":329328,"byte_end":329341,"line_start":796,"line_end":796,"column_start":1,"column_end":14}},{"value":"/     type PartialState = AnyPartialState;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":329342,"byte_end":329386,"line_start":797,"line_end":797,"column_start":1,"column_end":45}},{"value":"/     fn example[Input]()(Input) -> (char, char)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":329387,"byte_end":329437,"line_start":798,"line_end":798,"column_start":1,"column_end":51}},{"value":"/     where [ Input: Stream<Token = char> ]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":329438,"byte_end":329483,"line_start":799,"line_end":799,"column_start":1,"column_end":46}},{"value":"/     {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":329484,"byte_end":329493,"line_start":800,"line_end":800,"column_start":1,"column_end":10}},{"value":"/         any_partial_state((letter(), letter()))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":329494,"byte_end":329545,"line_start":801,"line_end":801,"column_start":1,"column_end":52}},{"value":"/     }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":329546,"byte_end":329555,"line_start":802,"line_end":802,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":329556,"byte_end":329561,"line_start":803,"line_end":803,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":329562,"byte_end":329565,"line_start":804,"line_end":804,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":329566,"byte_end":329581,"line_start":805,"line_end":805,"column_start":1,"column_end":16}},{"value":"/     example().easy_parse(\"ab\"),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":329582,"byte_end":329617,"line_start":806,"line_end":806,"column_start":1,"column_end":36}},{"value":"/     Ok((('a', 'b'), \"\"))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":329618,"byte_end":329646,"line_start":807,"line_end":807,"column_start":1,"column_end":29}},{"value":"/ );","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":329647,"byte_end":329653,"line_start":808,"line_end":808,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":329654,"byte_end":329657,"line_start":809,"line_end":809,"column_start":1,"column_end":4}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":329658,"byte_end":329665,"line_start":810,"line_end":810,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":329666,"byte_end":329673,"line_start":811,"line_end":811,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":329674,"byte_end":329699,"line_start":812,"line_end":812,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":7478},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":330030,"byte_end":330049,"line_start":826,"line_end":826,"column_start":12,"column_end":31},"name":"AnySendPartialState","qualname":"::parser::combinator::AnySendPartialState","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":329927,"byte_end":329952,"line_start":823,"line_end":823,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":2418},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":330165,"byte_end":330190,"line_start":830,"line_end":830,"column_start":12,"column_end":37},"name":"AnySendPartialStateParser","qualname":"::parser::combinator::AnySendPartialStateParser","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":330081,"byte_end":330106,"line_start":828,"line_end":828,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":2430},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":332491,"byte_end":332513,"line_start":917,"line_end":917,"column_start":8,"column_end":30},"name":"any_send_partial_state","qualname":"::parser::combinator::any_send_partial_state","value":"pub fn any_send_partial_state<Input, P>(P) -> AnySendPartialStateParser<P>\nwhere Input: Stream, P: Parser<Input>, P::PartialState: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Returns a parser where `P::PartialState` is boxed. Useful as a way to avoid writing the type\n since it can get very large after combining a few parsers.","sig":null,"attributes":[{"value":"/ Returns a parser where `P::PartialState` is boxed. Useful as a way to avoid writing the type","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":331662,"byte_end":331758,"line_start":887,"line_end":887,"column_start":1,"column_end":97}},{"value":"/ since it can get very large after combining a few parsers.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":331759,"byte_end":331821,"line_start":888,"line_end":888,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":331822,"byte_end":331825,"line_start":889,"line_end":889,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":331826,"byte_end":331833,"line_start":890,"line_end":890,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":331834,"byte_end":331852,"line_start":891,"line_end":891,"column_start":1,"column_end":19}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":331853,"byte_end":331880,"line_start":892,"line_end":892,"column_start":1,"column_end":28}},{"value":"/ # use combine::parser::combinator::{AnySendPartialState, any_send_partial_state};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":331881,"byte_end":331966,"line_start":893,"line_end":893,"column_start":1,"column_end":86}},{"value":"/ # use combine::parser::char::letter;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":331967,"byte_end":332007,"line_start":894,"line_end":894,"column_start":1,"column_end":41}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":332008,"byte_end":332029,"line_start":895,"line_end":895,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":332030,"byte_end":332033,"line_start":896,"line_end":896,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":332034,"byte_end":332051,"line_start":897,"line_end":897,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":332052,"byte_end":332055,"line_start":898,"line_end":898,"column_start":1,"column_end":4}},{"value":"/ parser! {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":332056,"byte_end":332069,"line_start":899,"line_end":899,"column_start":1,"column_end":14}},{"value":"/     type PartialState = AnySendPartialState;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":332070,"byte_end":332118,"line_start":900,"line_end":900,"column_start":1,"column_end":49}},{"value":"/     fn example[Input]()(Input) -> (char, char)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":332119,"byte_end":332169,"line_start":901,"line_end":901,"column_start":1,"column_end":51}},{"value":"/     where [ Input: Stream<Token = char> ]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":332170,"byte_end":332215,"line_start":902,"line_end":902,"column_start":1,"column_end":46}},{"value":"/     {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":332216,"byte_end":332225,"line_start":903,"line_end":903,"column_start":1,"column_end":10}},{"value":"/         any_send_partial_state((letter(), letter()))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":332226,"byte_end":332282,"line_start":904,"line_end":904,"column_start":1,"column_end":57}},{"value":"/     }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":332283,"byte_end":332292,"line_start":905,"line_end":905,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":332293,"byte_end":332298,"line_start":906,"line_end":906,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":332299,"byte_end":332302,"line_start":907,"line_end":907,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":332303,"byte_end":332318,"line_start":908,"line_end":908,"column_start":1,"column_end":16}},{"value":"/     example().easy_parse(\"ab\"),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":332319,"byte_end":332354,"line_start":909,"line_end":909,"column_start":1,"column_end":36}},{"value":"/     Ok((('a', 'b'), \"\"))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":332355,"byte_end":332383,"line_start":910,"line_end":910,"column_start":1,"column_end":29}},{"value":"/ );","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":332384,"byte_end":332390,"line_start":911,"line_end":911,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":332391,"byte_end":332394,"line_start":912,"line_end":912,"column_start":1,"column_end":4}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":332395,"byte_end":332402,"line_start":913,"line_end":913,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":332403,"byte_end":332410,"line_start":914,"line_end":914,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":332411,"byte_end":332436,"line_start":915,"line_end":915,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":7488},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":332787,"byte_end":332810,"line_start":929,"line_end":929,"column_start":12,"column_end":35},"name":"AnySendSyncPartialState","qualname":"::parser::combinator::AnySendSyncPartialState","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":332684,"byte_end":332709,"line_start":926,"line_end":926,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":2433},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":332933,"byte_end":332962,"line_start":933,"line_end":933,"column_start":12,"column_end":41},"name":"AnySendSyncPartialStateParser","qualname":"::parser::combinator::AnySendSyncPartialStateParser","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":332849,"byte_end":332874,"line_start":931,"line_end":931,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":2445},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":335349,"byte_end":335376,"line_start":1019,"line_end":1019,"column_start":8,"column_end":35},"name":"any_send_sync_partial_state","qualname":"::parser::combinator::any_send_sync_partial_state","value":"pub fn any_send_sync_partial_state<Input, P>(P)\n-> AnySendSyncPartialStateParser<P> where Input: Stream, P: Parser<Input>,\nP::PartialState: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Returns a parser where `P::PartialState` is boxed. Useful as a way to avoid writing the type\n since it can get very large after combining a few parsers.","sig":null,"attributes":[{"value":"/ Returns a parser where `P::PartialState` is boxed. Useful as a way to avoid writing the type","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":334449,"byte_end":334545,"line_start":990,"line_end":990,"column_start":1,"column_end":97}},{"value":"/ since it can get very large after combining a few parsers.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":334546,"byte_end":334608,"line_start":991,"line_end":991,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":334609,"byte_end":334612,"line_start":992,"line_end":992,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":334613,"byte_end":334620,"line_start":993,"line_end":993,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":334621,"byte_end":334639,"line_start":994,"line_end":994,"column_start":1,"column_end":19}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":334640,"byte_end":334667,"line_start":995,"line_end":995,"column_start":1,"column_end":28}},{"value":"/ # use combine::parser::combinator::{AnySendSyncPartialState, any_send_sync_partial_state};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":334668,"byte_end":334762,"line_start":996,"line_end":996,"column_start":1,"column_end":95}},{"value":"/ # use combine::parser::char::letter;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":334763,"byte_end":334803,"line_start":997,"line_end":997,"column_start":1,"column_end":41}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":334804,"byte_end":334825,"line_start":998,"line_end":998,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":334826,"byte_end":334829,"line_start":999,"line_end":999,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":334830,"byte_end":334847,"line_start":1000,"line_end":1000,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":334848,"byte_end":334851,"line_start":1001,"line_end":1001,"column_start":1,"column_end":4}},{"value":"/ fn example<Input>() -> impl Parser<Input, Output = (char, char), PartialState = AnySendSyncPartialState>","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":334852,"byte_end":334960,"line_start":1002,"line_end":1002,"column_start":1,"column_end":109}},{"value":"/ where","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":334961,"byte_end":334970,"line_start":1003,"line_end":1003,"column_start":1,"column_end":10}},{"value":"/     Input: Stream<Token = char>,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":334971,"byte_end":335007,"line_start":1004,"line_end":1004,"column_start":1,"column_end":37}},{"value":"/     Input::Error: ParseError<Input::Token, Input::Range, Input::Position>,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":335008,"byte_end":335086,"line_start":1005,"line_end":1005,"column_start":1,"column_end":79}},{"value":"/ {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":335087,"byte_end":335092,"line_start":1006,"line_end":1006,"column_start":1,"column_end":6}},{"value":"/     any_send_sync_partial_state((letter(), letter()))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":335093,"byte_end":335150,"line_start":1007,"line_end":1007,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":335151,"byte_end":335156,"line_start":1008,"line_end":1008,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":335157,"byte_end":335160,"line_start":1009,"line_end":1009,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":335161,"byte_end":335176,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}},{"value":"/     example().easy_parse(\"ab\"),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":335177,"byte_end":335212,"line_start":1011,"line_end":1011,"column_start":1,"column_end":36}},{"value":"/     Ok((('a', 'b'), \"\"))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":335213,"byte_end":335241,"line_start":1012,"line_end":1012,"column_start":1,"column_end":29}},{"value":"/ );","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":335242,"byte_end":335248,"line_start":1013,"line_end":1013,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":335249,"byte_end":335252,"line_start":1014,"line_end":1014,"column_start":1,"column_end":4}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":335253,"byte_end":335260,"line_start":1015,"line_end":1015,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":335261,"byte_end":335268,"line_start":1016,"line_end":1016,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":335269,"byte_end":335294,"line_start":1017,"line_end":1017,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":7498},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":335596,"byte_end":335600,"line_start":1029,"line_end":1029,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::parser::combinator::Lazy","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2463},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":337435,"byte_end":337439,"line_start":1090,"line_end":1090,"column_start":8,"column_end":12},"name":"lazy","qualname":"::parser::combinator::lazy","value":"pub fn lazy<Input, P, R>(P) -> Lazy<P> where Input: Stream, P: FnMut() -> R,\nR: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Constructs the parser lazily on each `parse_*` call. Can be used to effectively reduce the\n size of deeply nested parsers as only the function producing the parser is stored.","sig":null,"attributes":[{"value":"/ Constructs the parser lazily on each `parse_*` call. Can be used to effectively reduce the","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":336997,"byte_end":337091,"line_start":1082,"line_end":1082,"column_start":1,"column_end":95}},{"value":"/ size of deeply nested parsers as only the function producing the parser is stored.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":337092,"byte_end":337178,"line_start":1083,"line_end":1083,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":337179,"byte_end":337182,"line_start":1084,"line_end":1084,"column_start":1,"column_end":4}},{"value":"/ NOTE: Expects that the parser returned is always the same one, if that is not the case the","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":337183,"byte_end":337277,"line_start":1085,"line_end":1085,"column_start":1,"column_end":95}},{"value":"/ reported error may be wrong. If different parsers may be returned, use the [`factory`][] parser","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":337278,"byte_end":337377,"line_start":1086,"line_end":1086,"column_start":1,"column_end":100}},{"value":"/ instead.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":337378,"byte_end":337390,"line_start":1087,"line_end":1087,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":337391,"byte_end":337394,"line_start":1088,"line_end":1088,"column_start":1,"column_end":4}},{"value":"/ [`factory`]: fn.factory.html","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":337395,"byte_end":337427,"line_start":1089,"line_end":1089,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":7509},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":337589,"byte_end":337596,"line_start":1100,"line_end":1100,"column_start":12,"column_end":19},"name":"Factory","qualname":"::parser::combinator::Factory","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2483},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":339795,"byte_end":339802,"line_start":1172,"line_end":1172,"column_start":8,"column_end":15},"name":"factory","qualname":"::parser::combinator::factory","value":"pub fn factory<Input, P, R>(P) -> Factory<P, R> where Input: Stream,\nP: FnMut(&mut Input) -> R, R: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Constructs the parser lazily on each `parse_*` call. This is similar to [`lazy`][] but it\n takes `Input` as an argument and allows different parsers to be returned on each call to\n `p` while still reporting the correct errors.","sig":null,"attributes":[{"value":"/ Constructs the parser lazily on each `parse_*` call. This is similar to [`lazy`][] but it","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":339059,"byte_end":339152,"line_start":1156,"line_end":1156,"column_start":1,"column_end":94}},{"value":"/ takes `Input` as an argument and allows different parsers to be returned on each call to","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":339153,"byte_end":339245,"line_start":1157,"line_end":1157,"column_start":1,"column_end":93}},{"value":"/ `p` while still reporting the correct errors.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":339246,"byte_end":339295,"line_start":1158,"line_end":1158,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":339296,"byte_end":339299,"line_start":1159,"line_end":1159,"column_start":1,"column_end":4}},{"value":"/ [`lazy`]: fn.lazy.html","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":339300,"byte_end":339326,"line_start":1160,"line_end":1160,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":339327,"byte_end":339330,"line_start":1161,"line_end":1161,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":339331,"byte_end":339338,"line_start":1162,"line_end":1162,"column_start":1,"column_end":8}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":339339,"byte_end":339360,"line_start":1163,"line_end":1163,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::{digit, letter};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":339361,"byte_end":339410,"line_start":1164,"line_end":1164,"column_start":1,"column_end":50}},{"value":"/ # use combine::parser::combinator::{FnOpaque, opaque, factory};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":339411,"byte_end":339478,"line_start":1165,"line_end":1165,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":339479,"byte_end":339482,"line_start":1166,"line_end":1166,"column_start":1,"column_end":4}},{"value":"/ let mut parsers: Vec<FnOpaque<_, _>> = vec![opaque(|f| f(&mut digit())), opaque(|f| f(&mut letter()))];","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":339483,"byte_end":339590,"line_start":1167,"line_end":1167,"column_start":1,"column_end":108}},{"value":"/ let mut iter = parsers.into_iter().cycle();","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":339591,"byte_end":339638,"line_start":1168,"line_end":1168,"column_start":1,"column_end":48}},{"value":"/ let mut parser = many(factory(move |_| iter.next().unwrap()));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":339639,"byte_end":339705,"line_start":1169,"line_end":1169,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser.parse(\"1a2b3cd\"), Ok((\"1a2b3c\".to_string(), \"d\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":339706,"byte_end":339779,"line_start":1170,"line_end":1170,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":339780,"byte_end":339787,"line_start":1171,"line_end":1171,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":2488},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":339972,"byte_end":339978,"line_start":1182,"line_end":1182,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::parser::combinator::internal::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2492},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":340024,"byte_end":340031,"line_start":1187,"line_end":1187,"column_start":11,"column_end":18},"name":"StrLike","qualname":"::parser::combinator::StrLike","value":"StrLike: Sealed","parent":null,"children":[{"krate":0,"index":2493}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2493},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":340049,"byte_end":340058,"line_start":1188,"line_end":1188,"column_start":8,"column_end":17},"name":"from_utf8","qualname":"::parser::combinator::StrLike::from_utf8","value":"pub fn from_utf8(&Self) -> Option<&str>","parent":{"krate":0,"index":2492},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7524},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":340993,"byte_end":341000,"line_start":1238,"line_end":1238,"column_start":12,"column_end":19},"name":"FromStr","qualname":"::parser::combinator::FromStr","value":"FromStr { parser }","parent":null,"children":[{"krate":0,"index":7528},{"krate":0,"index":7529}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7528},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":342300,"byte_end":342306,"line_start":1274,"line_end":1274,"column_start":30,"column_end":36},"name":"parser","qualname":"::parser::combinator::FromStr::parser","value":"P","parent":{"krate":0,"index":7524},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":7546},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":342278,"byte_end":342286,"line_start":1274,"line_end":1274,"column_start":8,"column_end":16},"name":"from_str","qualname":"::parser::combinator::from_str","value":"pub fn from_str<Input, O, P>(P) -> FromStr<Input, O, P> where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, P: Parser<Input>, P::Output: StrLike,\nO: str::FromStr, O::Err: fmt::Display","parent":null,"children":[],"decl_id":null,"docs":" Takes a parser that outputs a string like value (`&str`, `String`, `&[u8]` or `Vec<u8>`) and parses it\n using `std::str::FromStr`. Errors if the output of `parser` is not UTF-8 or if\n `FromStr::from_str` returns an error.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":19233,"byte_end":19242,"line_start":509,"line_end":509,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":7555},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":342694,"byte_end":342700,"line_start":1291,"line_end":1291,"column_start":12,"column_end":18},"name":"Opaque","qualname":"::parser::combinator::Opaque","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2534},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":344458,"byte_end":344466,"line_start":1346,"line_end":1346,"column_start":10,"column_end":18},"name":"FnOpaque","qualname":"::parser::combinator::FnOpaque","value":"Opaque<fn(:\n              &mut dyn\n                   FnMut(&mut dyn Parser<Input, Output = O, PartialState = O>)\n                   -> ()), Input, O, S>","parent":null,"children":[],"decl_id":null,"docs":" Alias over `Opaque` where the function can be a plain function pointer (does not need to\n capture any values)\n","sig":null,"attributes":[{"value":"/ Alias over `Opaque` where the function can be a plain function pointer (does not need to","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":344332,"byte_end":344424,"line_start":1344,"line_end":1344,"column_start":1,"column_end":93}},{"value":"/ capture any values)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":344425,"byte_end":344448,"line_start":1345,"line_end":1345,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":2538},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":346353,"byte_end":346359,"line_start":1401,"line_end":1401,"column_start":8,"column_end":14},"name":"opaque","qualname":"::parser::combinator::opaque","value":"pub fn opaque<Input, F, O, S>(F) -> Opaque<F, Input, O, S> where\nInput: Stream, S: Default,\nF: FnMut(&mut dyn FnMut(&mut dyn Parser<Input, Output = O, PartialState = O>)\n              -> ()) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Creates a parser from a function which takes a function that are given the actual parser.\n Though convoluted this makes it possible to hide the concrete parser type without `Box` or\n losing the full information about the parser as is the case of [`parser`][].","sig":null,"attributes":[{"value":"/ Creates a parser from a function which takes a function that are given the actual parser.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":344587,"byte_end":344680,"line_start":1349,"line_end":1349,"column_start":1,"column_end":94}},{"value":"/ Though convoluted this makes it possible to hide the concrete parser type without `Box` or","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":344681,"byte_end":344775,"line_start":1350,"line_end":1350,"column_start":1,"column_end":95}},{"value":"/ losing the full information about the parser as is the case of [`parser`][].","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":344776,"byte_end":344856,"line_start":1351,"line_end":1351,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":344857,"byte_end":344860,"line_start":1352,"line_end":1352,"column_start":1,"column_end":4}},{"value":"/ Since this hides the type this can also be useful for writing mutually recursive `impl Parser`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":344861,"byte_end":344959,"line_start":1353,"line_end":1353,"column_start":1,"column_end":99}},{"value":"/ parsers to break the otherwise arbitrarily large type that rustc creates internally.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":344960,"byte_end":345048,"line_start":1354,"line_end":1354,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":345049,"byte_end":345052,"line_start":1355,"line_end":1355,"column_start":1,"column_end":4}},{"value":"/ If you need a more general version (that does not need trait objects) try the [`parser!`][]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":345053,"byte_end":345148,"line_start":1356,"line_end":1356,"column_start":1,"column_end":96}},{"value":"/ macro.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":345149,"byte_end":345159,"line_start":1357,"line_end":1357,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":345160,"byte_end":345163,"line_start":1358,"line_end":1358,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":345164,"byte_end":345171,"line_start":1359,"line_end":1359,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":345172,"byte_end":345190,"line_start":1360,"line_end":1360,"column_start":1,"column_end":19}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":345191,"byte_end":345218,"line_start":1361,"line_end":1361,"column_start":1,"column_end":28}},{"value":"/ # use combine::parser::combinator::{FnOpaque, no_partial};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":345219,"byte_end":345281,"line_start":1362,"line_end":1362,"column_start":1,"column_end":63}},{"value":"/ # use combine::parser::char::{char, digit};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":345282,"byte_end":345329,"line_start":1363,"line_end":1363,"column_start":1,"column_end":48}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":345330,"byte_end":345351,"line_start":1364,"line_end":1364,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":345352,"byte_end":345355,"line_start":1365,"line_end":1365,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":345356,"byte_end":345373,"line_start":1366,"line_end":1366,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":345374,"byte_end":345377,"line_start":1367,"line_end":1367,"column_start":1,"column_end":4}},{"value":"/ #[derive(PartialEq, Debug)]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":345378,"byte_end":345409,"line_start":1368,"line_end":1368,"column_start":1,"column_end":32}},{"value":"/ enum Expr {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":345410,"byte_end":345425,"line_start":1369,"line_end":1369,"column_start":1,"column_end":16}},{"value":"/     Number(i64),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":345426,"byte_end":345446,"line_start":1370,"line_end":1370,"column_start":1,"column_end":21}},{"value":"/     Pair(Box<Expr>, Box<Expr>),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":345447,"byte_end":345482,"line_start":1371,"line_end":1371,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":345483,"byte_end":345488,"line_start":1372,"line_end":1372,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":345489,"byte_end":345492,"line_start":1373,"line_end":1373,"column_start":1,"column_end":4}},{"value":"/ fn expr<Input>() -> FnOpaque<Input, Expr>","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":345493,"byte_end":345538,"line_start":1374,"line_end":1374,"column_start":1,"column_end":46}},{"value":"/ where","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":345539,"byte_end":345548,"line_start":1375,"line_end":1375,"column_start":1,"column_end":10}},{"value":"/     Input: Stream<Token = char>,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":345549,"byte_end":345585,"line_start":1376,"line_end":1376,"column_start":1,"column_end":37}},{"value":"/     Input::Error: ParseError<Input::Token, Input::Range, Input::Position>,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":345586,"byte_end":345664,"line_start":1377,"line_end":1377,"column_start":1,"column_end":79}},{"value":"/ {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":345665,"byte_end":345670,"line_start":1378,"line_end":1378,"column_start":1,"column_end":6}},{"value":"/     opaque!(","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":345671,"byte_end":345687,"line_start":1379,"line_end":1379,"column_start":1,"column_end":17}},{"value":"/         // `no_partial` disables partial parsing and replaces the partial state with `()`,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":345688,"byte_end":345782,"line_start":1380,"line_end":1380,"column_start":1,"column_end":95}},{"value":"/         // letting us avoid naming that type","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":345783,"byte_end":345831,"line_start":1381,"line_end":1381,"column_start":1,"column_end":49}},{"value":"/         no_partial(choice((","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":345832,"byte_end":345863,"line_start":1382,"line_end":1382,"column_start":1,"column_end":32}},{"value":"/             from_str(many1::<String, _, _>(digit()))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":345864,"byte_end":345920,"line_start":1383,"line_end":1383,"column_start":1,"column_end":57}},{"value":"/                 .map(Expr::Number),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":345921,"byte_end":345960,"line_start":1384,"line_end":1384,"column_start":1,"column_end":40}},{"value":"/             (char('('), expr(), char(','), expr(), char(')'))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":345961,"byte_end":346026,"line_start":1385,"line_end":1385,"column_start":1,"column_end":66}},{"value":"/                 .map(|(_, l, _, r, _)| Expr::Pair(Box::new(l), Box::new(r)))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":346027,"byte_end":346107,"line_start":1386,"line_end":1386,"column_start":1,"column_end":81}},{"value":"/         ))),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":346108,"byte_end":346124,"line_start":1387,"line_end":1387,"column_start":1,"column_end":17}},{"value":"/     )","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":346125,"byte_end":346134,"line_start":1388,"line_end":1388,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":346135,"byte_end":346140,"line_start":1389,"line_end":1389,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":346141,"byte_end":346144,"line_start":1390,"line_end":1390,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":346145,"byte_end":346160,"line_start":1391,"line_end":1391,"column_start":1,"column_end":16}},{"value":"/     expr().easy_parse(\"123\"),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":346161,"byte_end":346194,"line_start":1392,"line_end":1392,"column_start":1,"column_end":34}},{"value":"/     Ok((Expr::Number(123), \"\"))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":346195,"byte_end":346230,"line_start":1393,"line_end":1393,"column_start":1,"column_end":36}},{"value":"/ );","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":346231,"byte_end":346237,"line_start":1394,"line_end":1394,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":346238,"byte_end":346241,"line_start":1395,"line_end":1395,"column_start":1,"column_end":4}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":346242,"byte_end":346249,"line_start":1396,"line_end":1396,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":346250,"byte_end":346257,"line_start":1397,"line_end":1397,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":346258,"byte_end":346261,"line_start":1398,"line_end":1398,"column_start":1,"column_end":4}},{"value":"/ [`parser`]: ../function/fn.parser.html","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":346262,"byte_end":346304,"line_start":1399,"line_end":1399,"column_start":1,"column_end":43}},{"value":"/ [`parser!`]: ../../macro.parser.html","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":346305,"byte_end":346345,"line_start":1400,"line_end":1400,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2544},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":346985,"byte_end":346999,"line_start":1427,"line_end":1427,"column_start":12,"column_end":26},"name":"InputConverter","qualname":"::parser::combinator::InputConverter","value":"InputConverter { parser, converter, _marker }","parent":null,"children":[{"krate":0,"index":2548},{"krate":0,"index":2549},{"krate":0,"index":2550}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2548},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":347058,"byte_end":347064,"line_start":1431,"line_end":1431,"column_start":9,"column_end":15},"name":"parser","qualname":"::parser::combinator::InputConverter::parser","value":"P","parent":{"krate":0,"index":2544},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2549},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":347077,"byte_end":347086,"line_start":1432,"line_end":1432,"column_start":9,"column_end":18},"name":"converter","qualname":"::parser::combinator::InputConverter::converter","value":"C","parent":{"krate":0,"index":2544},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2550},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":347099,"byte_end":347106,"line_start":1433,"line_end":1433,"column_start":9,"column_end":16},"name":"_marker","qualname":"::parser::combinator::InputConverter::_marker","value":"std::marker::PhantomData<fn(InputInner)>","parent":{"krate":0,"index":2544},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2562},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":347991,"byte_end":348000,"line_start":1466,"line_end":1466,"column_start":11,"column_end":20},"name":"Converter","qualname":"::parser::combinator::Converter","value":"Converter<'a, Input>","parent":null,"children":[{"krate":0,"index":2565},{"krate":0,"index":2566},{"krate":0,"index":2567}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2565},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":348048,"byte_end":348058,"line_start":1470,"line_end":1470,"column_start":10,"column_end":20},"name":"InputInner","qualname":"::parser::combinator::Converter::InputInner","value":"type InputInner: Stream + 'a;","parent":{"krate":0,"index":2562},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2566},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":348080,"byte_end":348087,"line_start":1471,"line_end":1471,"column_start":8,"column_end":15},"name":"convert","qualname":"::parser::combinator::Converter::convert","value":"pub fn convert(&mut Self, &'a mut Input)\n-> Result<Self::InputInner, Input::Error>","parent":{"krate":0,"index":2562},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2567},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":348171,"byte_end":348184,"line_start":1472,"line_end":1472,"column_start":8,"column_end":21},"name":"convert_error","qualname":"::parser::combinator::Converter::convert_error","value":"pub fn convert_error(&mut Self, &'a mut Input,\n                     <Self::InputInner as StreamOnce>::Error) -> Input::Error","parent":{"krate":0,"index":2562},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2575},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":348858,"byte_end":348873,"line_start":1497,"line_end":1497,"column_start":8,"column_end":23},"name":"input_converter","qualname":"::parser::combinator::input_converter","value":"pub fn input_converter<Input, InputInner, P, C>(P, C)\n-> InputConverter<InputInner, P, C> where Input: Stream, InputInner: Stream,\nP: Parser<InputInner>, for<'c> C: Converter<InputInner = InputInner>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7578},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":349234,"byte_end":349241,"line_start":1515,"line_end":1515,"column_start":12,"column_end":19},"name":"Spanned","qualname":"::parser::combinator::Spanned","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2590},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":350517,"byte_end":350524,"line_start":1556,"line_end":1556,"column_start":8,"column_end":15},"name":"spanned","qualname":"::parser::combinator::spanned","value":"pub fn spanned<Input, P>(P) -> Spanned<P> where P: Parser<Input>,\nInput: Stream","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.spanned()`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.spanned()`].","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":350414,"byte_end":350448,"line_start":1553,"line_end":1553,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":350449,"byte_end":350452,"line_start":1554,"line_end":1554,"column_start":1,"column_end":4}},{"value":"/ [`p.spanned()`]: ../trait.Parser.html#method.spanned","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":350453,"byte_end":350509,"line_start":1555,"line_end":1555,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":2593},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::parser::error","value":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","parent":null,"children":[{"krate":0,"index":2594},{"krate":0,"index":2595},{"krate":0,"index":2596},{"krate":0,"index":2599},{"krate":0,"index":2602},{"krate":0,"index":2603},{"krate":0,"index":2606},{"krate":0,"index":2607},{"krate":0,"index":2610},{"krate":0,"index":2613},{"krate":0,"index":2614},{"krate":0,"index":2616},{"krate":0,"index":2619},{"krate":0,"index":2622},{"krate":0,"index":2625},{"krate":0,"index":7589},{"krate":0,"index":7596},{"krate":0,"index":2628},{"krate":0,"index":2637},{"krate":0,"index":2641},{"krate":0,"index":7601},{"krate":0,"index":7607},{"krate":0,"index":2646},{"krate":0,"index":2656},{"krate":0,"index":7615},{"krate":0,"index":7621},{"krate":0,"index":2661},{"krate":0,"index":2672},{"krate":0,"index":7629},{"krate":0,"index":7633},{"krate":0,"index":2677},{"krate":0,"index":2687}],"decl_id":null,"docs":" Parsers which cause errors or modifies the returned error on parse failure.\n","sig":null,"attributes":[{"value":"/ Parsers which cause errors or modifies the returned error on parse failure.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":350622,"byte_end":350701,"line_start":1,"line_end":1,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":7589},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":350946,"byte_end":350956,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"Unexpected","qualname":"::parser::error::Unexpected","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2637},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":352078,"byte_end":352088,"line_start":55,"line_end":55,"column_start":8,"column_end":18},"name":"unexpected","qualname":"::parser::error::unexpected","value":"pub fn unexpected<Input, S>(S) -> Unexpected<Input, (), S> where\nInput: Stream, S: for<'s> ErrorInfo","parent":null,"children":[],"decl_id":null,"docs":" Always fails with `message` as an unexpected error.\n Never consumes any input.","sig":null,"attributes":[{"value":"/ Always fails with `message` as an unexpected error.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":351560,"byte_end":351615,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/ Never consumes any input.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":351616,"byte_end":351645,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":351646,"byte_end":351649,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Has `()` the output type","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":351650,"byte_end":351678,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":351679,"byte_end":351682,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":351683,"byte_end":351690,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":351691,"byte_end":351718,"line_start":39,"line_end":39,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":351719,"byte_end":351740,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/ # use combine::error::StreamError;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":351741,"byte_end":351779,"line_start":41,"line_end":41,"column_start":1,"column_end":39}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":351780,"byte_end":351797,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/ let result = unexpected(\"token\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":351798,"byte_end":351834,"line_start":43,"line_end":43,"column_start":1,"column_end":37}},{"value":"/     .easy_parse(\"a\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":351835,"byte_end":351860,"line_start":44,"line_end":44,"column_start":1,"column_end":26}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":351861,"byte_end":351890,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/ assert!(","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":351891,"byte_end":351903,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/     result.err()","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":351904,"byte_end":351924,"line_start":47,"line_end":47,"column_start":1,"column_end":21}},{"value":"/         .unwrap()","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":351925,"byte_end":351946,"line_start":48,"line_end":48,"column_start":1,"column_end":22}},{"value":"/         .errors","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":351947,"byte_end":351966,"line_start":49,"line_end":49,"column_start":1,"column_end":20}},{"value":"/         .iter()","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":351967,"byte_end":351986,"line_start":50,"line_end":50,"column_start":1,"column_end":20}},{"value":"/         .any(|m| *m == StreamError::unexpected(\"token\"))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":351987,"byte_end":352047,"line_start":51,"line_end":51,"column_start":1,"column_end":61}},{"value":"/ );","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":352048,"byte_end":352054,"line_start":52,"line_end":52,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":352055,"byte_end":352062,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":352063,"byte_end":352070,"line_start":54,"line_end":54,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2641},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":352986,"byte_end":353000,"line_start":87,"line_end":87,"column_start":8,"column_end":22},"name":"unexpected_any","qualname":"::parser::error::unexpected_any","value":"pub fn unexpected_any<Input, S, T>(S) -> Unexpected<Input, T, S> where\nInput: Stream, S: for<'s> ErrorInfo","parent":null,"children":[],"decl_id":null,"docs":" Always fails with `message` as an unexpected error.\n Never consumes any input.","sig":null,"attributes":[{"value":"/ Always fails with `message` as an unexpected error.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":352255,"byte_end":352310,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/ Never consumes any input.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":352311,"byte_end":352340,"line_start":64,"line_end":64,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":352341,"byte_end":352344,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ May have anything as the output type but must be used such that the output type can inferred.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":352345,"byte_end":352442,"line_start":66,"line_end":66,"column_start":1,"column_end":98}},{"value":"/ The `unexpected` parser can be used if the output type does not matter","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":352443,"byte_end":352517,"line_start":67,"line_end":67,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":352518,"byte_end":352521,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":352522,"byte_end":352529,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":352530,"byte_end":352557,"line_start":70,"line_end":70,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":352558,"byte_end":352579,"line_start":71,"line_end":71,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::error::unexpected_any;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":352580,"byte_end":352629,"line_start":72,"line_end":72,"column_start":1,"column_end":50}},{"value":"/ # use combine::error::StreamError;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":352630,"byte_end":352668,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":352669,"byte_end":352686,"line_start":74,"line_end":74,"column_start":1,"column_end":18}},{"value":"/ let result = token('b').or(unexpected_any(\"token\"))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":352687,"byte_end":352742,"line_start":75,"line_end":75,"column_start":1,"column_end":56}},{"value":"/     .easy_parse(\"a\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":352743,"byte_end":352768,"line_start":76,"line_end":76,"column_start":1,"column_end":26}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":352769,"byte_end":352798,"line_start":77,"line_end":77,"column_start":1,"column_end":30}},{"value":"/ assert!(","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":352799,"byte_end":352811,"line_start":78,"line_end":78,"column_start":1,"column_end":13}},{"value":"/     result.err()","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":352812,"byte_end":352832,"line_start":79,"line_end":79,"column_start":1,"column_end":21}},{"value":"/         .unwrap()","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":352833,"byte_end":352854,"line_start":80,"line_end":80,"column_start":1,"column_end":22}},{"value":"/         .errors","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":352855,"byte_end":352874,"line_start":81,"line_end":81,"column_start":1,"column_end":20}},{"value":"/         .iter()","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":352875,"byte_end":352894,"line_start":82,"line_end":82,"column_start":1,"column_end":20}},{"value":"/         .any(|m| *m == StreamError::unexpected(\"token\"))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":352895,"byte_end":352955,"line_start":83,"line_end":83,"column_start":1,"column_end":61}},{"value":"/ );","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":352956,"byte_end":352962,"line_start":84,"line_end":84,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":352963,"byte_end":352970,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":352971,"byte_end":352978,"line_start":86,"line_end":86,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7601},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":353206,"byte_end":353213,"line_start":96,"line_end":96,"column_start":12,"column_end":19},"name":"Message","qualname":"::parser::error::Message","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2656},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":354548,"byte_end":354555,"line_start":143,"line_end":143,"column_start":8,"column_end":15},"name":"message","qualname":"::parser::error::message","value":"pub fn message<Input, P, S>(P, S) -> Message<P, S> where P: Parser<Input>,\nInput: Stream, S: for<'s> ErrorInfo","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p1.message(msg)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p1.message(msg)`].","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":354437,"byte_end":354475,"line_start":140,"line_end":140,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":354476,"byte_end":354479,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ [`p1.message(msg)`]: ../trait.Parser.html#method.message","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":354480,"byte_end":354540,"line_start":142,"line_end":142,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":7615},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":354758,"byte_end":354766,"line_start":153,"line_end":153,"column_start":12,"column_end":20},"name":"Expected","qualname":"::parser::error::Expected","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2672},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":355746,"byte_end":355754,"line_start":189,"line_end":189,"column_start":8,"column_end":16},"name":"expected","qualname":"::parser::error::expected","value":"pub fn expected<Input, P, S>(P, S) -> Expected<P, S> where P: Parser<Input>,\nInput: Stream, S: for<'s> ErrorInfo","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.expected(info)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.expected(info)`].","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":355632,"byte_end":355671,"line_start":186,"line_end":186,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":355672,"byte_end":355675,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ [`p.expected(info)`]: ../trait.Parser.html#method.expected","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":355676,"byte_end":355738,"line_start":188,"line_end":188,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":7629},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":355961,"byte_end":355967,"line_start":199,"line_end":199,"column_start":12,"column_end":18},"name":"Silent","qualname":"::parser::error::Silent","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2687},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":356908,"byte_end":356914,"line_start":239,"line_end":239,"column_start":8,"column_end":14},"name":"silent","qualname":"::parser::error::silent","value":"pub fn silent<Input, P>(P) -> Silent<P> where P: Parser<Input>, Input: Stream","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.silent()`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.silent()`].","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":356808,"byte_end":356841,"line_start":236,"line_end":236,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":356842,"byte_end":356845,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ [`p.silent()`]: ../trait.Parser.html#method.silent","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":356846,"byte_end":356900,"line_start":238,"line_end":238,"column_start":1,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":2690},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"function","qualname":"::parser::function","value":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","parent":null,"children":[{"krate":0,"index":2691},{"krate":0,"index":2692},{"krate":0,"index":2693},{"krate":0,"index":2696},{"krate":0,"index":2699},{"krate":0,"index":2700},{"krate":0,"index":2702},{"krate":0,"index":2705},{"krate":0,"index":2708},{"krate":0,"index":7639},{"krate":0,"index":7645},{"krate":0,"index":7648},{"krate":0,"index":2715},{"krate":0,"index":2719},{"krate":0,"index":2726},{"krate":0,"index":7652},{"krate":0,"index":7658},{"krate":0,"index":2732},{"krate":0,"index":2737},{"krate":0,"index":2744}],"decl_id":null,"docs":" Parsers constructor from regular functions\n","sig":null,"attributes":[{"value":"/ Parsers constructor from regular functions","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":357010,"byte_end":357056,"line_start":1,"line_end":1,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":7639},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":357501,"byte_end":357509,"line_start":23,"line_end":23,"column_start":12,"column_end":20},"name":"FnParser","qualname":"::parser::function::FnParser","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2715},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":358746,"byte_end":358752,"line_start":61,"line_end":61,"column_start":8,"column_end":14},"name":"parser","qualname":"::parser::function::parser","value":"pub fn parser<Input, O, F>(F) -> FnParser<Input, F> where Input: Stream,\nF: FnMut(&mut Input) -> StdParseResult<O, Input>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a function, turning it into a parser.","sig":null,"attributes":[{"value":"/ Wraps a function, turning it into a parser.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":357558,"byte_end":357605,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":357606,"byte_end":357609,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Mainly needed to turn closures into parsers as function types can be casted to function pointers","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":357610,"byte_end":357710,"line_start":27,"line_end":27,"column_start":1,"column_end":101}},{"value":"/ to make them usable as a parser.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":357711,"byte_end":357747,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":357748,"byte_end":357751,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":357752,"byte_end":357759,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":357760,"byte_end":357785,"line_start":31,"line_end":31,"column_start":1,"column_end":26}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":357786,"byte_end":357807,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":357808,"byte_end":357847,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"/ # use combine::error::{Commit, StreamError};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":357848,"byte_end":357896,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":357897,"byte_end":357929,"line_start":35,"line_end":35,"column_start":1,"column_end":33}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":357930,"byte_end":357947,"line_start":36,"line_end":36,"column_start":1,"column_end":18}},{"value":"/ let mut even_digit = parser(|input| {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":357948,"byte_end":357989,"line_start":37,"line_end":37,"column_start":1,"column_end":42}},{"value":"/     // Help type inference out","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":357990,"byte_end":358024,"line_start":38,"line_end":38,"column_start":1,"column_end":35}},{"value":"/     let _: &mut easy::Stream<&str> = input;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":358025,"byte_end":358072,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/     let position = input.position();","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":358073,"byte_end":358113,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/     let (char_digit, committed) = digit().parse_stream(input).into_result()?;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":358114,"byte_end":358195,"line_start":41,"line_end":41,"column_start":1,"column_end":82}},{"value":"/     let d = (char_digit as i32) - ('0' as i32);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":358196,"byte_end":358247,"line_start":42,"line_end":42,"column_start":1,"column_end":52}},{"value":"/     if d % 2 == 0 {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":358248,"byte_end":358271,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/         Ok((d, committed))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":358272,"byte_end":358302,"line_start":44,"line_end":44,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":358303,"byte_end":358312,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/     else {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":358313,"byte_end":358327,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/         //Return an empty error since we only tested the first token of the stream","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":358328,"byte_end":358414,"line_start":47,"line_end":47,"column_start":1,"column_end":87}},{"value":"/         let errors = easy::Errors::new(","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":358415,"byte_end":358458,"line_start":48,"line_end":48,"column_start":1,"column_end":44}},{"value":"/             position,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":358459,"byte_end":358484,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"/             StreamError::expected(\"even number\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":358485,"byte_end":358537,"line_start":50,"line_end":50,"column_start":1,"column_end":53}},{"value":"/         );","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":358538,"byte_end":358552,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"/         Err(Commit::Peek(errors.into()))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":358553,"byte_end":358597,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":358598,"byte_end":358607,"line_start":53,"line_end":53,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":358608,"byte_end":358615,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ let result = even_digit","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":358616,"byte_end":358643,"line_start":55,"line_end":55,"column_start":1,"column_end":28}},{"value":"/     .easy_parse(\"8\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":358644,"byte_end":358668,"line_start":56,"line_end":56,"column_start":1,"column_end":25}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":358669,"byte_end":358691,"line_start":57,"line_end":57,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(8));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":358692,"byte_end":358722,"line_start":58,"line_end":58,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":358723,"byte_end":358730,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":358731,"byte_end":358738,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7652},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":359541,"byte_end":359550,"line_start":97,"line_end":97,"column_start":12,"column_end":21},"name":"EnvParser","qualname":"::parser::function::EnvParser","value":"EnvParser {  }","parent":null,"children":[{"krate":0,"index":7656},{"krate":0,"index":7657}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2744},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":361532,"byte_end":361542,"line_start":170,"line_end":170,"column_start":8,"column_end":18},"name":"env_parser","qualname":"::parser::function::env_parser","value":"pub fn env_parser<E, Input,\n                  O>(E, fn(: E, : &mut Input) -> StdParseResult<O, Input>)\n-> EnvParser<E, Input, O> where E: Clone, Input: Stream","parent":null,"children":[],"decl_id":null,"docs":" Constructs a parser out of an environment and a function which needs the given environment to\n do the parsing. This is commonly useful to allow multiple parsers to share some environment\n while still allowing the parsers to be written in separate functions.","sig":null,"attributes":[{"value":"/ Constructs a parser out of an environment and a function which needs the given environment to","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":360203,"byte_end":360300,"line_start":132,"line_end":132,"column_start":1,"column_end":98}},{"value":"/ do the parsing. This is commonly useful to allow multiple parsers to share some environment","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":360301,"byte_end":360396,"line_start":133,"line_end":133,"column_start":1,"column_end":96}},{"value":"/ while still allowing the parsers to be written in separate functions.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":360397,"byte_end":360470,"line_start":134,"line_end":134,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":360471,"byte_end":360474,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":360475,"byte_end":360482,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":360483,"byte_end":360510,"line_start":137,"line_end":137,"column_start":1,"column_end":28}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":360511,"byte_end":360547,"line_start":138,"line_end":138,"column_start":1,"column_end":37}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":360548,"byte_end":360569,"line_start":139,"line_end":139,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::function::env_parser;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":360570,"byte_end":360618,"line_start":140,"line_end":140,"column_start":1,"column_end":49}},{"value":"/ # use combine::parser::char::letter;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":360619,"byte_end":360659,"line_start":141,"line_end":141,"column_start":1,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":360660,"byte_end":360677,"line_start":142,"line_end":142,"column_start":1,"column_end":18}},{"value":"/ struct Interner(HashMap<String, u32>);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":360678,"byte_end":360720,"line_start":143,"line_end":143,"column_start":1,"column_end":43}},{"value":"/ impl Interner {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":360721,"byte_end":360740,"line_start":144,"line_end":144,"column_start":1,"column_end":20}},{"value":"/     fn string<Input>(&self, input: &mut Input) -> StdParseResult<u32, Input>","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":360741,"byte_end":360821,"line_start":145,"line_end":145,"column_start":1,"column_end":81}},{"value":"/         where Input: Stream<Token = char>,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":360822,"byte_end":360868,"line_start":146,"line_end":146,"column_start":1,"column_end":47}},{"value":"/               Input::Error: ParseError<Input::Token, Input::Range, Input::Position>,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":360869,"byte_end":360957,"line_start":147,"line_end":147,"column_start":1,"column_end":89}},{"value":"/     {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":360958,"byte_end":360967,"line_start":148,"line_end":148,"column_start":1,"column_end":10}},{"value":"/         many(letter())","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":360968,"byte_end":360994,"line_start":149,"line_end":149,"column_start":1,"column_end":27}},{"value":"/             .map(|s: String| self.0.get(&s).cloned().unwrap_or(0))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":360995,"byte_end":361065,"line_start":150,"line_end":150,"column_start":1,"column_end":71}},{"value":"/             .parse_stream(input)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":361066,"byte_end":361102,"line_start":151,"line_end":151,"column_start":1,"column_end":37}},{"value":"/             .into_result()","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":361103,"byte_end":361133,"line_start":152,"line_end":152,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":361134,"byte_end":361143,"line_start":153,"line_end":153,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":361144,"byte_end":361149,"line_start":154,"line_end":154,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":361150,"byte_end":361153,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":361154,"byte_end":361187,"line_start":156,"line_end":156,"column_start":1,"column_end":34}},{"value":"/ map.insert(\"hello\".into(), 1);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":361188,"byte_end":361222,"line_start":157,"line_end":157,"column_start":1,"column_end":35}},{"value":"/ map.insert(\"test\".into(), 2);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":361223,"byte_end":361256,"line_start":158,"line_end":158,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":361257,"byte_end":361260,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ let env = Interner(map);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":361261,"byte_end":361289,"line_start":160,"line_end":160,"column_start":1,"column_end":29}},{"value":"/ let mut parser = env_parser(&env, Interner::string);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":361290,"byte_end":361346,"line_start":161,"line_end":161,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":361347,"byte_end":361350,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ let result = parser.parse(\"hello\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":361351,"byte_end":361390,"line_start":163,"line_end":163,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(result, Ok((1, \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":361391,"byte_end":361427,"line_start":164,"line_end":164,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":361428,"byte_end":361431,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ let result = parser.parse(\"world\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":361432,"byte_end":361471,"line_start":166,"line_end":166,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(result, Ok((0, \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":361472,"byte_end":361508,"line_start":167,"line_end":167,"column_start":1,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":361509,"byte_end":361516,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":361517,"byte_end":361524,"line_start":169,"line_end":169,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":2748},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"range","qualname":"::parser::range","value":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","parent":null,"children":[{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":2751},{"krate":0,"index":2754},{"krate":0,"index":2757},{"krate":0,"index":2758},{"krate":0,"index":2761},{"krate":0,"index":2762},{"krate":0,"index":2765},{"krate":0,"index":2768},{"krate":0,"index":2771},{"krate":0,"index":2772},{"krate":0,"index":2775},{"krate":0,"index":2776},{"krate":0,"index":2778},{"krate":0,"index":2781},{"krate":0,"index":2784},{"krate":0,"index":2785},{"krate":0,"index":2788},{"krate":0,"index":2791},{"krate":0,"index":2794},{"krate":0,"index":2797},{"krate":0,"index":2800},{"krate":0,"index":2803},{"krate":0,"index":2806},{"krate":0,"index":2809},{"krate":0,"index":2812},{"krate":0,"index":2816},{"krate":0,"index":7676},{"krate":0,"index":7681},{"krate":0,"index":7662},{"krate":0,"index":7673},{"krate":0,"index":2825},{"krate":0,"index":7688},{"krate":0,"index":7692},{"krate":0,"index":2832},{"krate":0,"index":2841},{"krate":0,"index":2844},{"krate":0,"index":2846},{"krate":0,"index":2851},{"krate":0,"index":2856},{"krate":0,"index":2858},{"krate":0,"index":2864},{"krate":0,"index":2873},{"krate":0,"index":2876},{"krate":0,"index":2882},{"krate":0,"index":2891},{"krate":0,"index":2894},{"krate":0,"index":2898},{"krate":0,"index":2906},{"krate":0,"index":7701},{"krate":0,"index":7708},{"krate":0,"index":7710},{"krate":0,"index":7711},{"krate":0,"index":2908},{"krate":0,"index":2910},{"krate":0,"index":2915},{"krate":0,"index":2923},{"krate":0,"index":7716},{"krate":0,"index":7721},{"krate":0,"index":7734}],"decl_id":null,"docs":" Module containing zero-copy parsers.","sig":null,"attributes":[{"value":"/ Module containing zero-copy parsers.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":361730,"byte_end":361770,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":361771,"byte_end":361774,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ These parsers require the [`RangeStream`][] bound instead of a plain [`Stream`][].","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":361775,"byte_end":361861,"line_start":3,"line_end":3,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":361862,"byte_end":361865,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`RangeStream`]: ../../stream/trait.RangeStream.html","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":361866,"byte_end":361922,"line_start":5,"line_end":5,"column_start":1,"column_end":57}},{"value":"/ [`Stream`]: ../../stream/trait.Stream.html","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":361923,"byte_end":361969,"line_start":6,"line_end":6,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":2812},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":362487,"byte_end":362492,"line_start":31,"line_end":31,"column_start":12,"column_end":17},"name":"Range","qualname":"::parser::range::Range","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7676},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":363540,"byte_end":363549,"line_start":70,"line_end":70,"column_start":16,"column_end":25},"name":"Recognize","qualname":"::parser::range::Recognize","value":"Recognize { parser }","parent":null,"children":[{"krate":0,"index":7679},{"krate":0,"index":7680}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7679},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":364290,"byte_end":364296,"line_start":89,"line_end":89,"column_start":32,"column_end":38},"name":"parser","qualname":"::parser::range::Recognize::parser","value":"P","parent":{"krate":0,"index":7676},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":7673},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":364270,"byte_end":364279,"line_start":89,"line_end":89,"column_start":12,"column_end":21},"name":"recognize","qualname":"::parser::range::recognize","value":"pub fn recognize<Input, P>(P) -> Recognize<Input, P> where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, P: Parser<Input>, Input: RangeStream,\n<Input as StreamOnce>::Range: crate::stream::Range","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which returns committed input range.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":19214,"byte_end":19222,"line_start":508,"line_end":508,"column_start":11,"column_end":19}},{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":19233,"byte_end":19242,"line_start":509,"line_end":509,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":7688},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":366116,"byte_end":366134,"line_start":151,"line_end":151,"column_start":12,"column_end":30},"name":"RecognizeWithValue","qualname":"::parser::range::RecognizeWithValue","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2841},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":368549,"byte_end":368569,"line_start":225,"line_end":225,"column_start":8,"column_end":28},"name":"recognize_with_value","qualname":"::parser::range::recognize_with_value","value":"pub fn recognize_with_value<Input, P>(P) -> RecognizeWithValue<P> where\nP: Parser<Input>, Input: RangeStream,\n<Input as StreamOnce>::Range: crate::stream::Range","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which returns a pair: (committed input range, parsed value).","sig":null,"attributes":[{"value":"/ Zero-copy parser which returns a pair: (committed input range, parsed value).","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":367707,"byte_end":367788,"line_start":202,"line_end":202,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":367789,"byte_end":367792,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":367793,"byte_end":367796,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ [`combinator::recognize_with_value`] is a non-`RangeStream` alternative.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":367797,"byte_end":367873,"line_start":205,"line_end":205,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":367874,"byte_end":367877,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ [`combinator::recognize_with_value`]: recognize_with_value","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":367878,"byte_end":367940,"line_start":207,"line_end":207,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":367941,"byte_end":367948,"line_start":208,"line_end":208,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":367949,"byte_end":367976,"line_start":209,"line_end":209,"column_start":1,"column_end":28}},{"value":"/ # use combine::parser::range::recognize_with_value;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":367977,"byte_end":368032,"line_start":210,"line_end":210,"column_start":1,"column_end":56}},{"value":"/ # use combine::parser::char::{digit, char};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":368033,"byte_end":368080,"line_start":211,"line_end":211,"column_start":1,"column_end":48}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":368081,"byte_end":368102,"line_start":212,"line_end":212,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":368103,"byte_end":368120,"line_start":213,"line_end":213,"column_start":1,"column_end":18}},{"value":"/ let mut parser = recognize_with_value((","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":368121,"byte_end":368164,"line_start":214,"line_end":214,"column_start":1,"column_end":44}},{"value":"/     skip_many1(digit()),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":368165,"byte_end":368193,"line_start":215,"line_end":215,"column_start":1,"column_end":29}},{"value":"/     optional((attempt(char('.')), skip_many1(digit()))),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":368194,"byte_end":368254,"line_start":216,"line_end":216,"column_start":1,"column_end":61}},{"value":"/ ).map(|(_, opt)| opt.is_some()));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":368255,"byte_end":368292,"line_start":217,"line_end":217,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":368293,"byte_end":368296,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser.parse(\"1234!\"), Ok(((\"1234\", false), \"!\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":368297,"byte_end":368363,"line_start":219,"line_end":219,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser.parse(\"1234.0001!\"), Ok(((\"1234.0001\", true), \"!\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":368364,"byte_end":368439,"line_start":220,"line_end":220,"column_start":1,"column_end":76}},{"value":"/ assert!(parser.parse(\"!\").is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":368440,"byte_end":368480,"line_start":221,"line_end":221,"column_start":1,"column_end":41}},{"value":"/ assert!(parser.parse(\"1234.\").is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":368481,"byte_end":368525,"line_start":222,"line_end":222,"column_start":1,"column_end":45}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":368526,"byte_end":368533,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":368534,"byte_end":368541,"line_start":224,"line_end":224,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2844},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":369311,"byte_end":369316,"line_start":252,"line_end":252,"column_start":8,"column_end":13},"name":"range","qualname":"::parser::range::range","value":"pub fn range<Input>(Input::Range) -> Range<Input> where Input: RangeStream,\nInput::Range: PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of length `i.len()` and succeeds if `i` is equal to that\n range.","sig":null,"attributes":[{"value":"/ Zero-copy parser which reads a range of length `i.len()` and succeeds if `i` is equal to that","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":368760,"byte_end":368857,"line_start":234,"line_end":234,"column_start":1,"column_end":98}},{"value":"/ range.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":368858,"byte_end":368868,"line_start":235,"line_end":235,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":368869,"byte_end":368872,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ [`tokens`] is a non-`RangeStream` alternative.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":368873,"byte_end":368923,"line_start":237,"line_end":237,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":368924,"byte_end":368927,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ [`tokens`]: super::token::tokens","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":368928,"byte_end":368964,"line_start":239,"line_end":239,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":368965,"byte_end":368972,"line_start":240,"line_end":240,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":368973,"byte_end":369000,"line_start":241,"line_end":241,"column_start":1,"column_end":28}},{"value":"/ # use combine::parser::range::range;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":369001,"byte_end":369041,"line_start":242,"line_end":242,"column_start":1,"column_end":41}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":369042,"byte_end":369063,"line_start":243,"line_end":243,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":369064,"byte_end":369081,"line_start":244,"line_end":244,"column_start":1,"column_end":18}},{"value":"/ let mut parser = range(\"hello\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":369082,"byte_end":369118,"line_start":245,"line_end":245,"column_start":1,"column_end":37}},{"value":"/ let result = parser.parse(\"hello world\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":369119,"byte_end":369164,"line_start":246,"line_end":246,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(result, Ok((\"hello\", \" world\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":369165,"byte_end":369213,"line_start":247,"line_end":247,"column_start":1,"column_end":49}},{"value":"/ let result = parser.parse(\"hel world\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":369214,"byte_end":369257,"line_start":248,"line_end":248,"column_start":1,"column_end":44}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":369258,"byte_end":369287,"line_start":249,"line_end":249,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":369288,"byte_end":369295,"line_start":250,"line_end":250,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":369296,"byte_end":369303,"line_start":251,"line_end":251,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2846},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":369445,"byte_end":369449,"line_start":260,"line_end":260,"column_start":12,"column_end":16},"name":"Take","qualname":"::parser::range::Take","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2856},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":370431,"byte_end":370435,"line_start":297,"line_end":297,"column_start":8,"column_end":12},"name":"take","qualname":"::parser::range::take","value":"pub fn take<Input>(usize) -> Take<Input> where Input: RangeStream","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of length `n`.","sig":null,"attributes":[{"value":"/ Zero-copy parser which reads a range of length `n`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":369815,"byte_end":369870,"line_start":277,"line_end":277,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":369871,"byte_end":369874,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ [`count_min_max`][] is a non-`RangeStream` alternative.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":369875,"byte_end":369934,"line_start":279,"line_end":279,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":369935,"byte_end":369938,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ [`count_min_max`]: ../../parser/repeat/fn.count_min_max.html","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":369939,"byte_end":370003,"line_start":281,"line_end":281,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":370004,"byte_end":370011,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":370012,"byte_end":370039,"line_start":283,"line_end":283,"column_start":1,"column_end":28}},{"value":"/ # use combine::parser::range::take;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":370040,"byte_end":370079,"line_start":284,"line_end":284,"column_start":1,"column_end":40}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":370080,"byte_end":370101,"line_start":285,"line_end":285,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":370102,"byte_end":370119,"line_start":286,"line_end":286,"column_start":1,"column_end":18}},{"value":"/ let mut parser = take(1);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":370120,"byte_end":370149,"line_start":287,"line_end":287,"column_start":1,"column_end":30}},{"value":"/ let result = parser.parse(\"1\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":370150,"byte_end":370185,"line_start":288,"line_end":288,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(result, Ok((\"1\", \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":370186,"byte_end":370224,"line_start":289,"line_end":289,"column_start":1,"column_end":39}},{"value":"/ let mut parser = take(4);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":370225,"byte_end":370254,"line_start":290,"line_end":290,"column_start":1,"column_end":30}},{"value":"/ let result = parser.parse(\"123abc\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":370255,"byte_end":370295,"line_start":291,"line_end":291,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(result, Ok((\"123a\", \"bc\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":370296,"byte_end":370339,"line_start":292,"line_end":292,"column_start":1,"column_end":44}},{"value":"/ let result = parser.parse(\"abc\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":370340,"byte_end":370377,"line_start":293,"line_end":293,"column_start":1,"column_end":38}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":370378,"byte_end":370407,"line_start":294,"line_end":294,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":370408,"byte_end":370415,"line_start":295,"line_end":295,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":370416,"byte_end":370423,"line_start":296,"line_end":296,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2858},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":370539,"byte_end":370548,"line_start":304,"line_end":304,"column_start":12,"column_end":21},"name":"TakeWhile","qualname":"::parser::range::TakeWhile","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2873},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":371901,"byte_end":371911,"line_start":353,"line_end":353,"column_start":8,"column_end":18},"name":"take_while","qualname":"::parser::range::take_while","value":"pub fn take_while<Input, F>(F) -> TakeWhile<Input, F> where\nInput: RangeStream, Input::Range: crate::stream::Range, F: FnMut(Input::Token)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of 0 or more tokens which satisfy `f`.","sig":null,"attributes":[{"value":"/ Zero-copy parser which reads a range of 0 or more tokens which satisfy `f`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":371347,"byte_end":371426,"line_start":336,"line_end":336,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":371427,"byte_end":371430,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`many`][] is a non-`RangeStream` alternative.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":371431,"byte_end":371481,"line_start":338,"line_end":338,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":371482,"byte_end":371485,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ [`many`]: ../../parser/repeat/fn.many.html","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":371486,"byte_end":371532,"line_start":340,"line_end":340,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":371533,"byte_end":371540,"line_start":341,"line_end":341,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":371541,"byte_end":371568,"line_start":342,"line_end":342,"column_start":1,"column_end":28}},{"value":"/ # use combine::parser::range::take_while;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":371569,"byte_end":371614,"line_start":343,"line_end":343,"column_start":1,"column_end":46}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":371615,"byte_end":371636,"line_start":344,"line_end":344,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":371637,"byte_end":371654,"line_start":345,"line_end":345,"column_start":1,"column_end":18}},{"value":"/ let mut parser = take_while(|c: char| c.is_digit(10));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":371655,"byte_end":371713,"line_start":346,"line_end":346,"column_start":1,"column_end":59}},{"value":"/ let result = parser.parse(\"123abc\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":371714,"byte_end":371754,"line_start":347,"line_end":347,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(result, Ok((\"123\", \"abc\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":371755,"byte_end":371798,"line_start":348,"line_end":348,"column_start":1,"column_end":44}},{"value":"/ let result = parser.parse(\"abc\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":371799,"byte_end":371836,"line_start":349,"line_end":349,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(result, Ok((\"\", \"abc\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":371837,"byte_end":371877,"line_start":350,"line_end":350,"column_start":1,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":371878,"byte_end":371885,"line_start":351,"line_end":351,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":371886,"byte_end":371893,"line_start":352,"line_end":352,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2876},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":372103,"byte_end":372113,"line_start":362,"line_end":362,"column_start":12,"column_end":22},"name":"TakeWhile1","qualname":"::parser::range::TakeWhile1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2891},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":373462,"byte_end":373473,"line_start":411,"line_end":411,"column_start":8,"column_end":19},"name":"take_while1","qualname":"::parser::range::take_while1","value":"pub fn take_while1<Input, F>(F) -> TakeWhile1<Input, F> where\nInput: RangeStream, Input::Range: crate::stream::Range, F: FnMut(Input::Token)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of 1 or more tokens which satisfy `f`.","sig":null,"attributes":[{"value":"/ Zero-copy parser which reads a range of 1 or more tokens which satisfy `f`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":372914,"byte_end":372993,"line_start":394,"line_end":394,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":372994,"byte_end":372997,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"/ [`many1`][] is a non-`RangeStream` alternative.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":372998,"byte_end":373049,"line_start":396,"line_end":396,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":373050,"byte_end":373053,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ [`many1`]: ../../parser/repeat/fn.many1.html","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":373054,"byte_end":373102,"line_start":398,"line_end":398,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":373103,"byte_end":373110,"line_start":399,"line_end":399,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":373111,"byte_end":373138,"line_start":400,"line_end":400,"column_start":1,"column_end":28}},{"value":"/ # use combine::parser::range::take_while1;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":373139,"byte_end":373185,"line_start":401,"line_end":401,"column_start":1,"column_end":47}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":373186,"byte_end":373207,"line_start":402,"line_end":402,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":373208,"byte_end":373225,"line_start":403,"line_end":403,"column_start":1,"column_end":18}},{"value":"/ let mut parser = take_while1(|c: char| c.is_digit(10));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":373226,"byte_end":373285,"line_start":404,"line_end":404,"column_start":1,"column_end":60}},{"value":"/ let result = parser.parse(\"123abc\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":373286,"byte_end":373326,"line_start":405,"line_end":405,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(result, Ok((\"123\", \"abc\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":373327,"byte_end":373370,"line_start":406,"line_end":406,"column_start":1,"column_end":44}},{"value":"/ let result = parser.parse(\"abc\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":373371,"byte_end":373408,"line_start":407,"line_end":407,"column_start":1,"column_end":38}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":373409,"byte_end":373438,"line_start":408,"line_end":408,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":373439,"byte_end":373446,"line_start":409,"line_end":409,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":373447,"byte_end":373454,"line_start":410,"line_end":410,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2894},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":373667,"byte_end":373681,"line_start":420,"line_end":420,"column_start":12,"column_end":26},"name":"TakeUntilRange","qualname":"::parser::range::TakeUntilRange","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2906},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":377949,"byte_end":377965,"line_start":528,"line_end":528,"column_start":8,"column_end":24},"name":"take_until_range","qualname":"::parser::range::take_until_range","value":"pub fn take_until_range<Input>(Input::Range) -> TakeUntilRange<Input> where\nInput: RangeStream","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of 0 or more tokens until `r` is found.","sig":null,"attributes":[{"value":"/ Zero-copy parser which reads a range of 0 or more tokens until `r` is found.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":377218,"byte_end":377298,"line_start":508,"line_end":508,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":377299,"byte_end":377302,"line_start":509,"line_end":509,"column_start":1,"column_end":4}},{"value":"/ The range `r` will not be committed. If `r` is not found, the parser will","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":377303,"byte_end":377380,"line_start":510,"line_end":510,"column_start":1,"column_end":78}},{"value":"/ return an error.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":377381,"byte_end":377401,"line_start":511,"line_end":511,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":377402,"byte_end":377405,"line_start":512,"line_end":512,"column_start":1,"column_end":4}},{"value":"/ [`repeat::take_until`][] is a non-`RangeStream` alternative.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":377406,"byte_end":377470,"line_start":513,"line_end":513,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":377471,"byte_end":377474,"line_start":514,"line_end":514,"column_start":1,"column_end":4}},{"value":"/ [`repeat::take_until`]: ../../parser/repeat/fn.take_until.html","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":377475,"byte_end":377541,"line_start":515,"line_end":515,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":377542,"byte_end":377549,"line_start":516,"line_end":516,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":377550,"byte_end":377577,"line_start":517,"line_end":517,"column_start":1,"column_end":28}},{"value":"/ # use combine::parser::range::{range, take_until_range};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":377578,"byte_end":377638,"line_start":518,"line_end":518,"column_start":1,"column_end":61}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":377639,"byte_end":377660,"line_start":519,"line_end":519,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":377661,"byte_end":377678,"line_start":520,"line_end":520,"column_start":1,"column_end":18}},{"value":"/ let mut parser = take_until_range(\"\\r\\n\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":377679,"byte_end":377725,"line_start":521,"line_end":521,"column_start":1,"column_end":47}},{"value":"/ let result = parser.parse(\"To: user@example.com\\r\\n\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":377726,"byte_end":377784,"line_start":522,"line_end":522,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(result, Ok((\"To: user@example.com\", \"\\r\\n\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":377785,"byte_end":377846,"line_start":523,"line_end":523,"column_start":1,"column_end":62}},{"value":"/ let result = parser.parse(\"Hello, world\\n\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":377847,"byte_end":377895,"line_start":524,"line_end":524,"column_start":1,"column_end":49}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":377896,"byte_end":377925,"line_start":525,"line_end":525,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":377926,"byte_end":377933,"line_start":526,"line_end":526,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":377934,"byte_end":377941,"line_start":527,"line_end":527,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7702},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":378166,"byte_end":378171,"line_start":538,"line_end":538,"column_start":5,"column_end":10},"name":"Found","qualname":"::parser::range::TakeRange::Found","value":"TakeRange::Found(usize)","parent":{"krate":0,"index":7701},"children":[],"decl_id":null,"docs":" Found the pattern at this offset\n","sig":null,"attributes":[{"value":"/ Found the pattern at this offset","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":378125,"byte_end":378161,"line_start":537,"line_end":537,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7705},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":378263,"byte_end":378271,"line_start":540,"line_end":540,"column_start":5,"column_end":13},"name":"NotFound","qualname":"::parser::range::TakeRange::NotFound","value":"TakeRange::NotFound(usize)","parent":{"krate":0,"index":7701},"children":[],"decl_id":null,"docs":" Did not find the pattern but the parser can skip ahead to this offset.\n","sig":null,"attributes":[{"value":"/ Did not find the pattern but the parser can skip ahead to this offset.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":378184,"byte_end":378258,"line_start":539,"line_end":539,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":7701},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":378109,"byte_end":378118,"line_start":536,"line_end":536,"column_start":10,"column_end":19},"name":"TakeRange","qualname":"::parser::range::TakeRange","value":"pub enum TakeRange { Found(usize), NotFound(usize), }","parent":null,"children":[{"krate":0,"index":7702},{"krate":0,"index":7705}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2910},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":378509,"byte_end":378515,"line_start":552,"line_end":552,"column_start":12,"column_end":18},"name":"TakeFn","qualname":"::parser::range::TakeFn","value":"TakeFn {  }","parent":null,"children":[{"krate":0,"index":2913},{"krate":0,"index":2914}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2923},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":380730,"byte_end":380737,"line_start":622,"line_end":622,"column_start":8,"column_end":15},"name":"take_fn","qualname":"::parser::range::take_fn","value":"pub fn take_fn<F, R, Input>(F) -> TakeFn<F, Input> where\nF: FnMut(Input::Range) -> R, R: Into<TakeRange>, Input: RangeStream,\nInput::Range: crate::stream::Range","parent":null,"children":[],"decl_id":null,"docs":" Searches the entire range using `searcher` and then consumes a range of `Some(n)`.\n If `f` can not find anything in the range it must return `None/NotFound` which indicates an end of input error.","sig":null,"attributes":[{"value":"/ Searches the entire range using `searcher` and then consumes a range of `Some(n)`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":380216,"byte_end":380302,"line_start":614,"line_end":614,"column_start":1,"column_end":87}},{"value":"/ If `f` can not find anything in the range it must return `None/NotFound` which indicates an end of input error.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":380303,"byte_end":380418,"line_start":615,"line_end":615,"column_start":1,"column_end":116}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":380419,"byte_end":380422,"line_start":616,"line_end":616,"column_start":1,"column_end":4}},{"value":"/ If partial parsing is used the `TakeRange` enum can be returned instead of `Option`. By","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":380423,"byte_end":380514,"line_start":617,"line_end":617,"column_start":1,"column_end":92}},{"value":"/ returning `TakeRange::NotFound(n)` it indicates that the input can skip ahead until `n`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":380515,"byte_end":380606,"line_start":618,"line_end":618,"column_start":1,"column_end":92}},{"value":"/ when parsing is next resumed.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":380607,"byte_end":380640,"line_start":619,"line_end":619,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":380641,"byte_end":380644,"line_start":620,"line_end":620,"column_start":1,"column_end":4}},{"value":"/ See [`take_until_bytes`](../byte/fn.take_until_bytes.html) for a usecase.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":380645,"byte_end":380722,"line_start":621,"line_end":621,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":7716},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":381561,"byte_end":381574,"line_start":653,"line_end":653,"column_start":8,"column_end":21},"name":"length_prefix","qualname":"::parser::range::length_prefix","value":"length_prefix { len }","parent":null,"children":[{"krate":0,"index":7719},{"krate":0,"index":7720}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":16013,"byte_end":16023,"line_start":433,"line_end":433,"column_start":11,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":7719},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":381585,"byte_end":381588,"line_start":653,"line_end":653,"column_start":32,"column_end":35},"name":"len","qualname":"::parser::range::length_prefix::len","value":"P","parent":{"krate":0,"index":7716},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":7734},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":381561,"byte_end":381574,"line_start":653,"line_end":653,"column_start":8,"column_end":21},"name":"length_prefix","qualname":"::parser::range::length_prefix","value":"pub fn length_prefix<Input, P>(P) -> length_prefix<Input, P> where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, Input: RangeStream, P: Parser<Input>,\nusize: TryFrom<P::Output>, <usize as TryFrom<P::Output>>::Error: StdError +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Takes a parser which parses a `length` then extracts a range of that length and returns it.\n Commonly used in binary formats","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":19233,"byte_end":19242,"line_start":509,"line_end":509,"column_start":9,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":2927},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"repeat","qualname":"::parser::repeat","value":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","parent":null,"children":[{"krate":0,"index":2928},{"krate":0,"index":2929},{"krate":0,"index":2930},{"krate":0,"index":2933},{"krate":0,"index":2936},{"krate":0,"index":2937},{"krate":0,"index":2940},{"krate":0,"index":2941},{"krate":0,"index":2944},{"krate":0,"index":2947},{"krate":0,"index":2950},{"krate":0,"index":2953},{"krate":0,"index":2954},{"krate":0,"index":2957},{"krate":0,"index":2960},{"krate":0,"index":2961},{"krate":0,"index":2963},{"krate":0,"index":2966},{"krate":0,"index":2967},{"krate":0,"index":2968},{"krate":0,"index":2971},{"krate":0,"index":2974},{"krate":0,"index":2977},{"krate":0,"index":2978},{"krate":0,"index":2981},{"krate":0,"index":2984},{"krate":0,"index":2985},{"krate":0,"index":2988},{"krate":0,"index":2991},{"krate":0,"index":2994},{"krate":0,"index":2995},{"krate":0,"index":2998},{"krate":0,"index":3001},{"krate":0,"index":3002},{"krate":0,"index":3004},{"krate":0,"index":3007},{"krate":0,"index":3008},{"krate":0,"index":3011},{"krate":0,"index":3014},{"krate":0,"index":3017},{"krate":0,"index":3018},{"krate":0,"index":3020},{"krate":0,"index":7741},{"krate":0,"index":7748},{"krate":0,"index":7758},{"krate":0,"index":7764},{"krate":0,"index":7770},{"krate":0,"index":7781},{"krate":0,"index":7787},{"krate":0,"index":7794},{"krate":0,"index":7797},{"krate":0,"index":3023},{"krate":0,"index":3028},{"krate":0,"index":3033},{"krate":0,"index":3035},{"krate":0,"index":3046},{"krate":0,"index":7803},{"krate":0,"index":7810},{"krate":0,"index":7821},{"krate":0,"index":3050},{"krate":0,"index":3062},{"krate":0,"index":3072},{"krate":0,"index":3087},{"krate":0,"index":7827},{"krate":0,"index":7833},{"krate":0,"index":7836},{"krate":0,"index":3095},{"krate":0,"index":3106},{"krate":0,"index":7842},{"krate":0,"index":7848},{"krate":0,"index":7851},{"krate":0,"index":3110},{"krate":0,"index":3120},{"krate":0,"index":7859},{"krate":0,"index":7861},{"krate":0,"index":3124},{"krate":0,"index":3126},{"krate":0,"index":7863},{"krate":0,"index":7868},{"krate":0,"index":7877},{"krate":0,"index":7882},{"krate":0,"index":7887},{"krate":0,"index":7896},{"krate":0,"index":7901},{"krate":0,"index":7908},{"krate":0,"index":7912},{"krate":0,"index":3130},{"krate":0,"index":3141},{"krate":0,"index":7921},{"krate":0,"index":7928},{"krate":0,"index":7932},{"krate":0,"index":3146},{"krate":0,"index":3158},{"krate":0,"index":7941},{"krate":0,"index":7948},{"krate":0,"index":7952},{"krate":0,"index":3163},{"krate":0,"index":3174},{"krate":0,"index":7959},{"krate":0,"index":7966},{"krate":0,"index":7970},{"krate":0,"index":3179},{"krate":0,"index":3192},{"krate":0,"index":7977},{"krate":0,"index":7983},{"krate":0,"index":7986},{"krate":0,"index":3197},{"krate":0,"index":3206},{"krate":0,"index":7992},{"krate":0,"index":7998},{"krate":0,"index":8001},{"krate":0,"index":3210},{"krate":0,"index":3218},{"krate":0,"index":8005},{"krate":0,"index":8010},{"krate":0,"index":8013},{"krate":0,"index":3222},{"krate":0,"index":3230},{"krate":0,"index":8019},{"krate":0,"index":8024},{"krate":0,"index":8033},{"krate":0,"index":8038},{"krate":0,"index":8045},{"krate":0,"index":8049},{"krate":0,"index":3234},{"krate":0,"index":3243},{"krate":0,"index":8056},{"krate":0,"index":8063},{"krate":0,"index":8073},{"krate":0,"index":8079},{"krate":0,"index":8084},{"krate":0,"index":3248},{"krate":0,"index":3255},{"krate":0,"index":3266},{"krate":0,"index":3270},{"krate":0,"index":3277},{"krate":0,"index":3292}],"decl_id":null,"docs":" Combinators which take one or more parsers and applies them repeatedly.\n","sig":null,"attributes":[{"value":"/ Combinators which take one or more parsers and applies them repeatedly.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":384888,"byte_end":384963,"line_start":1,"line_end":1,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":7741},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":385492,"byte_end":385497,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Count","qualname":"::parser::repeat::Count","value":"Count { count, parser }","parent":null,"children":[{"krate":0,"index":7745},{"krate":0,"index":7746},{"krate":0,"index":7747}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7745},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":385902,"byte_end":385907,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"name":"count","qualname":"::parser::repeat::Count::count","value":"usize","parent":{"krate":0,"index":7741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7746},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":385916,"byte_end":385922,"line_start":39,"line_end":39,"column_start":41,"column_end":47},"name":"parser","qualname":"::parser::repeat::Count::parser","value":"P","parent":{"krate":0,"index":7741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":7758},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":385883,"byte_end":385888,"line_start":39,"line_end":39,"column_start":8,"column_end":13},"name":"count","qualname":"::parser::repeat::count","value":"pub fn count<F, Input, P>(usize, P) -> Count<F, Input, P> where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, Input: Stream, P: Parser<Input>,\nF: Extend<P::Output> + Default","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` from zero up to `count` times.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":19233,"byte_end":19242,"line_start":509,"line_end":509,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":7764},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":386095,"byte_end":386104,"line_start":51,"line_end":51,"column_start":16,"column_end":25},"name":"SkipCount","qualname":"::parser::repeat::SkipCount","value":"SkipCount { count, parser }","parent":null,"children":[{"krate":0,"index":7767},{"krate":0,"index":7768},{"krate":0,"index":7769}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7767},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":386665,"byte_end":386670,"line_start":66,"line_end":66,"column_start":33,"column_end":38},"name":"count","qualname":"::parser::repeat::SkipCount::count","value":"usize","parent":{"krate":0,"index":7764},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7768},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":386679,"byte_end":386685,"line_start":66,"line_end":66,"column_start":47,"column_end":53},"name":"parser","qualname":"::parser::repeat::SkipCount::parser","value":"P","parent":{"krate":0,"index":7764},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":7781},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":386644,"byte_end":386654,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"skip_count","qualname":"::parser::repeat::skip_count","value":"pub fn skip_count<Input, P>(usize, P) -> SkipCount<Input, P> where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, P: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` from zero up to `count` times skipping the output of `parser`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":19233,"byte_end":19242,"line_start":509,"line_end":509,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":7787},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":386873,"byte_end":386884,"line_start":76,"line_end":76,"column_start":12,"column_end":23},"name":"CountMinMax","qualname":"::parser::repeat::CountMinMax","value":"CountMinMax {  }","parent":null,"children":[{"krate":0,"index":7790},{"krate":0,"index":7791},{"krate":0,"index":7792},{"krate":0,"index":7793}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3046},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":389633,"byte_end":389646,"line_start":186,"line_end":186,"column_start":8,"column_end":21},"name":"count_min_max","qualname":"::parser::repeat::count_min_max","value":"pub fn count_min_max<F, Input, P>(usize, usize, P) -> CountMinMax<F, P> where\nInput: Stream, P: Parser<Input>, F: Extend<P::Output> + Default","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` from `min` to `max` times (including `min` and `max`).","sig":null,"attributes":[{"value":"/ Parses `parser` from `min` to `max` times (including `min` and `max`).","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":389123,"byte_end":389197,"line_start":167,"line_end":167,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":389198,"byte_end":389201,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":389202,"byte_end":389209,"line_start":169,"line_end":169,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":389210,"byte_end":389237,"line_start":170,"line_end":170,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":389238,"byte_end":389259,"line_start":171,"line_end":171,"column_start":1,"column_end":22}},{"value":"/ # use combine::stream::easy::{Error, Info};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":389260,"byte_end":389307,"line_start":172,"line_end":172,"column_start":1,"column_end":48}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":389308,"byte_end":389325,"line_start":173,"line_end":173,"column_start":1,"column_end":18}},{"value":"/ let mut parser = count_min_max(2, 2, token(b'a'));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":389326,"byte_end":389380,"line_start":174,"line_end":174,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":389381,"byte_end":389384,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ let result = parser.parse(&b\"aaab\"[..]);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":389385,"byte_end":389429,"line_start":176,"line_end":176,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(result, Ok((b\"aa\"[..].to_owned(), &b\"ab\"[..])));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":389430,"byte_end":389493,"line_start":177,"line_end":177,"column_start":1,"column_end":64}},{"value":"/ let result = parser.parse(&b\"ab\"[..]);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":389494,"byte_end":389536,"line_start":178,"line_end":178,"column_start":1,"column_end":43}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":389537,"byte_end":389566,"line_start":179,"line_end":179,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":389567,"byte_end":389574,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":389575,"byte_end":389582,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":389583,"byte_end":389586,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":389587,"byte_end":389599,"line_start":183,"line_end":183,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":389600,"byte_end":389603,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ If `min` > `max`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":389604,"byte_end":389625,"line_start":185,"line_end":185,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":7803},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":389951,"byte_end":389966,"line_start":203,"line_end":203,"column_start":16,"column_end":31},"name":"SkipCountMinMax","qualname":"::parser::repeat::SkipCountMinMax","value":"SkipCountMinMax { min, max, parser }","parent":null,"children":[{"krate":0,"index":7806},{"krate":0,"index":7807},{"krate":0,"index":7808},{"krate":0,"index":7809}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7806},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":390665,"byte_end":390668,"line_start":224,"line_end":224,"column_start":41,"column_end":44},"name":"min","qualname":"::parser::repeat::SkipCountMinMax::min","value":"usize","parent":{"krate":0,"index":7803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7807},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":390677,"byte_end":390680,"line_start":224,"line_end":224,"column_start":53,"column_end":56},"name":"max","qualname":"::parser::repeat::SkipCountMinMax::max","value":"usize","parent":{"krate":0,"index":7803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7808},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":390689,"byte_end":390695,"line_start":224,"line_end":224,"column_start":65,"column_end":71},"name":"parser","qualname":"::parser::repeat::SkipCountMinMax::parser","value":"P","parent":{"krate":0,"index":7803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":7821},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":390636,"byte_end":390654,"line_start":224,"line_end":224,"column_start":12,"column_end":30},"name":"skip_count_min_max","qualname":"::parser::repeat::skip_count_min_max","value":"pub fn skip_count_min_max<Input, P>(usize, usize, P)\n-> SkipCountMinMax<Input, P> where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, P: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` from `min` to `max` times (including `min` and `max`)\n skipping the output of `parser`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":19233,"byte_end":19242,"line_start":509,"line_end":509,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3050},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":390866,"byte_end":390870,"line_start":233,"line_end":233,"column_start":12,"column_end":16},"name":"Iter","qualname":"::parser::repeat::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":3056},{"krate":0,"index":3057},{"krate":0,"index":3058},{"krate":0,"index":3059},{"krate":0,"index":3060},{"krate":0,"index":3061}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3078},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":391294,"byte_end":391297,"line_start":258,"line_end":258,"column_start":12,"column_end":15},"name":"new","qualname":"<Iter>::new","value":"pub fn new(P, M, &'a mut Input, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3079},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":391702,"byte_end":391713,"line_start":270,"line_end":270,"column_start":12,"column_end":23},"name":"into_result","qualname":"<Iter>::into_result","value":"pub fn into_result<O>(Self, O) -> StdParseResult<O, Input>","parent":null,"children":[],"decl_id":null,"docs":" Converts the iterator to a `ParseResult`, returning `Ok` if the parsing so far has be done\n without any errors which committed data.\n","sig":null,"attributes":[{"value":"/ Converts the iterator to a `ParseResult`, returning `Ok` if the parsing so far has be done","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":391547,"byte_end":391641,"line_start":268,"line_end":268,"column_start":5,"column_end":99}},{"value":"/ without any errors which committed data.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":391646,"byte_end":391690,"line_start":269,"line_end":269,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":7827},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":394799,"byte_end":394803,"line_start":378,"line_end":378,"column_start":12,"column_end":16},"name":"Many","qualname":"::parser::repeat::Many","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3106},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":396641,"byte_end":396645,"line_start":441,"line_end":441,"column_start":8,"column_end":12},"name":"many","qualname":"::parser::repeat::many","value":"pub fn many<F, Input, P>(P) -> Many<F, P> where Input: Stream,\nP: Parser<Input>, F: Extend<P::Output> + Default","parent":null,"children":[],"decl_id":null,"docs":" Parses `p` zero or more times returning a collection with the values from `p`.","sig":null,"attributes":[{"value":"/ Parses `p` zero or more times returning a collection with the values from `p`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":395874,"byte_end":395956,"line_start":421,"line_end":421,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":395957,"byte_end":395960,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ If the returned collection cannot be inferred type annotations must be supplied, either by","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":395961,"byte_end":396055,"line_start":423,"line_end":423,"column_start":1,"column_end":95}},{"value":"/ annotating the resulting type binding `let collection: Vec<_> = ...` or by specializing when","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":396056,"byte_end":396152,"line_start":424,"line_end":424,"column_start":1,"column_end":97}},{"value":"/ calling many, `many::<Vec<_>, _, _>(...)`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":396153,"byte_end":396199,"line_start":425,"line_end":425,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":396200,"byte_end":396203,"line_start":426,"line_end":426,"column_start":1,"column_end":4}},{"value":"/ NOTE: If `p` can succeed without consuming any input this may hang forever as `many` will","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":396204,"byte_end":396297,"line_start":427,"line_end":427,"column_start":1,"column_end":94}},{"value":"/ repeatedly use `p` to parse the same location in the input every time","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":396298,"byte_end":396371,"line_start":428,"line_end":428,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":396372,"byte_end":396375,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":396376,"byte_end":396383,"line_start":430,"line_end":430,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":396384,"byte_end":396411,"line_start":431,"line_end":431,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":396412,"byte_end":396433,"line_start":432,"line_end":432,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":396434,"byte_end":396473,"line_start":433,"line_end":433,"column_start":1,"column_end":40}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":396474,"byte_end":396491,"line_start":434,"line_end":434,"column_start":1,"column_end":18}},{"value":"/ let result = many(digit())","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":396492,"byte_end":396522,"line_start":435,"line_end":435,"column_start":1,"column_end":31}},{"value":"/     .parse(\"123A\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":396523,"byte_end":396545,"line_start":436,"line_end":436,"column_start":1,"column_end":23}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":396546,"byte_end":396568,"line_start":437,"line_end":437,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(vec!['1', '2', '3']));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":396569,"byte_end":396617,"line_start":438,"line_end":438,"column_start":1,"column_end":49}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":396618,"byte_end":396625,"line_start":439,"line_end":439,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":396626,"byte_end":396633,"line_start":440,"line_end":440,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7842},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":396826,"byte_end":396831,"line_start":451,"line_end":451,"column_start":12,"column_end":17},"name":"Many1","qualname":"::parser::repeat::Many1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3120},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":399159,"byte_end":399164,"line_start":529,"line_end":529,"column_start":8,"column_end":13},"name":"many1","qualname":"::parser::repeat::many1","value":"pub fn many1<F, Input, P>(P) -> Many1<F, P> where Input: Stream,\nF: Extend<P::Output> + Default, P: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses `p` one or more times returning a collection with the values from `p`.","sig":null,"attributes":[{"value":"/ Parses `p` one or more times returning a collection with the values from `p`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":398414,"byte_end":398495,"line_start":509,"line_end":509,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":398496,"byte_end":398499,"line_start":510,"line_end":510,"column_start":1,"column_end":4}},{"value":"/ If the returned collection cannot be inferred type annotations must be supplied, either by","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":398500,"byte_end":398594,"line_start":511,"line_end":511,"column_start":1,"column_end":95}},{"value":"/ annotating the resulting type binding `let collection: Vec<_> = ...` or by specializing when","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":398595,"byte_end":398691,"line_start":512,"line_end":512,"column_start":1,"column_end":97}},{"value":"/ calling many1 `many1::<Vec<_>, _>(...)`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":398692,"byte_end":398736,"line_start":513,"line_end":513,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":398737,"byte_end":398740,"line_start":514,"line_end":514,"column_start":1,"column_end":4}},{"value":"/ NOTE: If `p` can succeed without consuming any input this may hang forever as `many1` will","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":398741,"byte_end":398835,"line_start":515,"line_end":515,"column_start":1,"column_end":95}},{"value":"/ repeatedly use `p` to parse the same location in the input every time","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":398836,"byte_end":398909,"line_start":516,"line_end":516,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":398910,"byte_end":398913,"line_start":517,"line_end":517,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":398914,"byte_end":398917,"line_start":518,"line_end":518,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":398918,"byte_end":398925,"line_start":519,"line_end":519,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":398926,"byte_end":398953,"line_start":520,"line_end":520,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":398954,"byte_end":398975,"line_start":521,"line_end":521,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":398976,"byte_end":399015,"line_start":522,"line_end":522,"column_start":1,"column_end":40}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":399016,"byte_end":399033,"line_start":523,"line_end":523,"column_start":1,"column_end":18}},{"value":"/ let result = many1::<Vec<_>, _, _>(digit())","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":399034,"byte_end":399081,"line_start":524,"line_end":524,"column_start":1,"column_end":48}},{"value":"/     .parse(\"A123\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":399082,"byte_end":399105,"line_start":525,"line_end":525,"column_start":1,"column_end":24}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":399106,"byte_end":399135,"line_start":526,"line_end":526,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":399136,"byte_end":399143,"line_start":527,"line_end":527,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":399144,"byte_end":399151,"line_start":528,"line_end":528,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7859},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":399386,"byte_end":399390,"line_start":541,"line_end":541,"column_start":12,"column_end":16},"name":"Sink","qualname":"::parser::repeat::Sink","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7863},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":399642,"byte_end":399650,"line_start":559,"line_end":559,"column_start":16,"column_end":24},"name":"SkipMany","qualname":"::parser::repeat::SkipMany","value":"SkipMany { p }","parent":null,"children":[{"krate":0,"index":7866},{"krate":0,"index":7867}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7866},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":400231,"byte_end":400232,"line_start":576,"line_end":576,"column_start":28,"column_end":29},"name":"p","qualname":"::parser::repeat::SkipMany::p","value":"P","parent":{"krate":0,"index":7863},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":7877},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":400211,"byte_end":400220,"line_start":576,"line_end":576,"column_start":8,"column_end":17},"name":"skip_many","qualname":"::parser::repeat::skip_many","value":"pub fn skip_many<Input, P>(P) -> SkipMany<Input, P> where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, P: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses `p` zero or more times ignoring the result.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":19233,"byte_end":19242,"line_start":509,"line_end":509,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":7882},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":400356,"byte_end":400365,"line_start":586,"line_end":586,"column_start":16,"column_end":25},"name":"SkipMany1","qualname":"::parser::repeat::SkipMany1","value":"SkipMany1 { p }","parent":null,"children":[{"krate":0,"index":7885},{"krate":0,"index":7886}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7885},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":400952,"byte_end":400953,"line_start":603,"line_end":603,"column_start":29,"column_end":30},"name":"p","qualname":"::parser::repeat::SkipMany1::p","value":"P","parent":{"krate":0,"index":7882},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":7896},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":400931,"byte_end":400941,"line_start":603,"line_end":603,"column_start":8,"column_end":18},"name":"skip_many1","qualname":"::parser::repeat::skip_many1","value":"pub fn skip_many1<Input, P>(P) -> SkipMany1<Input, P> where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, P: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses `p` one or more times ignoring the result.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":19233,"byte_end":19242,"line_start":509,"line_end":509,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":7901},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":401087,"byte_end":401092,"line_start":613,"line_end":613,"column_start":12,"column_end":17},"name":"SepBy","qualname":"::parser::repeat::SepBy","value":"SepBy {  }","parent":null,"children":[{"krate":0,"index":7905},{"krate":0,"index":7906},{"krate":0,"index":7907}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3141},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":402894,"byte_end":402900,"line_start":673,"line_end":673,"column_start":8,"column_end":14},"name":"sep_by","qualname":"::parser::repeat::sep_by","value":"pub fn sep_by<F, Input, P, S>(P, S) -> SepBy<F, P, S> where Input: Stream,\nF: Extend<P::Output> + Default, P: Parser<Input>, S: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` zero or more time separated by `separator`, returning a collection with the\n values from `p`.","sig":null,"attributes":[{"value":"/ Parses `parser` zero or more time separated by `separator`, returning a collection with the","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":402149,"byte_end":402244,"line_start":654,"line_end":654,"column_start":1,"column_end":96}},{"value":"/ values from `p`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":402245,"byte_end":402265,"line_start":655,"line_end":655,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":402266,"byte_end":402269,"line_start":656,"line_end":656,"column_start":1,"column_end":4}},{"value":"/ If the returned collection cannot be inferred type annotations must be supplied, either by","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":402270,"byte_end":402364,"line_start":657,"line_end":657,"column_start":1,"column_end":95}},{"value":"/ annotating the resulting type binding `let collection: Vec<_> = ...` or by specializing when","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":402365,"byte_end":402461,"line_start":658,"line_end":658,"column_start":1,"column_end":97}},{"value":"/ calling `sep_by`, `sep_by::<Vec<_>, _, _>(...)`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":402462,"byte_end":402514,"line_start":659,"line_end":659,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":402515,"byte_end":402518,"line_start":660,"line_end":660,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":402519,"byte_end":402526,"line_start":661,"line_end":661,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":402527,"byte_end":402554,"line_start":662,"line_end":662,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":402555,"byte_end":402576,"line_start":663,"line_end":663,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":402577,"byte_end":402616,"line_start":664,"line_end":664,"column_start":1,"column_end":40}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":402617,"byte_end":402634,"line_start":665,"line_end":665,"column_start":1,"column_end":18}},{"value":"/ let mut parser = sep_by(digit(), token(','));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":402635,"byte_end":402684,"line_start":666,"line_end":666,"column_start":1,"column_end":50}},{"value":"/ let result_ok = parser.parse(\"1,2,3\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":402685,"byte_end":402727,"line_start":667,"line_end":667,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(result_ok, Ok((vec!['1', '2', '3'], \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":402728,"byte_end":402785,"line_start":668,"line_end":668,"column_start":1,"column_end":58}},{"value":"/ let result_ok2 = parser.parse(\"\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":402786,"byte_end":402824,"line_start":669,"line_end":669,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(result_ok2, Ok((vec![], \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":402825,"byte_end":402870,"line_start":670,"line_end":670,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":402871,"byte_end":402878,"line_start":671,"line_end":671,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":402879,"byte_end":402886,"line_start":672,"line_end":672,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7921},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":403187,"byte_end":403193,"line_start":688,"line_end":688,"column_start":12,"column_end":18},"name":"SepBy1","qualname":"::parser::repeat::SepBy1","value":"SepBy1 {  }","parent":null,"children":[{"krate":0,"index":7925},{"krate":0,"index":7926},{"krate":0,"index":7927}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3158},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":406002,"byte_end":406009,"line_start":780,"line_end":780,"column_start":8,"column_end":15},"name":"sep_by1","qualname":"::parser::repeat::sep_by1","value":"pub fn sep_by1<F, Input, P, S>(P, S) -> SepBy1<F, P, S> where Input: Stream,\nF: Extend<P::Output> + Default, P: Parser<Input>, S: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` one or more time separated by `separator`, returning a collection with the\n values from `p`.","sig":null,"attributes":[{"value":"/ Parses `parser` one or more time separated by `separator`, returning a collection with the","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":404863,"byte_end":404957,"line_start":752,"line_end":752,"column_start":1,"column_end":95}},{"value":"/ values from `p`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":404958,"byte_end":404978,"line_start":753,"line_end":753,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":404979,"byte_end":404982,"line_start":754,"line_end":754,"column_start":1,"column_end":4}},{"value":"/ If the returned collection cannot be inferred type annotations must be supplied, either by","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":404983,"byte_end":405077,"line_start":755,"line_end":755,"column_start":1,"column_end":95}},{"value":"/ annotating the resulting type binding `let collection: Vec<_> = ...` or by specializing when","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":405078,"byte_end":405174,"line_start":756,"line_end":756,"column_start":1,"column_end":97}},{"value":"/ calling `sep_by`, `sep_by1::<Vec<_>, _, _>(...)`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":405175,"byte_end":405228,"line_start":757,"line_end":757,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":405229,"byte_end":405232,"line_start":758,"line_end":758,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":405233,"byte_end":405240,"line_start":759,"line_end":759,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":405241,"byte_end":405268,"line_start":760,"line_end":760,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":405269,"byte_end":405290,"line_start":761,"line_end":761,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":405291,"byte_end":405330,"line_start":762,"line_end":762,"column_start":1,"column_end":40}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":405331,"byte_end":405363,"line_start":763,"line_end":763,"column_start":1,"column_end":33}},{"value":"/ # use combine::stream::position::{self, SourcePosition};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":405364,"byte_end":405424,"line_start":764,"line_end":764,"column_start":1,"column_end":61}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":405425,"byte_end":405442,"line_start":765,"line_end":765,"column_start":1,"column_end":18}},{"value":"/ let mut parser = sep_by1(digit(), token(','));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":405443,"byte_end":405493,"line_start":766,"line_end":766,"column_start":1,"column_end":51}},{"value":"/ let result_ok = parser.easy_parse(position::Stream::new(\"1,2,3\"))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":405494,"byte_end":405563,"line_start":767,"line_end":767,"column_start":1,"column_end":70}},{"value":"/                       .map(|(vec, state)| (vec, state.input));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":405564,"byte_end":405630,"line_start":768,"line_end":768,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(result_ok, Ok((vec!['1', '2', '3'], \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":405631,"byte_end":405688,"line_start":769,"line_end":769,"column_start":1,"column_end":58}},{"value":"/ let result_err = parser.easy_parse(position::Stream::new(\"\"));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":405689,"byte_end":405755,"line_start":770,"line_end":770,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(result_err, Err(easy::Errors {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":405756,"byte_end":405801,"line_start":771,"line_end":771,"column_start":1,"column_end":46}},{"value":"/     position: SourcePosition::default(),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":405802,"byte_end":405846,"line_start":772,"line_end":772,"column_start":1,"column_end":45}},{"value":"/     errors: vec![","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":405847,"byte_end":405868,"line_start":773,"line_end":773,"column_start":1,"column_end":22}},{"value":"/         easy::Error::end_of_input(),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":405869,"byte_end":405909,"line_start":774,"line_end":774,"column_start":1,"column_end":41}},{"value":"/         easy::Error::Expected(\"digit\".into())","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":405910,"byte_end":405959,"line_start":775,"line_end":775,"column_start":1,"column_end":50}},{"value":"/     ]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":405960,"byte_end":405969,"line_start":776,"line_end":776,"column_start":1,"column_end":10}},{"value":"/ }));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":405970,"byte_end":405978,"line_start":777,"line_end":777,"column_start":1,"column_end":9}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":405979,"byte_end":405986,"line_start":778,"line_end":778,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":405987,"byte_end":405994,"line_start":779,"line_end":779,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7941},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":406298,"byte_end":406306,"line_start":795,"line_end":795,"column_start":12,"column_end":20},"name":"SepEndBy","qualname":"::parser::repeat::SepEndBy","value":"SepEndBy {  }","parent":null,"children":[{"krate":0,"index":7945},{"krate":0,"index":7946},{"krate":0,"index":7947}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3174},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":408080,"byte_end":408090,"line_start":854,"line_end":854,"column_start":8,"column_end":18},"name":"sep_end_by","qualname":"::parser::repeat::sep_end_by","value":"pub fn sep_end_by<F, Input, P, S>(P, S) -> SepEndBy<F, P, S> where\nInput: Stream, F: Extend<P::Output> + Default, P: Parser<Input>,\nS: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` zero or more times separated and ended by `separator`, returning a collection\n with the values from `p`.","sig":null,"attributes":[{"value":"/ Parses `parser` zero or more times separated and ended by `separator`, returning a collection","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":407302,"byte_end":407399,"line_start":835,"line_end":835,"column_start":1,"column_end":98}},{"value":"/ with the values from `p`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":407400,"byte_end":407429,"line_start":836,"line_end":836,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":407430,"byte_end":407433,"line_start":837,"line_end":837,"column_start":1,"column_end":4}},{"value":"/ If the returned collection cannot be inferred type annotations must be supplied, either by","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":407434,"byte_end":407528,"line_start":838,"line_end":838,"column_start":1,"column_end":95}},{"value":"/ annotating the resulting type binding `let collection: Vec<_> = ...` or by specializing when","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":407529,"byte_end":407625,"line_start":839,"line_end":839,"column_start":1,"column_end":97}},{"value":"/ calling `sep_by`, `sep_by::<Vec<_>, _, _>(...)`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":407626,"byte_end":407677,"line_start":840,"line_end":840,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":407678,"byte_end":407681,"line_start":841,"line_end":841,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":407682,"byte_end":407689,"line_start":842,"line_end":842,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":407690,"byte_end":407717,"line_start":843,"line_end":843,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":407718,"byte_end":407739,"line_start":844,"line_end":844,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":407740,"byte_end":407779,"line_start":845,"line_end":845,"column_start":1,"column_end":40}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":407780,"byte_end":407797,"line_start":846,"line_end":846,"column_start":1,"column_end":18}},{"value":"/ let mut parser = sep_end_by(digit(), token(';'));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":407798,"byte_end":407851,"line_start":847,"line_end":847,"column_start":1,"column_end":54}},{"value":"/ let result_ok = parser.parse(\"1;2;3;\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":407852,"byte_end":407895,"line_start":848,"line_end":848,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(result_ok, Ok((vec!['1', '2', '3'], \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":407896,"byte_end":407953,"line_start":849,"line_end":849,"column_start":1,"column_end":58}},{"value":"/ let result_ok2 = parser.parse(\"1;2;3\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":407954,"byte_end":407997,"line_start":850,"line_end":850,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(result_ok2, Ok((vec!['1', '2', '3'], \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":407998,"byte_end":408056,"line_start":851,"line_end":851,"column_start":1,"column_end":59}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":408057,"byte_end":408064,"line_start":852,"line_end":852,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":408065,"byte_end":408072,"line_start":853,"line_end":853,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7959},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":408383,"byte_end":408392,"line_start":869,"line_end":869,"column_start":12,"column_end":21},"name":"SepEndBy1","qualname":"::parser::repeat::SepEndBy1","value":"SepEndBy1 {  }","parent":null,"children":[{"krate":0,"index":7963},{"krate":0,"index":7964},{"krate":0,"index":7965}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3192},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":411382,"byte_end":411393,"line_start":966,"line_end":966,"column_start":8,"column_end":19},"name":"sep_end_by1","qualname":"::parser::repeat::sep_end_by1","value":"pub fn sep_end_by1<F, Input, P, S>(P, S) -> SepEndBy1<F, P, S> where\nInput: Stream, F: Extend<P::Output> + Default, P: Parser<Input>,\nS: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` one or more times separated and ended by `separator`, returning a collection\n with the values from `p`.","sig":null,"attributes":[{"value":"/ Parses `parser` one or more times separated and ended by `separator`, returning a collection","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":410227,"byte_end":410323,"line_start":938,"line_end":938,"column_start":1,"column_end":97}},{"value":"/ with the values from `p`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":410324,"byte_end":410353,"line_start":939,"line_end":939,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":410354,"byte_end":410357,"line_start":940,"line_end":940,"column_start":1,"column_end":4}},{"value":"/ If the returned collection cannot be inferred type annotations must be","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":410358,"byte_end":410432,"line_start":941,"line_end":941,"column_start":1,"column_end":75}},{"value":"/ supplied, either by annotating the resulting type binding `let collection: Vec<_> = ...` or by","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":410433,"byte_end":410531,"line_start":942,"line_end":942,"column_start":1,"column_end":99}},{"value":"/ specializing when calling `sep_by`, `sep_by1::<Vec<_>, _, _>(...)`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":410532,"byte_end":410603,"line_start":943,"line_end":943,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":410604,"byte_end":410607,"line_start":944,"line_end":944,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":410608,"byte_end":410615,"line_start":945,"line_end":945,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":410616,"byte_end":410643,"line_start":946,"line_end":946,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":410644,"byte_end":410665,"line_start":947,"line_end":947,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":410666,"byte_end":410705,"line_start":948,"line_end":948,"column_start":1,"column_end":40}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":410706,"byte_end":410738,"line_start":949,"line_end":949,"column_start":1,"column_end":33}},{"value":"/ # use combine::stream::position::{self, SourcePosition};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":410739,"byte_end":410799,"line_start":950,"line_end":950,"column_start":1,"column_end":61}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":410800,"byte_end":410817,"line_start":951,"line_end":951,"column_start":1,"column_end":18}},{"value":"/ let mut parser = sep_end_by1(digit(), token(';'));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":410818,"byte_end":410872,"line_start":952,"line_end":952,"column_start":1,"column_end":55}},{"value":"/ let result_ok = parser.easy_parse(position::Stream::new(\"1;2;3;\"))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":410873,"byte_end":410943,"line_start":953,"line_end":953,"column_start":1,"column_end":71}},{"value":"/                       .map(|(vec, state)| (vec, state.input));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":410944,"byte_end":411010,"line_start":954,"line_end":954,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(result_ok, Ok((vec!['1', '2', '3'], \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":411011,"byte_end":411068,"line_start":955,"line_end":955,"column_start":1,"column_end":58}},{"value":"/ let result_err = parser.easy_parse(position::Stream::new(\"\"));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":411069,"byte_end":411135,"line_start":956,"line_end":956,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(result_err, Err(easy::Errors {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":411136,"byte_end":411181,"line_start":957,"line_end":957,"column_start":1,"column_end":46}},{"value":"/     position: SourcePosition::default(),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":411182,"byte_end":411226,"line_start":958,"line_end":958,"column_start":1,"column_end":45}},{"value":"/     errors: vec![","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":411227,"byte_end":411248,"line_start":959,"line_end":959,"column_start":1,"column_end":22}},{"value":"/         easy::Error::end_of_input(),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":411249,"byte_end":411289,"line_start":960,"line_end":960,"column_start":1,"column_end":41}},{"value":"/         easy::Error::Expected(\"digit\".into())","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":411290,"byte_end":411339,"line_start":961,"line_end":961,"column_start":1,"column_end":50}},{"value":"/     ]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":411340,"byte_end":411349,"line_start":962,"line_end":962,"column_start":1,"column_end":10}},{"value":"/ }));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":411350,"byte_end":411358,"line_start":963,"line_end":963,"column_start":1,"column_end":9}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":411359,"byte_end":411366,"line_start":964,"line_end":964,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":411367,"byte_end":411374,"line_start":965,"line_end":965,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7977},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":411688,"byte_end":411695,"line_start":981,"line_end":981,"column_start":12,"column_end":19},"name":"Chainl1","qualname":"::parser::repeat::Chainl1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3206},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":414061,"byte_end":414068,"line_start":1060,"line_end":1060,"column_start":8,"column_end":15},"name":"chainl1","qualname":"::parser::repeat::chainl1","value":"pub fn chainl1<Input, P, Op>(P, Op) -> Chainl1<P, Op> where Input: Stream,\nP: Parser<Input>, Op: Parser<Input>, Op::Output: FnOnce(P::Output, P::Output)\n-> P::Output","parent":null,"children":[],"decl_id":null,"docs":" Parses `p` 1 or more times separated by `op`. The value returned is the one produced by the\n left associative application of the function returned by the parser `op`.","sig":null,"attributes":[{"value":"/ Parses `p` 1 or more times separated by `op`. The value returned is the one produced by the","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":413526,"byte_end":413621,"line_start":1046,"line_end":1046,"column_start":1,"column_end":96}},{"value":"/ left associative application of the function returned by the parser `op`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":413622,"byte_end":413699,"line_start":1047,"line_end":1047,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":413700,"byte_end":413703,"line_start":1048,"line_end":1048,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":413704,"byte_end":413711,"line_start":1049,"line_end":1049,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":413712,"byte_end":413739,"line_start":1050,"line_end":1050,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":413740,"byte_end":413761,"line_start":1051,"line_end":1051,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":413762,"byte_end":413801,"line_start":1052,"line_end":1052,"column_start":1,"column_end":40}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":413802,"byte_end":413819,"line_start":1053,"line_end":1053,"column_start":1,"column_end":18}},{"value":"/ let number = digit().map(|c: char| c.to_digit(10).unwrap());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":413820,"byte_end":413884,"line_start":1054,"line_end":1054,"column_start":1,"column_end":65}},{"value":"/ let sub = token('-').map(|_| |l: u32, r: u32| l - r);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":413885,"byte_end":413942,"line_start":1055,"line_end":1055,"column_start":1,"column_end":58}},{"value":"/ let mut parser = chainl1(number, sub);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":413943,"byte_end":413985,"line_start":1056,"line_end":1056,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(parser.parse(\"9-3-5\"), Ok((1, \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":413986,"byte_end":414037,"line_start":1057,"line_end":1057,"column_start":1,"column_end":52}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":414038,"byte_end":414045,"line_start":1058,"line_end":1058,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":414046,"byte_end":414053,"line_start":1059,"line_end":1059,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7992},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":414312,"byte_end":414319,"line_start":1071,"line_end":1071,"column_start":12,"column_end":19},"name":"Chainr1","qualname":"::parser::repeat::Chainr1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3218},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":416442,"byte_end":416449,"line_start":1132,"line_end":1132,"column_start":8,"column_end":15},"name":"chainr1","qualname":"::parser::repeat::chainr1","value":"pub fn chainr1<Input, P, Op>(P, Op) -> Chainr1<P, Op> where Input: Stream,\nP: Parser<Input>, Op: Parser<Input>, Op::Output: FnOnce(P::Output, P::Output)\n-> P::Output","parent":null,"children":[],"decl_id":null,"docs":" Parses `p` one or more times separated by `op`. The value returned is the one produced by the\n right associative application of the function returned by `op`.","sig":null,"attributes":[{"value":"/ Parses `p` one or more times separated by `op`. The value returned is the one produced by the","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":415908,"byte_end":416005,"line_start":1118,"line_end":1118,"column_start":1,"column_end":98}},{"value":"/ right associative application of the function returned by `op`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":416006,"byte_end":416073,"line_start":1119,"line_end":1119,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":416074,"byte_end":416077,"line_start":1120,"line_end":1120,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":416078,"byte_end":416085,"line_start":1121,"line_end":1121,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":416086,"byte_end":416113,"line_start":1122,"line_end":1122,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":416114,"byte_end":416135,"line_start":1123,"line_end":1123,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":416136,"byte_end":416175,"line_start":1124,"line_end":1124,"column_start":1,"column_end":40}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":416176,"byte_end":416193,"line_start":1125,"line_end":1125,"column_start":1,"column_end":18}},{"value":"/ let number = digit().map(|c: char| c.to_digit(10).unwrap());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":416194,"byte_end":416258,"line_start":1126,"line_end":1126,"column_start":1,"column_end":65}},{"value":"/ let pow = token('^').map(|_| |l: u32, r: u32| l.pow(r));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":416259,"byte_end":416319,"line_start":1127,"line_end":1127,"column_start":1,"column_end":61}},{"value":"/ let mut parser = chainr1(number, pow);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":416320,"byte_end":416362,"line_start":1128,"line_end":1128,"column_start":1,"column_end":43}},{"value":"/     assert_eq!(parser.parse(\"2^3^2\"), Ok((512, \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":416363,"byte_end":416420,"line_start":1129,"line_end":1129,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":416421,"byte_end":416426,"line_start":1130,"line_end":1130,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":416427,"byte_end":416434,"line_start":1131,"line_end":1131,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8005},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":416693,"byte_end":416702,"line_start":1143,"line_end":1143,"column_start":12,"column_end":21},"name":"TakeUntil","qualname":"::parser::repeat::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":8008},{"krate":0,"index":8009}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3230},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":419299,"byte_end":419309,"line_start":1217,"line_end":1217,"column_start":8,"column_end":18},"name":"take_until","qualname":"::parser::repeat::take_until","value":"pub fn take_until<F, Input, P>(P) -> TakeUntil<F, P> where Input: Stream,\nF: Extend<<Input as StreamOnce>::Token> + Default, P: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Takes input until `end` is encountered or `end` indicates that it has committed input before\n failing (`attempt` can be used to make it look like it has not committed any input)","sig":null,"attributes":[{"value":"/ Takes input until `end` is encountered or `end` indicates that it has committed input before","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":418256,"byte_end":418352,"line_start":1194,"line_end":1194,"column_start":1,"column_end":97}},{"value":"/ failing (`attempt` can be used to make it look like it has not committed any input)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":418353,"byte_end":418440,"line_start":1195,"line_end":1195,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":418441,"byte_end":418444,"line_start":1196,"line_end":1196,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":418445,"byte_end":418452,"line_start":1197,"line_end":1197,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":418453,"byte_end":418480,"line_start":1198,"line_end":1198,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":418481,"byte_end":418502,"line_start":1199,"line_end":1199,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":418503,"byte_end":418535,"line_start":1200,"line_end":1200,"column_start":1,"column_end":33}},{"value":"/ # use combine::parser::byte;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":418536,"byte_end":418568,"line_start":1201,"line_end":1201,"column_start":1,"column_end":33}},{"value":"/ # use combine::parser::combinator::attempt;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":418569,"byte_end":418616,"line_start":1202,"line_end":1202,"column_start":1,"column_end":48}},{"value":"/ # use combine::parser::repeat::take_until;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":418617,"byte_end":418663,"line_start":1203,"line_end":1203,"column_start":1,"column_end":47}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":418664,"byte_end":418681,"line_start":1204,"line_end":1204,"column_start":1,"column_end":18}},{"value":"/ let mut char_parser = take_until(char::digit());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":418682,"byte_end":418734,"line_start":1205,"line_end":1205,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(char_parser.parse(\"abc123\"), Ok((\"abc\".to_string(), \"123\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":418735,"byte_end":418811,"line_start":1206,"line_end":1206,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":418812,"byte_end":418815,"line_start":1207,"line_end":1207,"column_start":1,"column_end":4}},{"value":"/ let mut byte_parser = take_until(byte::bytes(&b\"TAG\"[..]));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":418816,"byte_end":418879,"line_start":1208,"line_end":1208,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(byte_parser.parse(&b\"123TAG\"[..]), Ok((b\"123\".to_vec(), &b\"TAG\"[..])));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":418880,"byte_end":418966,"line_start":1209,"line_end":1209,"column_start":1,"column_end":87}},{"value":"/ assert!(byte_parser.parse(&b\"123TATAG\"[..]).is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":418967,"byte_end":419025,"line_start":1210,"line_end":1210,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":419026,"byte_end":419029,"line_start":1211,"line_end":1211,"column_start":1,"column_end":4}},{"value":"/ // `attempt` must be used if the `end` should be consume input before failing","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":419030,"byte_end":419111,"line_start":1212,"line_end":1212,"column_start":1,"column_end":82}},{"value":"/ let mut byte_parser = take_until(attempt(byte::bytes(&b\"TAG\"[..])));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":419112,"byte_end":419184,"line_start":1213,"line_end":1213,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(byte_parser.parse(&b\"123TATAG\"[..]), Ok((b\"123TA\".to_vec(), &b\"TAG\"[..])));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":419185,"byte_end":419275,"line_start":1214,"line_end":1214,"column_start":1,"column_end":91}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":419276,"byte_end":419283,"line_start":1215,"line_end":1215,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":419284,"byte_end":419291,"line_start":1216,"line_end":1216,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8019},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":419547,"byte_end":419556,"line_start":1230,"line_end":1230,"column_start":16,"column_end":25},"name":"SkipUntil","qualname":"::parser::repeat::SkipUntil","value":"SkipUntil { end }","parent":null,"children":[{"krate":0,"index":8022},{"krate":0,"index":8023}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8022},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":420773,"byte_end":420776,"line_start":1255,"line_end":1255,"column_start":33,"column_end":36},"name":"end","qualname":"::parser::repeat::SkipUntil::end","value":"P","parent":{"krate":0,"index":8019},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8033},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":420752,"byte_end":420762,"line_start":1255,"line_end":1255,"column_start":12,"column_end":22},"name":"skip_until","qualname":"::parser::repeat::skip_until","value":"pub fn skip_until<Input, P>(P) -> SkipUntil<Input, P> where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, P: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Skips input until `end` is encountered or `end` indicates that it has committed input before\n failing (`attempt` can be used to make it look like it has not committed any input)","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":19233,"byte_end":19242,"line_start":509,"line_end":509,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":8038},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":420941,"byte_end":420952,"line_start":1265,"line_end":1265,"column_start":12,"column_end":23},"name":"RepeatUntil","qualname":"::parser::repeat::RepeatUntil","value":"RepeatUntil {  }","parent":null,"children":[{"krate":0,"index":8042},{"krate":0,"index":8043},{"krate":0,"index":8044}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3243},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":422888,"byte_end":422900,"line_start":1325,"line_end":1325,"column_start":8,"column_end":20},"name":"repeat_until","qualname":"::parser::repeat::repeat_until","value":"pub fn repeat_until<F, Input, P, E>(P, E) -> RepeatUntil<F, P, E> where\nInput: Stream, F: Extend<P::Output> + Default, P: Parser<Input>,\nE: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8056},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":423178,"byte_end":423193,"line_start":1340,"line_end":1340,"column_start":16,"column_end":31},"name":"SkipRepeatUntil","qualname":"::parser::repeat::SkipRepeatUntil","value":"SkipRepeatUntil { parser, end }","parent":null,"children":[{"krate":0,"index":8060},{"krate":0,"index":8061},{"krate":0,"index":8062}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8060},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":424511,"byte_end":424517,"line_start":1366,"line_end":1366,"column_start":43,"column_end":49},"name":"parser","qualname":"::parser::repeat::SkipRepeatUntil::parser","value":"P","parent":{"krate":0,"index":8056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8061},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":424522,"byte_end":424525,"line_start":1366,"line_end":1366,"column_start":54,"column_end":57},"name":"end","qualname":"::parser::repeat::SkipRepeatUntil::end","value":"E","parent":{"krate":0,"index":8056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8073},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":424480,"byte_end":424497,"line_start":1366,"line_end":1366,"column_start":12,"column_end":29},"name":"repeat_skip_until","qualname":"::parser::repeat::repeat_skip_until","value":"pub fn repeat_skip_until<Input, P, E>(P, E) -> SkipRepeatUntil<Input, P, E>\nwhere\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, P: Parser<Input>, E: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Skips input until `end` is encountered or `end` indicates that it has committed input before\n failing (`attempt` can be used to continue skipping even if `end` has committed input)","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":19233,"byte_end":19242,"line_start":509,"line_end":509,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":8079},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":424725,"byte_end":424737,"line_start":1377,"line_end":1377,"column_start":12,"column_end":24},"name":"EscapedState","qualname":"::parser::repeat::EscapedState","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3248},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":424778,"byte_end":424785,"line_start":1379,"line_end":1379,"column_start":12,"column_end":19},"name":"Escaped","qualname":"::parser::repeat::Escaped","value":"Escaped {  }","parent":null,"children":[{"krate":0,"index":3252},{"krate":0,"index":3253},{"krate":0,"index":3254}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3266},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":428333,"byte_end":428340,"line_start":1472,"line_end":1472,"column_start":8,"column_end":15},"name":"escaped","qualname":"::parser::repeat::escaped","value":"pub fn escaped<Input, P, Q>(P, <Input as StreamOnce>::Token, Q)\n-> Escaped<P, Q, Input::Token> where Input: Stream, P: Parser<Input>,\n<Input as StreamOnce>::Token: PartialEq, Q: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses an escaped string by first applying `parser` which accept the normal characters which do\n not need escaping. Once `parser` can not consume any more input it checks if the next token\n is `escape`. If it is then `escape_parser` is used to parse the escaped character and then\n resumes parsing using `parser`. If `escape` was not found then the parser finishes\n successfully.","sig":null,"attributes":[{"value":"/ Parses an escaped string by first applying `parser` which accept the normal characters which do","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":427223,"byte_end":427322,"line_start":1448,"line_end":1448,"column_start":1,"column_end":100}},{"value":"/ not need escaping. Once `parser` can not consume any more input it checks if the next token","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":427323,"byte_end":427418,"line_start":1449,"line_end":1449,"column_start":1,"column_end":96}},{"value":"/ is `escape`. If it is then `escape_parser` is used to parse the escaped character and then","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":427419,"byte_end":427513,"line_start":1450,"line_end":1450,"column_start":1,"column_end":95}},{"value":"/ resumes parsing using `parser`. If `escape` was not found then the parser finishes","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":427514,"byte_end":427600,"line_start":1451,"line_end":1451,"column_start":1,"column_end":87}},{"value":"/ successfully.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":427601,"byte_end":427618,"line_start":1452,"line_end":1452,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":427619,"byte_end":427622,"line_start":1453,"line_end":1453,"column_start":1,"column_end":4}},{"value":"/ This returns `()` since there isn't a good way to collect the output of the parsers so it is","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":427623,"byte_end":427719,"line_start":1454,"line_end":1454,"column_start":1,"column_end":97}},{"value":"/ best paired with one of the `recognize` parsers.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":427720,"byte_end":427772,"line_start":1455,"line_end":1455,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":427773,"byte_end":427776,"line_start":1456,"line_end":1456,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":427777,"byte_end":427784,"line_start":1457,"line_end":1457,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":427785,"byte_end":427812,"line_start":1458,"line_end":1458,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":427813,"byte_end":427834,"line_start":1459,"line_end":1459,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::repeat::escaped;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":427835,"byte_end":427878,"line_start":1460,"line_end":1460,"column_start":1,"column_end":44}},{"value":"/ # use combine::parser::char;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":427879,"byte_end":427911,"line_start":1461,"line_end":1461,"column_start":1,"column_end":33}},{"value":"/ # use combine::parser::range::{recognize, take_while1};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":427912,"byte_end":427971,"line_start":1462,"line_end":1462,"column_start":1,"column_end":60}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":427972,"byte_end":427989,"line_start":1463,"line_end":1463,"column_start":1,"column_end":18}},{"value":"/     let mut parser = recognize(","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":427990,"byte_end":428025,"line_start":1464,"line_end":1464,"column_start":1,"column_end":36}},{"value":"/         escaped(take_while1(|c| c != '\"' && c != '\\\\'), '\\\\', one_of(r#\"nr\"\\\"#.chars()))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":428026,"byte_end":428118,"line_start":1465,"line_end":1465,"column_start":1,"column_end":93}},{"value":"/     );","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":428119,"byte_end":428129,"line_start":1466,"line_end":1466,"column_start":1,"column_end":11}},{"value":"/     assert_eq!(parser.parse(r#\"ab\\\"12\\n\\rc\"\"#), Ok((r#\"ab\\\"12\\n\\rc\"#, r#\"\"\"#)));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":428130,"byte_end":428214,"line_start":1467,"line_end":1467,"column_start":1,"column_end":85}},{"value":"/     assert!(parser.parse(r#\"\\\"#).is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":428215,"byte_end":428262,"line_start":1468,"line_end":1468,"column_start":1,"column_end":48}},{"value":"/     assert!(parser.parse(r#\"\\a\"#).is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":428263,"byte_end":428311,"line_start":1469,"line_end":1469,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":428312,"byte_end":428317,"line_start":1470,"line_end":1470,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":428318,"byte_end":428325,"line_start":1471,"line_end":1471,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3270},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":428672,"byte_end":428679,"line_start":1490,"line_end":1490,"column_start":12,"column_end":19},"name":"Iterate","qualname":"::parser::repeat::Iterate","value":"Iterate {  }","parent":null,"children":[{"krate":0,"index":3274},{"krate":0,"index":3275},{"krate":0,"index":3276}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3292},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":431905,"byte_end":431912,"line_start":1607,"line_end":1607,"column_start":8,"column_end":15},"name":"iterate","qualname":"::parser::repeat::iterate","value":"pub fn iterate<F, J, P, I, Q>(J, P) -> Iterate<F, J, P> where\nP: FnMut(&J::Item, &mut I) -> Q, Q: Parser<I>, I: Stream, J: IntoIterator +\nClone, F: Extend<Q::Output> + Default","parent":null,"children":[],"decl_id":null,"docs":"\n ```\n # use combine::parser::repeat::{count_min_max, iterate};\n # use combine::*;","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":431615,"byte_end":431618,"line_start":1597,"line_end":1597,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":431619,"byte_end":431626,"line_start":1598,"line_end":1598,"column_start":1,"column_end":8}},{"value":"/ # use combine::parser::repeat::{count_min_max, iterate};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":431627,"byte_end":431687,"line_start":1599,"line_end":1599,"column_start":1,"column_end":61}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":431688,"byte_end":431709,"line_start":1600,"line_end":1600,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":431710,"byte_end":431713,"line_start":1601,"line_end":1601,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":431714,"byte_end":431729,"line_start":1602,"line_end":1602,"column_start":1,"column_end":16}},{"value":"/     iterate(0..3, |&i, _| count_min_max(i, i, any())).parse(\"abbccc\"),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":431730,"byte_end":431804,"line_start":1603,"line_end":1603,"column_start":1,"column_end":75}},{"value":"/     Ok((vec![\"\".to_string(), \"a\".to_string(), \"bb\".to_string()], \"ccc\")),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":431805,"byte_end":431882,"line_start":1604,"line_end":1604,"column_start":1,"column_end":78}},{"value":"/ );","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":431883,"byte_end":431889,"line_start":1605,"line_end":1605,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":431890,"byte_end":431897,"line_start":1606,"line_end":1606,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3298},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sequence","qualname":"::parser::sequence","value":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","parent":null,"children":[{"krate":0,"index":3299},{"krate":0,"index":3300},{"krate":0,"index":3301},{"krate":0,"index":3304},{"krate":0,"index":3305},{"krate":0,"index":3308},{"krate":0,"index":3309},{"krate":0,"index":3312},{"krate":0,"index":3315},{"krate":0,"index":3316},{"krate":0,"index":3318},{"krate":0,"index":3319},{"krate":0,"index":3320},{"krate":0,"index":3323},{"krate":0,"index":3326},{"krate":0,"index":3329},{"krate":0,"index":3332},{"krate":0,"index":3333},{"krate":0,"index":3335},{"krate":0,"index":3338},{"krate":0,"index":3341},{"krate":0,"index":3346},{"krate":0,"index":3351},{"krate":0,"index":3355},{"krate":0,"index":8106},{"krate":0,"index":8111},{"krate":0,"index":8090},{"krate":0,"index":8094},{"krate":0,"index":8135},{"krate":0,"index":8142},{"krate":0,"index":8117},{"krate":0,"index":8122},{"krate":0,"index":8170},{"krate":0,"index":8179},{"krate":0,"index":8150},{"krate":0,"index":8156},{"krate":0,"index":8211},{"krate":0,"index":8222},{"krate":0,"index":8189},{"krate":0,"index":8196},{"krate":0,"index":8258},{"krate":0,"index":8271},{"krate":0,"index":8234},{"krate":0,"index":8242},{"krate":0,"index":8311},{"krate":0,"index":8326},{"krate":0,"index":8285},{"krate":0,"index":8294},{"krate":0,"index":8370},{"krate":0,"index":8387},{"krate":0,"index":8342},{"krate":0,"index":8352},{"krate":0,"index":8435},{"krate":0,"index":8454},{"krate":0,"index":8405},{"krate":0,"index":8416},{"krate":0,"index":8506},{"krate":0,"index":8527},{"krate":0,"index":8474},{"krate":0,"index":8486},{"krate":0,"index":8583},{"krate":0,"index":8606},{"krate":0,"index":8549},{"krate":0,"index":8562},{"krate":0,"index":8666},{"krate":0,"index":8691},{"krate":0,"index":8630},{"krate":0,"index":8644},{"krate":0,"index":8755},{"krate":0,"index":8782},{"krate":0,"index":8717},{"krate":0,"index":8732},{"krate":0,"index":8850},{"krate":0,"index":8879},{"krate":0,"index":8810},{"krate":0,"index":8826},{"krate":0,"index":8951},{"krate":0,"index":8982},{"krate":0,"index":8909},{"krate":0,"index":8926},{"krate":0,"index":9058},{"krate":0,"index":9091},{"krate":0,"index":9014},{"krate":0,"index":9032},{"krate":0,"index":9171},{"krate":0,"index":9206},{"krate":0,"index":9125},{"krate":0,"index":9144},{"krate":0,"index":9290},{"krate":0,"index":9327},{"krate":0,"index":9242},{"krate":0,"index":9262},{"krate":0,"index":9415},{"krate":0,"index":9454},{"krate":0,"index":9365},{"krate":0,"index":9386},{"krate":0,"index":9546},{"krate":0,"index":9587},{"krate":0,"index":9494},{"krate":0,"index":9516},{"krate":0,"index":9683},{"krate":0,"index":9726},{"krate":0,"index":9629},{"krate":0,"index":9652},{"krate":0,"index":9770},{"krate":0,"index":9775},{"krate":0,"index":9778},{"krate":0,"index":3367},{"krate":0,"index":3378},{"krate":0,"index":9787},{"krate":0,"index":9792},{"krate":0,"index":9795},{"krate":0,"index":3382},{"krate":0,"index":3391},{"krate":0,"index":9828},{"krate":0,"index":9837},{"krate":0,"index":9842},{"krate":0,"index":9804},{"krate":0,"index":9823},{"krate":0,"index":9854},{"krate":0,"index":9860},{"krate":0,"index":9863},{"krate":0,"index":3395},{"krate":0,"index":3405},{"krate":0,"index":9869},{"krate":0,"index":9875},{"krate":0,"index":9878},{"krate":0,"index":3410},{"krate":0,"index":3420},{"krate":0,"index":9884},{"krate":0,"index":9890},{"krate":0,"index":9893},{"krate":0,"index":3425},{"krate":0,"index":3435}],"decl_id":null,"docs":" Combinators which take multiple parsers and applies them one after another.\n","sig":null,"attributes":[{"value":"/ Combinators which take multiple parsers and applies them one after another.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":432202,"byte_end":432281,"line_start":1,"line_end":1,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":3346},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":432964,"byte_end":432977,"line_start":35,"line_end":35,"column_start":12,"column_end":25},"name":"SequenceState","qualname":"::parser::sequence::SequenceState","value":"SequenceState { value, state }","parent":null,"children":[{"krate":0,"index":3349},{"krate":0,"index":3350}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3349},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":432994,"byte_end":432999,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"name":"value","qualname":"::parser::sequence::SequenceState::value","value":"std::option::Option<T>","parent":{"krate":0,"index":3346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3350},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":433020,"byte_end":433025,"line_start":37,"line_end":37,"column_start":9,"column_end":14},"name":"state","qualname":"::parser::sequence::SequenceState::state","value":"U","parent":{"krate":0,"index":3346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8106},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442711,"byte_end":442724,"line_start":285,"line_end":285,"column_start":15,"column_end":28},"name":"PartialState1","qualname":"::parser::sequence::PartialState1","value":"PartialState1 { A }","parent":null,"children":[{"krate":0,"index":8108},{"krate":0,"index":8109},{"krate":0,"index":8110}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":433674,"byte_end":433698,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":8108},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442726,"byte_end":442727,"line_start":285,"line_end":285,"column_start":30,"column_end":31},"name":"A","qualname":"::parser::sequence::PartialState1::A","value":"A","parent":{"krate":0,"index":8106},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8135},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442744,"byte_end":442757,"line_start":286,"line_end":286,"column_start":15,"column_end":28},"name":"PartialState2","qualname":"::parser::sequence::PartialState2","value":"PartialState2 { A, B }","parent":null,"children":[{"krate":0,"index":8138},{"krate":0,"index":8139},{"krate":0,"index":8140},{"krate":0,"index":8141}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":433674,"byte_end":433698,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":8138},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442759,"byte_end":442760,"line_start":286,"line_end":286,"column_start":30,"column_end":31},"name":"A","qualname":"::parser::sequence::PartialState2::A","value":"A","parent":{"krate":0,"index":8135},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8139},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442762,"byte_end":442763,"line_start":286,"line_end":286,"column_start":33,"column_end":34},"name":"B","qualname":"::parser::sequence::PartialState2::B","value":"B","parent":{"krate":0,"index":8135},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8170},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442780,"byte_end":442793,"line_start":287,"line_end":287,"column_start":15,"column_end":28},"name":"PartialState3","qualname":"::parser::sequence::PartialState3","value":"PartialState3 { A, B, C }","parent":null,"children":[{"krate":0,"index":8174},{"krate":0,"index":8175},{"krate":0,"index":8176},{"krate":0,"index":8177},{"krate":0,"index":8178}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":433674,"byte_end":433698,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":8174},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442795,"byte_end":442796,"line_start":287,"line_end":287,"column_start":30,"column_end":31},"name":"A","qualname":"::parser::sequence::PartialState3::A","value":"A","parent":{"krate":0,"index":8170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8175},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442798,"byte_end":442799,"line_start":287,"line_end":287,"column_start":33,"column_end":34},"name":"B","qualname":"::parser::sequence::PartialState3::B","value":"B","parent":{"krate":0,"index":8170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8176},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442801,"byte_end":442802,"line_start":287,"line_end":287,"column_start":36,"column_end":37},"name":"C","qualname":"::parser::sequence::PartialState3::C","value":"C","parent":{"krate":0,"index":8170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8211},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442819,"byte_end":442832,"line_start":288,"line_end":288,"column_start":15,"column_end":28},"name":"PartialState4","qualname":"::parser::sequence::PartialState4","value":"PartialState4 { A, B, C, D }","parent":null,"children":[{"krate":0,"index":8216},{"krate":0,"index":8217},{"krate":0,"index":8218},{"krate":0,"index":8219},{"krate":0,"index":8220},{"krate":0,"index":8221}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":433674,"byte_end":433698,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":8216},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442834,"byte_end":442835,"line_start":288,"line_end":288,"column_start":30,"column_end":31},"name":"A","qualname":"::parser::sequence::PartialState4::A","value":"A","parent":{"krate":0,"index":8211},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8217},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442837,"byte_end":442838,"line_start":288,"line_end":288,"column_start":33,"column_end":34},"name":"B","qualname":"::parser::sequence::PartialState4::B","value":"B","parent":{"krate":0,"index":8211},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8218},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442840,"byte_end":442841,"line_start":288,"line_end":288,"column_start":36,"column_end":37},"name":"C","qualname":"::parser::sequence::PartialState4::C","value":"C","parent":{"krate":0,"index":8211},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8219},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442843,"byte_end":442844,"line_start":288,"line_end":288,"column_start":39,"column_end":40},"name":"D","qualname":"::parser::sequence::PartialState4::D","value":"D","parent":{"krate":0,"index":8211},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8258},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442861,"byte_end":442874,"line_start":289,"line_end":289,"column_start":15,"column_end":28},"name":"PartialState5","qualname":"::parser::sequence::PartialState5","value":"PartialState5 { A, B, C, D, E }","parent":null,"children":[{"krate":0,"index":8264},{"krate":0,"index":8265},{"krate":0,"index":8266},{"krate":0,"index":8267},{"krate":0,"index":8268},{"krate":0,"index":8269},{"krate":0,"index":8270}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":433674,"byte_end":433698,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":8264},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442876,"byte_end":442877,"line_start":289,"line_end":289,"column_start":30,"column_end":31},"name":"A","qualname":"::parser::sequence::PartialState5::A","value":"A","parent":{"krate":0,"index":8258},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8265},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442879,"byte_end":442880,"line_start":289,"line_end":289,"column_start":33,"column_end":34},"name":"B","qualname":"::parser::sequence::PartialState5::B","value":"B","parent":{"krate":0,"index":8258},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8266},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442882,"byte_end":442883,"line_start":289,"line_end":289,"column_start":36,"column_end":37},"name":"C","qualname":"::parser::sequence::PartialState5::C","value":"C","parent":{"krate":0,"index":8258},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8267},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442885,"byte_end":442886,"line_start":289,"line_end":289,"column_start":39,"column_end":40},"name":"D","qualname":"::parser::sequence::PartialState5::D","value":"D","parent":{"krate":0,"index":8258},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8268},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442888,"byte_end":442889,"line_start":289,"line_end":289,"column_start":42,"column_end":43},"name":"E","qualname":"::parser::sequence::PartialState5::E","value":"E","parent":{"krate":0,"index":8258},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8311},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442906,"byte_end":442919,"line_start":290,"line_end":290,"column_start":15,"column_end":28},"name":"PartialState6","qualname":"::parser::sequence::PartialState6","value":"PartialState6 { A, B, C, D, E, F }","parent":null,"children":[{"krate":0,"index":8318},{"krate":0,"index":8319},{"krate":0,"index":8320},{"krate":0,"index":8321},{"krate":0,"index":8322},{"krate":0,"index":8323},{"krate":0,"index":8324},{"krate":0,"index":8325}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":433674,"byte_end":433698,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":8318},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442921,"byte_end":442922,"line_start":290,"line_end":290,"column_start":30,"column_end":31},"name":"A","qualname":"::parser::sequence::PartialState6::A","value":"A","parent":{"krate":0,"index":8311},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8319},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442924,"byte_end":442925,"line_start":290,"line_end":290,"column_start":33,"column_end":34},"name":"B","qualname":"::parser::sequence::PartialState6::B","value":"B","parent":{"krate":0,"index":8311},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8320},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442927,"byte_end":442928,"line_start":290,"line_end":290,"column_start":36,"column_end":37},"name":"C","qualname":"::parser::sequence::PartialState6::C","value":"C","parent":{"krate":0,"index":8311},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8321},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442930,"byte_end":442931,"line_start":290,"line_end":290,"column_start":39,"column_end":40},"name":"D","qualname":"::parser::sequence::PartialState6::D","value":"D","parent":{"krate":0,"index":8311},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8322},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442933,"byte_end":442934,"line_start":290,"line_end":290,"column_start":42,"column_end":43},"name":"E","qualname":"::parser::sequence::PartialState6::E","value":"E","parent":{"krate":0,"index":8311},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8323},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442936,"byte_end":442937,"line_start":290,"line_end":290,"column_start":45,"column_end":46},"name":"F","qualname":"::parser::sequence::PartialState6::F","value":"F","parent":{"krate":0,"index":8311},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8370},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442954,"byte_end":442967,"line_start":291,"line_end":291,"column_start":15,"column_end":28},"name":"PartialState7","qualname":"::parser::sequence::PartialState7","value":"PartialState7 { A, B, C, D, E, F, G }","parent":null,"children":[{"krate":0,"index":8378},{"krate":0,"index":8379},{"krate":0,"index":8380},{"krate":0,"index":8381},{"krate":0,"index":8382},{"krate":0,"index":8383},{"krate":0,"index":8384},{"krate":0,"index":8385},{"krate":0,"index":8386}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":433674,"byte_end":433698,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":8378},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442969,"byte_end":442970,"line_start":291,"line_end":291,"column_start":30,"column_end":31},"name":"A","qualname":"::parser::sequence::PartialState7::A","value":"A","parent":{"krate":0,"index":8370},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8379},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442972,"byte_end":442973,"line_start":291,"line_end":291,"column_start":33,"column_end":34},"name":"B","qualname":"::parser::sequence::PartialState7::B","value":"B","parent":{"krate":0,"index":8370},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8380},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442975,"byte_end":442976,"line_start":291,"line_end":291,"column_start":36,"column_end":37},"name":"C","qualname":"::parser::sequence::PartialState7::C","value":"C","parent":{"krate":0,"index":8370},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8381},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442978,"byte_end":442979,"line_start":291,"line_end":291,"column_start":39,"column_end":40},"name":"D","qualname":"::parser::sequence::PartialState7::D","value":"D","parent":{"krate":0,"index":8370},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8382},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442981,"byte_end":442982,"line_start":291,"line_end":291,"column_start":42,"column_end":43},"name":"E","qualname":"::parser::sequence::PartialState7::E","value":"E","parent":{"krate":0,"index":8370},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8383},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442984,"byte_end":442985,"line_start":291,"line_end":291,"column_start":45,"column_end":46},"name":"F","qualname":"::parser::sequence::PartialState7::F","value":"F","parent":{"krate":0,"index":8370},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8384},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":442987,"byte_end":442988,"line_start":291,"line_end":291,"column_start":48,"column_end":49},"name":"G","qualname":"::parser::sequence::PartialState7::G","value":"G","parent":{"krate":0,"index":8370},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8435},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443005,"byte_end":443018,"line_start":292,"line_end":292,"column_start":15,"column_end":28},"name":"PartialState8","qualname":"::parser::sequence::PartialState8","value":"PartialState8 { A, B, C, D, E, F, G, H }","parent":null,"children":[{"krate":0,"index":8444},{"krate":0,"index":8445},{"krate":0,"index":8446},{"krate":0,"index":8447},{"krate":0,"index":8448},{"krate":0,"index":8449},{"krate":0,"index":8450},{"krate":0,"index":8451},{"krate":0,"index":8452},{"krate":0,"index":8453}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":433674,"byte_end":433698,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":8444},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443020,"byte_end":443021,"line_start":292,"line_end":292,"column_start":30,"column_end":31},"name":"A","qualname":"::parser::sequence::PartialState8::A","value":"A","parent":{"krate":0,"index":8435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8445},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443023,"byte_end":443024,"line_start":292,"line_end":292,"column_start":33,"column_end":34},"name":"B","qualname":"::parser::sequence::PartialState8::B","value":"B","parent":{"krate":0,"index":8435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8446},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443026,"byte_end":443027,"line_start":292,"line_end":292,"column_start":36,"column_end":37},"name":"C","qualname":"::parser::sequence::PartialState8::C","value":"C","parent":{"krate":0,"index":8435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8447},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443029,"byte_end":443030,"line_start":292,"line_end":292,"column_start":39,"column_end":40},"name":"D","qualname":"::parser::sequence::PartialState8::D","value":"D","parent":{"krate":0,"index":8435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8448},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443032,"byte_end":443033,"line_start":292,"line_end":292,"column_start":42,"column_end":43},"name":"E","qualname":"::parser::sequence::PartialState8::E","value":"E","parent":{"krate":0,"index":8435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8449},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443035,"byte_end":443036,"line_start":292,"line_end":292,"column_start":45,"column_end":46},"name":"F","qualname":"::parser::sequence::PartialState8::F","value":"F","parent":{"krate":0,"index":8435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8450},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443038,"byte_end":443039,"line_start":292,"line_end":292,"column_start":48,"column_end":49},"name":"G","qualname":"::parser::sequence::PartialState8::G","value":"G","parent":{"krate":0,"index":8435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8451},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443041,"byte_end":443042,"line_start":292,"line_end":292,"column_start":51,"column_end":52},"name":"H","qualname":"::parser::sequence::PartialState8::H","value":"H","parent":{"krate":0,"index":8435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8506},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443059,"byte_end":443072,"line_start":293,"line_end":293,"column_start":15,"column_end":28},"name":"PartialState9","qualname":"::parser::sequence::PartialState9","value":"PartialState9 { A, B, C, D, E, F, G, H, I }","parent":null,"children":[{"krate":0,"index":8516},{"krate":0,"index":8517},{"krate":0,"index":8518},{"krate":0,"index":8519},{"krate":0,"index":8520},{"krate":0,"index":8521},{"krate":0,"index":8522},{"krate":0,"index":8523},{"krate":0,"index":8524},{"krate":0,"index":8525},{"krate":0,"index":8526}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":433674,"byte_end":433698,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":8516},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443074,"byte_end":443075,"line_start":293,"line_end":293,"column_start":30,"column_end":31},"name":"A","qualname":"::parser::sequence::PartialState9::A","value":"A","parent":{"krate":0,"index":8506},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8517},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443077,"byte_end":443078,"line_start":293,"line_end":293,"column_start":33,"column_end":34},"name":"B","qualname":"::parser::sequence::PartialState9::B","value":"B","parent":{"krate":0,"index":8506},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8518},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443080,"byte_end":443081,"line_start":293,"line_end":293,"column_start":36,"column_end":37},"name":"C","qualname":"::parser::sequence::PartialState9::C","value":"C","parent":{"krate":0,"index":8506},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8519},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443083,"byte_end":443084,"line_start":293,"line_end":293,"column_start":39,"column_end":40},"name":"D","qualname":"::parser::sequence::PartialState9::D","value":"D","parent":{"krate":0,"index":8506},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8520},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443086,"byte_end":443087,"line_start":293,"line_end":293,"column_start":42,"column_end":43},"name":"E","qualname":"::parser::sequence::PartialState9::E","value":"E","parent":{"krate":0,"index":8506},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8521},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443089,"byte_end":443090,"line_start":293,"line_end":293,"column_start":45,"column_end":46},"name":"F","qualname":"::parser::sequence::PartialState9::F","value":"F","parent":{"krate":0,"index":8506},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8522},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443092,"byte_end":443093,"line_start":293,"line_end":293,"column_start":48,"column_end":49},"name":"G","qualname":"::parser::sequence::PartialState9::G","value":"G","parent":{"krate":0,"index":8506},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8523},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443095,"byte_end":443096,"line_start":293,"line_end":293,"column_start":51,"column_end":52},"name":"H","qualname":"::parser::sequence::PartialState9::H","value":"H","parent":{"krate":0,"index":8506},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8524},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443098,"byte_end":443099,"line_start":293,"line_end":293,"column_start":54,"column_end":55},"name":"I","qualname":"::parser::sequence::PartialState9::I","value":"I","parent":{"krate":0,"index":8506},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8583},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443116,"byte_end":443130,"line_start":294,"line_end":294,"column_start":15,"column_end":29},"name":"PartialState10","qualname":"::parser::sequence::PartialState10","value":"PartialState10 { A, B, C, D, E, F, G, H, I, J }","parent":null,"children":[{"krate":0,"index":8594},{"krate":0,"index":8595},{"krate":0,"index":8596},{"krate":0,"index":8597},{"krate":0,"index":8598},{"krate":0,"index":8599},{"krate":0,"index":8600},{"krate":0,"index":8601},{"krate":0,"index":8602},{"krate":0,"index":8603},{"krate":0,"index":8604},{"krate":0,"index":8605}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":433674,"byte_end":433698,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":8594},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443132,"byte_end":443133,"line_start":294,"line_end":294,"column_start":31,"column_end":32},"name":"A","qualname":"::parser::sequence::PartialState10::A","value":"A","parent":{"krate":0,"index":8583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8595},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443135,"byte_end":443136,"line_start":294,"line_end":294,"column_start":34,"column_end":35},"name":"B","qualname":"::parser::sequence::PartialState10::B","value":"B","parent":{"krate":0,"index":8583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8596},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443138,"byte_end":443139,"line_start":294,"line_end":294,"column_start":37,"column_end":38},"name":"C","qualname":"::parser::sequence::PartialState10::C","value":"C","parent":{"krate":0,"index":8583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8597},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443141,"byte_end":443142,"line_start":294,"line_end":294,"column_start":40,"column_end":41},"name":"D","qualname":"::parser::sequence::PartialState10::D","value":"D","parent":{"krate":0,"index":8583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8598},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443144,"byte_end":443145,"line_start":294,"line_end":294,"column_start":43,"column_end":44},"name":"E","qualname":"::parser::sequence::PartialState10::E","value":"E","parent":{"krate":0,"index":8583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8599},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443147,"byte_end":443148,"line_start":294,"line_end":294,"column_start":46,"column_end":47},"name":"F","qualname":"::parser::sequence::PartialState10::F","value":"F","parent":{"krate":0,"index":8583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8600},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443150,"byte_end":443151,"line_start":294,"line_end":294,"column_start":49,"column_end":50},"name":"G","qualname":"::parser::sequence::PartialState10::G","value":"G","parent":{"krate":0,"index":8583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8601},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443153,"byte_end":443154,"line_start":294,"line_end":294,"column_start":52,"column_end":53},"name":"H","qualname":"::parser::sequence::PartialState10::H","value":"H","parent":{"krate":0,"index":8583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8602},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443156,"byte_end":443157,"line_start":294,"line_end":294,"column_start":55,"column_end":56},"name":"I","qualname":"::parser::sequence::PartialState10::I","value":"I","parent":{"krate":0,"index":8583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8603},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443159,"byte_end":443160,"line_start":294,"line_end":294,"column_start":58,"column_end":59},"name":"J","qualname":"::parser::sequence::PartialState10::J","value":"J","parent":{"krate":0,"index":8583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8666},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443177,"byte_end":443191,"line_start":295,"line_end":295,"column_start":15,"column_end":29},"name":"PartialState11","qualname":"::parser::sequence::PartialState11","value":"PartialState11 { A, B, C, D, E, F, G, H, I, J, K }","parent":null,"children":[{"krate":0,"index":8678},{"krate":0,"index":8679},{"krate":0,"index":8680},{"krate":0,"index":8681},{"krate":0,"index":8682},{"krate":0,"index":8683},{"krate":0,"index":8684},{"krate":0,"index":8685},{"krate":0,"index":8686},{"krate":0,"index":8687},{"krate":0,"index":8688},{"krate":0,"index":8689},{"krate":0,"index":8690}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":433674,"byte_end":433698,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":8678},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443193,"byte_end":443194,"line_start":295,"line_end":295,"column_start":31,"column_end":32},"name":"A","qualname":"::parser::sequence::PartialState11::A","value":"A","parent":{"krate":0,"index":8666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8679},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443196,"byte_end":443197,"line_start":295,"line_end":295,"column_start":34,"column_end":35},"name":"B","qualname":"::parser::sequence::PartialState11::B","value":"B","parent":{"krate":0,"index":8666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8680},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443199,"byte_end":443200,"line_start":295,"line_end":295,"column_start":37,"column_end":38},"name":"C","qualname":"::parser::sequence::PartialState11::C","value":"C","parent":{"krate":0,"index":8666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8681},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443202,"byte_end":443203,"line_start":295,"line_end":295,"column_start":40,"column_end":41},"name":"D","qualname":"::parser::sequence::PartialState11::D","value":"D","parent":{"krate":0,"index":8666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8682},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443205,"byte_end":443206,"line_start":295,"line_end":295,"column_start":43,"column_end":44},"name":"E","qualname":"::parser::sequence::PartialState11::E","value":"E","parent":{"krate":0,"index":8666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8683},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443208,"byte_end":443209,"line_start":295,"line_end":295,"column_start":46,"column_end":47},"name":"F","qualname":"::parser::sequence::PartialState11::F","value":"F","parent":{"krate":0,"index":8666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8684},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443211,"byte_end":443212,"line_start":295,"line_end":295,"column_start":49,"column_end":50},"name":"G","qualname":"::parser::sequence::PartialState11::G","value":"G","parent":{"krate":0,"index":8666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8685},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443214,"byte_end":443215,"line_start":295,"line_end":295,"column_start":52,"column_end":53},"name":"H","qualname":"::parser::sequence::PartialState11::H","value":"H","parent":{"krate":0,"index":8666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8686},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443217,"byte_end":443218,"line_start":295,"line_end":295,"column_start":55,"column_end":56},"name":"I","qualname":"::parser::sequence::PartialState11::I","value":"I","parent":{"krate":0,"index":8666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8687},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443220,"byte_end":443221,"line_start":295,"line_end":295,"column_start":58,"column_end":59},"name":"J","qualname":"::parser::sequence::PartialState11::J","value":"J","parent":{"krate":0,"index":8666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8688},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443223,"byte_end":443224,"line_start":295,"line_end":295,"column_start":61,"column_end":62},"name":"K","qualname":"::parser::sequence::PartialState11::K","value":"K","parent":{"krate":0,"index":8666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8755},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443241,"byte_end":443255,"line_start":296,"line_end":296,"column_start":15,"column_end":29},"name":"PartialState12","qualname":"::parser::sequence::PartialState12","value":"PartialState12 { A, B, C, D, E, F, G, H, I, J, K, L }","parent":null,"children":[{"krate":0,"index":8768},{"krate":0,"index":8769},{"krate":0,"index":8770},{"krate":0,"index":8771},{"krate":0,"index":8772},{"krate":0,"index":8773},{"krate":0,"index":8774},{"krate":0,"index":8775},{"krate":0,"index":8776},{"krate":0,"index":8777},{"krate":0,"index":8778},{"krate":0,"index":8779},{"krate":0,"index":8780},{"krate":0,"index":8781}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":433674,"byte_end":433698,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":8768},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443257,"byte_end":443258,"line_start":296,"line_end":296,"column_start":31,"column_end":32},"name":"A","qualname":"::parser::sequence::PartialState12::A","value":"A","parent":{"krate":0,"index":8755},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8769},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443260,"byte_end":443261,"line_start":296,"line_end":296,"column_start":34,"column_end":35},"name":"B","qualname":"::parser::sequence::PartialState12::B","value":"B","parent":{"krate":0,"index":8755},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8770},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443263,"byte_end":443264,"line_start":296,"line_end":296,"column_start":37,"column_end":38},"name":"C","qualname":"::parser::sequence::PartialState12::C","value":"C","parent":{"krate":0,"index":8755},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8771},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443266,"byte_end":443267,"line_start":296,"line_end":296,"column_start":40,"column_end":41},"name":"D","qualname":"::parser::sequence::PartialState12::D","value":"D","parent":{"krate":0,"index":8755},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8772},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443269,"byte_end":443270,"line_start":296,"line_end":296,"column_start":43,"column_end":44},"name":"E","qualname":"::parser::sequence::PartialState12::E","value":"E","parent":{"krate":0,"index":8755},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8773},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443272,"byte_end":443273,"line_start":296,"line_end":296,"column_start":46,"column_end":47},"name":"F","qualname":"::parser::sequence::PartialState12::F","value":"F","parent":{"krate":0,"index":8755},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8774},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443275,"byte_end":443276,"line_start":296,"line_end":296,"column_start":49,"column_end":50},"name":"G","qualname":"::parser::sequence::PartialState12::G","value":"G","parent":{"krate":0,"index":8755},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8775},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443278,"byte_end":443279,"line_start":296,"line_end":296,"column_start":52,"column_end":53},"name":"H","qualname":"::parser::sequence::PartialState12::H","value":"H","parent":{"krate":0,"index":8755},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8776},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443281,"byte_end":443282,"line_start":296,"line_end":296,"column_start":55,"column_end":56},"name":"I","qualname":"::parser::sequence::PartialState12::I","value":"I","parent":{"krate":0,"index":8755},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8777},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443284,"byte_end":443285,"line_start":296,"line_end":296,"column_start":58,"column_end":59},"name":"J","qualname":"::parser::sequence::PartialState12::J","value":"J","parent":{"krate":0,"index":8755},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8778},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443287,"byte_end":443288,"line_start":296,"line_end":296,"column_start":61,"column_end":62},"name":"K","qualname":"::parser::sequence::PartialState12::K","value":"K","parent":{"krate":0,"index":8755},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8779},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443290,"byte_end":443291,"line_start":296,"line_end":296,"column_start":64,"column_end":65},"name":"L","qualname":"::parser::sequence::PartialState12::L","value":"L","parent":{"krate":0,"index":8755},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8850},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443308,"byte_end":443322,"line_start":297,"line_end":297,"column_start":15,"column_end":29},"name":"PartialState13","qualname":"::parser::sequence::PartialState13","value":"PartialState13 { A, B, C, D, E, F, G, H, I, J, K, L, M }","parent":null,"children":[{"krate":0,"index":8864},{"krate":0,"index":8865},{"krate":0,"index":8866},{"krate":0,"index":8867},{"krate":0,"index":8868},{"krate":0,"index":8869},{"krate":0,"index":8870},{"krate":0,"index":8871},{"krate":0,"index":8872},{"krate":0,"index":8873},{"krate":0,"index":8874},{"krate":0,"index":8875},{"krate":0,"index":8876},{"krate":0,"index":8877},{"krate":0,"index":8878}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":433674,"byte_end":433698,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":8864},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443324,"byte_end":443325,"line_start":297,"line_end":297,"column_start":31,"column_end":32},"name":"A","qualname":"::parser::sequence::PartialState13::A","value":"A","parent":{"krate":0,"index":8850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8865},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443327,"byte_end":443328,"line_start":297,"line_end":297,"column_start":34,"column_end":35},"name":"B","qualname":"::parser::sequence::PartialState13::B","value":"B","parent":{"krate":0,"index":8850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8866},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443330,"byte_end":443331,"line_start":297,"line_end":297,"column_start":37,"column_end":38},"name":"C","qualname":"::parser::sequence::PartialState13::C","value":"C","parent":{"krate":0,"index":8850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8867},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443333,"byte_end":443334,"line_start":297,"line_end":297,"column_start":40,"column_end":41},"name":"D","qualname":"::parser::sequence::PartialState13::D","value":"D","parent":{"krate":0,"index":8850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8868},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443336,"byte_end":443337,"line_start":297,"line_end":297,"column_start":43,"column_end":44},"name":"E","qualname":"::parser::sequence::PartialState13::E","value":"E","parent":{"krate":0,"index":8850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8869},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443339,"byte_end":443340,"line_start":297,"line_end":297,"column_start":46,"column_end":47},"name":"F","qualname":"::parser::sequence::PartialState13::F","value":"F","parent":{"krate":0,"index":8850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8870},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443342,"byte_end":443343,"line_start":297,"line_end":297,"column_start":49,"column_end":50},"name":"G","qualname":"::parser::sequence::PartialState13::G","value":"G","parent":{"krate":0,"index":8850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8871},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443345,"byte_end":443346,"line_start":297,"line_end":297,"column_start":52,"column_end":53},"name":"H","qualname":"::parser::sequence::PartialState13::H","value":"H","parent":{"krate":0,"index":8850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8872},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443348,"byte_end":443349,"line_start":297,"line_end":297,"column_start":55,"column_end":56},"name":"I","qualname":"::parser::sequence::PartialState13::I","value":"I","parent":{"krate":0,"index":8850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8873},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443351,"byte_end":443352,"line_start":297,"line_end":297,"column_start":58,"column_end":59},"name":"J","qualname":"::parser::sequence::PartialState13::J","value":"J","parent":{"krate":0,"index":8850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8874},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443354,"byte_end":443355,"line_start":297,"line_end":297,"column_start":61,"column_end":62},"name":"K","qualname":"::parser::sequence::PartialState13::K","value":"K","parent":{"krate":0,"index":8850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8875},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443357,"byte_end":443358,"line_start":297,"line_end":297,"column_start":64,"column_end":65},"name":"L","qualname":"::parser::sequence::PartialState13::L","value":"L","parent":{"krate":0,"index":8850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8876},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443360,"byte_end":443361,"line_start":297,"line_end":297,"column_start":67,"column_end":68},"name":"M","qualname":"::parser::sequence::PartialState13::M","value":"M","parent":{"krate":0,"index":8850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8951},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443378,"byte_end":443392,"line_start":298,"line_end":298,"column_start":15,"column_end":29},"name":"PartialState14","qualname":"::parser::sequence::PartialState14","value":"PartialState14 { A, B, C, D, E, F, G, H, I, J, K, L, M, N }","parent":null,"children":[{"krate":0,"index":8966},{"krate":0,"index":8967},{"krate":0,"index":8968},{"krate":0,"index":8969},{"krate":0,"index":8970},{"krate":0,"index":8971},{"krate":0,"index":8972},{"krate":0,"index":8973},{"krate":0,"index":8974},{"krate":0,"index":8975},{"krate":0,"index":8976},{"krate":0,"index":8977},{"krate":0,"index":8978},{"krate":0,"index":8979},{"krate":0,"index":8980},{"krate":0,"index":8981}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":433674,"byte_end":433698,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":8966},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443394,"byte_end":443395,"line_start":298,"line_end":298,"column_start":31,"column_end":32},"name":"A","qualname":"::parser::sequence::PartialState14::A","value":"A","parent":{"krate":0,"index":8951},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8967},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443397,"byte_end":443398,"line_start":298,"line_end":298,"column_start":34,"column_end":35},"name":"B","qualname":"::parser::sequence::PartialState14::B","value":"B","parent":{"krate":0,"index":8951},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8968},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443400,"byte_end":443401,"line_start":298,"line_end":298,"column_start":37,"column_end":38},"name":"C","qualname":"::parser::sequence::PartialState14::C","value":"C","parent":{"krate":0,"index":8951},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8969},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443403,"byte_end":443404,"line_start":298,"line_end":298,"column_start":40,"column_end":41},"name":"D","qualname":"::parser::sequence::PartialState14::D","value":"D","parent":{"krate":0,"index":8951},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8970},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443406,"byte_end":443407,"line_start":298,"line_end":298,"column_start":43,"column_end":44},"name":"E","qualname":"::parser::sequence::PartialState14::E","value":"E","parent":{"krate":0,"index":8951},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8971},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443409,"byte_end":443410,"line_start":298,"line_end":298,"column_start":46,"column_end":47},"name":"F","qualname":"::parser::sequence::PartialState14::F","value":"F","parent":{"krate":0,"index":8951},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8972},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443412,"byte_end":443413,"line_start":298,"line_end":298,"column_start":49,"column_end":50},"name":"G","qualname":"::parser::sequence::PartialState14::G","value":"G","parent":{"krate":0,"index":8951},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8973},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443415,"byte_end":443416,"line_start":298,"line_end":298,"column_start":52,"column_end":53},"name":"H","qualname":"::parser::sequence::PartialState14::H","value":"H","parent":{"krate":0,"index":8951},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8974},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443418,"byte_end":443419,"line_start":298,"line_end":298,"column_start":55,"column_end":56},"name":"I","qualname":"::parser::sequence::PartialState14::I","value":"I","parent":{"krate":0,"index":8951},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8975},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443421,"byte_end":443422,"line_start":298,"line_end":298,"column_start":58,"column_end":59},"name":"J","qualname":"::parser::sequence::PartialState14::J","value":"J","parent":{"krate":0,"index":8951},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8976},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443424,"byte_end":443425,"line_start":298,"line_end":298,"column_start":61,"column_end":62},"name":"K","qualname":"::parser::sequence::PartialState14::K","value":"K","parent":{"krate":0,"index":8951},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8977},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443427,"byte_end":443428,"line_start":298,"line_end":298,"column_start":64,"column_end":65},"name":"L","qualname":"::parser::sequence::PartialState14::L","value":"L","parent":{"krate":0,"index":8951},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8978},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443430,"byte_end":443431,"line_start":298,"line_end":298,"column_start":67,"column_end":68},"name":"M","qualname":"::parser::sequence::PartialState14::M","value":"M","parent":{"krate":0,"index":8951},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8979},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443433,"byte_end":443434,"line_start":298,"line_end":298,"column_start":70,"column_end":71},"name":"N","qualname":"::parser::sequence::PartialState14::N","value":"N","parent":{"krate":0,"index":8951},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9058},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443451,"byte_end":443465,"line_start":299,"line_end":299,"column_start":15,"column_end":29},"name":"PartialState15","qualname":"::parser::sequence::PartialState15","value":"PartialState15 { A, B, C, D, E, F, G, H, I, J, K, L, M, N, P }","parent":null,"children":[{"krate":0,"index":9074},{"krate":0,"index":9075},{"krate":0,"index":9076},{"krate":0,"index":9077},{"krate":0,"index":9078},{"krate":0,"index":9079},{"krate":0,"index":9080},{"krate":0,"index":9081},{"krate":0,"index":9082},{"krate":0,"index":9083},{"krate":0,"index":9084},{"krate":0,"index":9085},{"krate":0,"index":9086},{"krate":0,"index":9087},{"krate":0,"index":9088},{"krate":0,"index":9089},{"krate":0,"index":9090}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":433674,"byte_end":433698,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":9074},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443467,"byte_end":443468,"line_start":299,"line_end":299,"column_start":31,"column_end":32},"name":"A","qualname":"::parser::sequence::PartialState15::A","value":"A","parent":{"krate":0,"index":9058},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9075},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443470,"byte_end":443471,"line_start":299,"line_end":299,"column_start":34,"column_end":35},"name":"B","qualname":"::parser::sequence::PartialState15::B","value":"B","parent":{"krate":0,"index":9058},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9076},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443473,"byte_end":443474,"line_start":299,"line_end":299,"column_start":37,"column_end":38},"name":"C","qualname":"::parser::sequence::PartialState15::C","value":"C","parent":{"krate":0,"index":9058},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9077},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443476,"byte_end":443477,"line_start":299,"line_end":299,"column_start":40,"column_end":41},"name":"D","qualname":"::parser::sequence::PartialState15::D","value":"D","parent":{"krate":0,"index":9058},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9078},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443479,"byte_end":443480,"line_start":299,"line_end":299,"column_start":43,"column_end":44},"name":"E","qualname":"::parser::sequence::PartialState15::E","value":"E","parent":{"krate":0,"index":9058},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9079},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443482,"byte_end":443483,"line_start":299,"line_end":299,"column_start":46,"column_end":47},"name":"F","qualname":"::parser::sequence::PartialState15::F","value":"F","parent":{"krate":0,"index":9058},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9080},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443485,"byte_end":443486,"line_start":299,"line_end":299,"column_start":49,"column_end":50},"name":"G","qualname":"::parser::sequence::PartialState15::G","value":"G","parent":{"krate":0,"index":9058},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9081},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443488,"byte_end":443489,"line_start":299,"line_end":299,"column_start":52,"column_end":53},"name":"H","qualname":"::parser::sequence::PartialState15::H","value":"H","parent":{"krate":0,"index":9058},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9082},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443491,"byte_end":443492,"line_start":299,"line_end":299,"column_start":55,"column_end":56},"name":"I","qualname":"::parser::sequence::PartialState15::I","value":"I","parent":{"krate":0,"index":9058},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9083},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443494,"byte_end":443495,"line_start":299,"line_end":299,"column_start":58,"column_end":59},"name":"J","qualname":"::parser::sequence::PartialState15::J","value":"J","parent":{"krate":0,"index":9058},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9084},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443497,"byte_end":443498,"line_start":299,"line_end":299,"column_start":61,"column_end":62},"name":"K","qualname":"::parser::sequence::PartialState15::K","value":"K","parent":{"krate":0,"index":9058},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9085},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443500,"byte_end":443501,"line_start":299,"line_end":299,"column_start":64,"column_end":65},"name":"L","qualname":"::parser::sequence::PartialState15::L","value":"L","parent":{"krate":0,"index":9058},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9086},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443503,"byte_end":443504,"line_start":299,"line_end":299,"column_start":67,"column_end":68},"name":"M","qualname":"::parser::sequence::PartialState15::M","value":"M","parent":{"krate":0,"index":9058},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9087},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443506,"byte_end":443507,"line_start":299,"line_end":299,"column_start":70,"column_end":71},"name":"N","qualname":"::parser::sequence::PartialState15::N","value":"N","parent":{"krate":0,"index":9058},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9088},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443509,"byte_end":443510,"line_start":299,"line_end":299,"column_start":73,"column_end":74},"name":"P","qualname":"::parser::sequence::PartialState15::P","value":"P","parent":{"krate":0,"index":9058},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9171},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443527,"byte_end":443541,"line_start":300,"line_end":300,"column_start":15,"column_end":29},"name":"PartialState16","qualname":"::parser::sequence::PartialState16","value":"PartialState16 { A, B, C, D, E, F, G, H, I, J, K, L, M, N, P, Q }","parent":null,"children":[{"krate":0,"index":9188},{"krate":0,"index":9189},{"krate":0,"index":9190},{"krate":0,"index":9191},{"krate":0,"index":9192},{"krate":0,"index":9193},{"krate":0,"index":9194},{"krate":0,"index":9195},{"krate":0,"index":9196},{"krate":0,"index":9197},{"krate":0,"index":9198},{"krate":0,"index":9199},{"krate":0,"index":9200},{"krate":0,"index":9201},{"krate":0,"index":9202},{"krate":0,"index":9203},{"krate":0,"index":9204},{"krate":0,"index":9205}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":433674,"byte_end":433698,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":9188},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443543,"byte_end":443544,"line_start":300,"line_end":300,"column_start":31,"column_end":32},"name":"A","qualname":"::parser::sequence::PartialState16::A","value":"A","parent":{"krate":0,"index":9171},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9189},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443546,"byte_end":443547,"line_start":300,"line_end":300,"column_start":34,"column_end":35},"name":"B","qualname":"::parser::sequence::PartialState16::B","value":"B","parent":{"krate":0,"index":9171},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9190},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443549,"byte_end":443550,"line_start":300,"line_end":300,"column_start":37,"column_end":38},"name":"C","qualname":"::parser::sequence::PartialState16::C","value":"C","parent":{"krate":0,"index":9171},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9191},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443552,"byte_end":443553,"line_start":300,"line_end":300,"column_start":40,"column_end":41},"name":"D","qualname":"::parser::sequence::PartialState16::D","value":"D","parent":{"krate":0,"index":9171},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9192},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443555,"byte_end":443556,"line_start":300,"line_end":300,"column_start":43,"column_end":44},"name":"E","qualname":"::parser::sequence::PartialState16::E","value":"E","parent":{"krate":0,"index":9171},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9193},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443558,"byte_end":443559,"line_start":300,"line_end":300,"column_start":46,"column_end":47},"name":"F","qualname":"::parser::sequence::PartialState16::F","value":"F","parent":{"krate":0,"index":9171},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9194},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443561,"byte_end":443562,"line_start":300,"line_end":300,"column_start":49,"column_end":50},"name":"G","qualname":"::parser::sequence::PartialState16::G","value":"G","parent":{"krate":0,"index":9171},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9195},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443564,"byte_end":443565,"line_start":300,"line_end":300,"column_start":52,"column_end":53},"name":"H","qualname":"::parser::sequence::PartialState16::H","value":"H","parent":{"krate":0,"index":9171},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9196},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443567,"byte_end":443568,"line_start":300,"line_end":300,"column_start":55,"column_end":56},"name":"I","qualname":"::parser::sequence::PartialState16::I","value":"I","parent":{"krate":0,"index":9171},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9197},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443570,"byte_end":443571,"line_start":300,"line_end":300,"column_start":58,"column_end":59},"name":"J","qualname":"::parser::sequence::PartialState16::J","value":"J","parent":{"krate":0,"index":9171},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9198},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443573,"byte_end":443574,"line_start":300,"line_end":300,"column_start":61,"column_end":62},"name":"K","qualname":"::parser::sequence::PartialState16::K","value":"K","parent":{"krate":0,"index":9171},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9199},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443576,"byte_end":443577,"line_start":300,"line_end":300,"column_start":64,"column_end":65},"name":"L","qualname":"::parser::sequence::PartialState16::L","value":"L","parent":{"krate":0,"index":9171},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9200},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443579,"byte_end":443580,"line_start":300,"line_end":300,"column_start":67,"column_end":68},"name":"M","qualname":"::parser::sequence::PartialState16::M","value":"M","parent":{"krate":0,"index":9171},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9201},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443582,"byte_end":443583,"line_start":300,"line_end":300,"column_start":70,"column_end":71},"name":"N","qualname":"::parser::sequence::PartialState16::N","value":"N","parent":{"krate":0,"index":9171},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9202},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443585,"byte_end":443586,"line_start":300,"line_end":300,"column_start":73,"column_end":74},"name":"P","qualname":"::parser::sequence::PartialState16::P","value":"P","parent":{"krate":0,"index":9171},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9203},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443588,"byte_end":443589,"line_start":300,"line_end":300,"column_start":76,"column_end":77},"name":"Q","qualname":"::parser::sequence::PartialState16::Q","value":"Q","parent":{"krate":0,"index":9171},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9290},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443606,"byte_end":443620,"line_start":301,"line_end":301,"column_start":15,"column_end":29},"name":"PartialState17","qualname":"::parser::sequence::PartialState17","value":"PartialState17 { A, B, C, D, E, F, G, H, I, J, K, L, M, N, P, Q, R }","parent":null,"children":[{"krate":0,"index":9308},{"krate":0,"index":9309},{"krate":0,"index":9310},{"krate":0,"index":9311},{"krate":0,"index":9312},{"krate":0,"index":9313},{"krate":0,"index":9314},{"krate":0,"index":9315},{"krate":0,"index":9316},{"krate":0,"index":9317},{"krate":0,"index":9318},{"krate":0,"index":9319},{"krate":0,"index":9320},{"krate":0,"index":9321},{"krate":0,"index":9322},{"krate":0,"index":9323},{"krate":0,"index":9324},{"krate":0,"index":9325},{"krate":0,"index":9326}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":433674,"byte_end":433698,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":9308},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443622,"byte_end":443623,"line_start":301,"line_end":301,"column_start":31,"column_end":32},"name":"A","qualname":"::parser::sequence::PartialState17::A","value":"A","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9309},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443625,"byte_end":443626,"line_start":301,"line_end":301,"column_start":34,"column_end":35},"name":"B","qualname":"::parser::sequence::PartialState17::B","value":"B","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9310},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443628,"byte_end":443629,"line_start":301,"line_end":301,"column_start":37,"column_end":38},"name":"C","qualname":"::parser::sequence::PartialState17::C","value":"C","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9311},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443631,"byte_end":443632,"line_start":301,"line_end":301,"column_start":40,"column_end":41},"name":"D","qualname":"::parser::sequence::PartialState17::D","value":"D","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9312},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443634,"byte_end":443635,"line_start":301,"line_end":301,"column_start":43,"column_end":44},"name":"E","qualname":"::parser::sequence::PartialState17::E","value":"E","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9313},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443637,"byte_end":443638,"line_start":301,"line_end":301,"column_start":46,"column_end":47},"name":"F","qualname":"::parser::sequence::PartialState17::F","value":"F","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9314},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443640,"byte_end":443641,"line_start":301,"line_end":301,"column_start":49,"column_end":50},"name":"G","qualname":"::parser::sequence::PartialState17::G","value":"G","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9315},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443643,"byte_end":443644,"line_start":301,"line_end":301,"column_start":52,"column_end":53},"name":"H","qualname":"::parser::sequence::PartialState17::H","value":"H","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9316},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443646,"byte_end":443647,"line_start":301,"line_end":301,"column_start":55,"column_end":56},"name":"I","qualname":"::parser::sequence::PartialState17::I","value":"I","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9317},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443649,"byte_end":443650,"line_start":301,"line_end":301,"column_start":58,"column_end":59},"name":"J","qualname":"::parser::sequence::PartialState17::J","value":"J","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9318},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443652,"byte_end":443653,"line_start":301,"line_end":301,"column_start":61,"column_end":62},"name":"K","qualname":"::parser::sequence::PartialState17::K","value":"K","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9319},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443655,"byte_end":443656,"line_start":301,"line_end":301,"column_start":64,"column_end":65},"name":"L","qualname":"::parser::sequence::PartialState17::L","value":"L","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9320},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443658,"byte_end":443659,"line_start":301,"line_end":301,"column_start":67,"column_end":68},"name":"M","qualname":"::parser::sequence::PartialState17::M","value":"M","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9321},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443661,"byte_end":443662,"line_start":301,"line_end":301,"column_start":70,"column_end":71},"name":"N","qualname":"::parser::sequence::PartialState17::N","value":"N","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9322},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443664,"byte_end":443665,"line_start":301,"line_end":301,"column_start":73,"column_end":74},"name":"P","qualname":"::parser::sequence::PartialState17::P","value":"P","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9323},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443667,"byte_end":443668,"line_start":301,"line_end":301,"column_start":76,"column_end":77},"name":"Q","qualname":"::parser::sequence::PartialState17::Q","value":"Q","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9324},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443670,"byte_end":443671,"line_start":301,"line_end":301,"column_start":79,"column_end":80},"name":"R","qualname":"::parser::sequence::PartialState17::R","value":"R","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9415},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443688,"byte_end":443702,"line_start":302,"line_end":302,"column_start":15,"column_end":29},"name":"PartialState18","qualname":"::parser::sequence::PartialState18","value":"PartialState18 { A, B, C, D, E, F, G, H, I, J, K, L, M, N, P, Q, R, S }","parent":null,"children":[{"krate":0,"index":9434},{"krate":0,"index":9435},{"krate":0,"index":9436},{"krate":0,"index":9437},{"krate":0,"index":9438},{"krate":0,"index":9439},{"krate":0,"index":9440},{"krate":0,"index":9441},{"krate":0,"index":9442},{"krate":0,"index":9443},{"krate":0,"index":9444},{"krate":0,"index":9445},{"krate":0,"index":9446},{"krate":0,"index":9447},{"krate":0,"index":9448},{"krate":0,"index":9449},{"krate":0,"index":9450},{"krate":0,"index":9451},{"krate":0,"index":9452},{"krate":0,"index":9453}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":433674,"byte_end":433698,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":9434},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443704,"byte_end":443705,"line_start":302,"line_end":302,"column_start":31,"column_end":32},"name":"A","qualname":"::parser::sequence::PartialState18::A","value":"A","parent":{"krate":0,"index":9415},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9435},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443707,"byte_end":443708,"line_start":302,"line_end":302,"column_start":34,"column_end":35},"name":"B","qualname":"::parser::sequence::PartialState18::B","value":"B","parent":{"krate":0,"index":9415},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9436},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443710,"byte_end":443711,"line_start":302,"line_end":302,"column_start":37,"column_end":38},"name":"C","qualname":"::parser::sequence::PartialState18::C","value":"C","parent":{"krate":0,"index":9415},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9437},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443713,"byte_end":443714,"line_start":302,"line_end":302,"column_start":40,"column_end":41},"name":"D","qualname":"::parser::sequence::PartialState18::D","value":"D","parent":{"krate":0,"index":9415},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9438},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443716,"byte_end":443717,"line_start":302,"line_end":302,"column_start":43,"column_end":44},"name":"E","qualname":"::parser::sequence::PartialState18::E","value":"E","parent":{"krate":0,"index":9415},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9439},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443719,"byte_end":443720,"line_start":302,"line_end":302,"column_start":46,"column_end":47},"name":"F","qualname":"::parser::sequence::PartialState18::F","value":"F","parent":{"krate":0,"index":9415},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9440},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443722,"byte_end":443723,"line_start":302,"line_end":302,"column_start":49,"column_end":50},"name":"G","qualname":"::parser::sequence::PartialState18::G","value":"G","parent":{"krate":0,"index":9415},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9441},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443725,"byte_end":443726,"line_start":302,"line_end":302,"column_start":52,"column_end":53},"name":"H","qualname":"::parser::sequence::PartialState18::H","value":"H","parent":{"krate":0,"index":9415},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9442},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443728,"byte_end":443729,"line_start":302,"line_end":302,"column_start":55,"column_end":56},"name":"I","qualname":"::parser::sequence::PartialState18::I","value":"I","parent":{"krate":0,"index":9415},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9443},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443731,"byte_end":443732,"line_start":302,"line_end":302,"column_start":58,"column_end":59},"name":"J","qualname":"::parser::sequence::PartialState18::J","value":"J","parent":{"krate":0,"index":9415},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9444},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443734,"byte_end":443735,"line_start":302,"line_end":302,"column_start":61,"column_end":62},"name":"K","qualname":"::parser::sequence::PartialState18::K","value":"K","parent":{"krate":0,"index":9415},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9445},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443737,"byte_end":443738,"line_start":302,"line_end":302,"column_start":64,"column_end":65},"name":"L","qualname":"::parser::sequence::PartialState18::L","value":"L","parent":{"krate":0,"index":9415},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9446},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443740,"byte_end":443741,"line_start":302,"line_end":302,"column_start":67,"column_end":68},"name":"M","qualname":"::parser::sequence::PartialState18::M","value":"M","parent":{"krate":0,"index":9415},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9447},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443743,"byte_end":443744,"line_start":302,"line_end":302,"column_start":70,"column_end":71},"name":"N","qualname":"::parser::sequence::PartialState18::N","value":"N","parent":{"krate":0,"index":9415},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9448},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443746,"byte_end":443747,"line_start":302,"line_end":302,"column_start":73,"column_end":74},"name":"P","qualname":"::parser::sequence::PartialState18::P","value":"P","parent":{"krate":0,"index":9415},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9449},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443749,"byte_end":443750,"line_start":302,"line_end":302,"column_start":76,"column_end":77},"name":"Q","qualname":"::parser::sequence::PartialState18::Q","value":"Q","parent":{"krate":0,"index":9415},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9450},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443752,"byte_end":443753,"line_start":302,"line_end":302,"column_start":79,"column_end":80},"name":"R","qualname":"::parser::sequence::PartialState18::R","value":"R","parent":{"krate":0,"index":9415},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9451},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443755,"byte_end":443756,"line_start":302,"line_end":302,"column_start":82,"column_end":83},"name":"S","qualname":"::parser::sequence::PartialState18::S","value":"S","parent":{"krate":0,"index":9415},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9546},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443773,"byte_end":443787,"line_start":303,"line_end":303,"column_start":15,"column_end":29},"name":"PartialState19","qualname":"::parser::sequence::PartialState19","value":"PartialState19 { A, B, C, D, E, F, G, H, I, J, K, L, M, N, P, Q, R, S, T }","parent":null,"children":[{"krate":0,"index":9566},{"krate":0,"index":9567},{"krate":0,"index":9568},{"krate":0,"index":9569},{"krate":0,"index":9570},{"krate":0,"index":9571},{"krate":0,"index":9572},{"krate":0,"index":9573},{"krate":0,"index":9574},{"krate":0,"index":9575},{"krate":0,"index":9576},{"krate":0,"index":9577},{"krate":0,"index":9578},{"krate":0,"index":9579},{"krate":0,"index":9580},{"krate":0,"index":9581},{"krate":0,"index":9582},{"krate":0,"index":9583},{"krate":0,"index":9584},{"krate":0,"index":9585},{"krate":0,"index":9586}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":433674,"byte_end":433698,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":9566},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443789,"byte_end":443790,"line_start":303,"line_end":303,"column_start":31,"column_end":32},"name":"A","qualname":"::parser::sequence::PartialState19::A","value":"A","parent":{"krate":0,"index":9546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9567},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443792,"byte_end":443793,"line_start":303,"line_end":303,"column_start":34,"column_end":35},"name":"B","qualname":"::parser::sequence::PartialState19::B","value":"B","parent":{"krate":0,"index":9546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9568},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443795,"byte_end":443796,"line_start":303,"line_end":303,"column_start":37,"column_end":38},"name":"C","qualname":"::parser::sequence::PartialState19::C","value":"C","parent":{"krate":0,"index":9546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9569},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443798,"byte_end":443799,"line_start":303,"line_end":303,"column_start":40,"column_end":41},"name":"D","qualname":"::parser::sequence::PartialState19::D","value":"D","parent":{"krate":0,"index":9546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9570},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443801,"byte_end":443802,"line_start":303,"line_end":303,"column_start":43,"column_end":44},"name":"E","qualname":"::parser::sequence::PartialState19::E","value":"E","parent":{"krate":0,"index":9546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9571},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443804,"byte_end":443805,"line_start":303,"line_end":303,"column_start":46,"column_end":47},"name":"F","qualname":"::parser::sequence::PartialState19::F","value":"F","parent":{"krate":0,"index":9546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9572},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443807,"byte_end":443808,"line_start":303,"line_end":303,"column_start":49,"column_end":50},"name":"G","qualname":"::parser::sequence::PartialState19::G","value":"G","parent":{"krate":0,"index":9546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9573},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443810,"byte_end":443811,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"H","qualname":"::parser::sequence::PartialState19::H","value":"H","parent":{"krate":0,"index":9546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9574},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443813,"byte_end":443814,"line_start":303,"line_end":303,"column_start":55,"column_end":56},"name":"I","qualname":"::parser::sequence::PartialState19::I","value":"I","parent":{"krate":0,"index":9546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9575},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443816,"byte_end":443817,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"J","qualname":"::parser::sequence::PartialState19::J","value":"J","parent":{"krate":0,"index":9546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9576},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443819,"byte_end":443820,"line_start":303,"line_end":303,"column_start":61,"column_end":62},"name":"K","qualname":"::parser::sequence::PartialState19::K","value":"K","parent":{"krate":0,"index":9546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9577},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443822,"byte_end":443823,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"L","qualname":"::parser::sequence::PartialState19::L","value":"L","parent":{"krate":0,"index":9546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9578},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443825,"byte_end":443826,"line_start":303,"line_end":303,"column_start":67,"column_end":68},"name":"M","qualname":"::parser::sequence::PartialState19::M","value":"M","parent":{"krate":0,"index":9546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9579},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443828,"byte_end":443829,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"N","qualname":"::parser::sequence::PartialState19::N","value":"N","parent":{"krate":0,"index":9546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9580},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443831,"byte_end":443832,"line_start":303,"line_end":303,"column_start":73,"column_end":74},"name":"P","qualname":"::parser::sequence::PartialState19::P","value":"P","parent":{"krate":0,"index":9546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9581},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443834,"byte_end":443835,"line_start":303,"line_end":303,"column_start":76,"column_end":77},"name":"Q","qualname":"::parser::sequence::PartialState19::Q","value":"Q","parent":{"krate":0,"index":9546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9582},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443837,"byte_end":443838,"line_start":303,"line_end":303,"column_start":79,"column_end":80},"name":"R","qualname":"::parser::sequence::PartialState19::R","value":"R","parent":{"krate":0,"index":9546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9583},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443840,"byte_end":443841,"line_start":303,"line_end":303,"column_start":82,"column_end":83},"name":"S","qualname":"::parser::sequence::PartialState19::S","value":"S","parent":{"krate":0,"index":9546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9584},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443843,"byte_end":443844,"line_start":303,"line_end":303,"column_start":85,"column_end":86},"name":"T","qualname":"::parser::sequence::PartialState19::T","value":"T","parent":{"krate":0,"index":9546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9683},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443861,"byte_end":443875,"line_start":304,"line_end":304,"column_start":15,"column_end":29},"name":"PartialState20","qualname":"::parser::sequence::PartialState20","value":"PartialState20 { A, B, C, D, E, F, G, H, I, J, K, L, M, N, P, Q, R, S, T, U }","parent":null,"children":[{"krate":0,"index":9704},{"krate":0,"index":9705},{"krate":0,"index":9706},{"krate":0,"index":9707},{"krate":0,"index":9708},{"krate":0,"index":9709},{"krate":0,"index":9710},{"krate":0,"index":9711},{"krate":0,"index":9712},{"krate":0,"index":9713},{"krate":0,"index":9714},{"krate":0,"index":9715},{"krate":0,"index":9716},{"krate":0,"index":9717},{"krate":0,"index":9718},{"krate":0,"index":9719},{"krate":0,"index":9720},{"krate":0,"index":9721},{"krate":0,"index":9722},{"krate":0,"index":9723},{"krate":0,"index":9724},{"krate":0,"index":9725}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":433674,"byte_end":433698,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":9704},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443877,"byte_end":443878,"line_start":304,"line_end":304,"column_start":31,"column_end":32},"name":"A","qualname":"::parser::sequence::PartialState20::A","value":"A","parent":{"krate":0,"index":9683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9705},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443880,"byte_end":443881,"line_start":304,"line_end":304,"column_start":34,"column_end":35},"name":"B","qualname":"::parser::sequence::PartialState20::B","value":"B","parent":{"krate":0,"index":9683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9706},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443883,"byte_end":443884,"line_start":304,"line_end":304,"column_start":37,"column_end":38},"name":"C","qualname":"::parser::sequence::PartialState20::C","value":"C","parent":{"krate":0,"index":9683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9707},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443886,"byte_end":443887,"line_start":304,"line_end":304,"column_start":40,"column_end":41},"name":"D","qualname":"::parser::sequence::PartialState20::D","value":"D","parent":{"krate":0,"index":9683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9708},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443889,"byte_end":443890,"line_start":304,"line_end":304,"column_start":43,"column_end":44},"name":"E","qualname":"::parser::sequence::PartialState20::E","value":"E","parent":{"krate":0,"index":9683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9709},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443892,"byte_end":443893,"line_start":304,"line_end":304,"column_start":46,"column_end":47},"name":"F","qualname":"::parser::sequence::PartialState20::F","value":"F","parent":{"krate":0,"index":9683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9710},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443895,"byte_end":443896,"line_start":304,"line_end":304,"column_start":49,"column_end":50},"name":"G","qualname":"::parser::sequence::PartialState20::G","value":"G","parent":{"krate":0,"index":9683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9711},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443898,"byte_end":443899,"line_start":304,"line_end":304,"column_start":52,"column_end":53},"name":"H","qualname":"::parser::sequence::PartialState20::H","value":"H","parent":{"krate":0,"index":9683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9712},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443901,"byte_end":443902,"line_start":304,"line_end":304,"column_start":55,"column_end":56},"name":"I","qualname":"::parser::sequence::PartialState20::I","value":"I","parent":{"krate":0,"index":9683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9713},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443904,"byte_end":443905,"line_start":304,"line_end":304,"column_start":58,"column_end":59},"name":"J","qualname":"::parser::sequence::PartialState20::J","value":"J","parent":{"krate":0,"index":9683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9714},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443907,"byte_end":443908,"line_start":304,"line_end":304,"column_start":61,"column_end":62},"name":"K","qualname":"::parser::sequence::PartialState20::K","value":"K","parent":{"krate":0,"index":9683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9715},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443910,"byte_end":443911,"line_start":304,"line_end":304,"column_start":64,"column_end":65},"name":"L","qualname":"::parser::sequence::PartialState20::L","value":"L","parent":{"krate":0,"index":9683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9716},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443913,"byte_end":443914,"line_start":304,"line_end":304,"column_start":67,"column_end":68},"name":"M","qualname":"::parser::sequence::PartialState20::M","value":"M","parent":{"krate":0,"index":9683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9717},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443916,"byte_end":443917,"line_start":304,"line_end":304,"column_start":70,"column_end":71},"name":"N","qualname":"::parser::sequence::PartialState20::N","value":"N","parent":{"krate":0,"index":9683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9718},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443919,"byte_end":443920,"line_start":304,"line_end":304,"column_start":73,"column_end":74},"name":"P","qualname":"::parser::sequence::PartialState20::P","value":"P","parent":{"krate":0,"index":9683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9719},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443922,"byte_end":443923,"line_start":304,"line_end":304,"column_start":76,"column_end":77},"name":"Q","qualname":"::parser::sequence::PartialState20::Q","value":"Q","parent":{"krate":0,"index":9683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9720},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443925,"byte_end":443926,"line_start":304,"line_end":304,"column_start":79,"column_end":80},"name":"R","qualname":"::parser::sequence::PartialState20::R","value":"R","parent":{"krate":0,"index":9683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9721},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443928,"byte_end":443929,"line_start":304,"line_end":304,"column_start":82,"column_end":83},"name":"S","qualname":"::parser::sequence::PartialState20::S","value":"S","parent":{"krate":0,"index":9683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9722},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443931,"byte_end":443932,"line_start":304,"line_end":304,"column_start":85,"column_end":86},"name":"T","qualname":"::parser::sequence::PartialState20::T","value":"T","parent":{"krate":0,"index":9683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9723},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":443934,"byte_end":443935,"line_start":304,"line_end":304,"column_start":88,"column_end":89},"name":"U","qualname":"::parser::sequence::PartialState20::U","value":"U","parent":{"krate":0,"index":9683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9770},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":450494,"byte_end":450498,"line_start":498,"line_end":498,"column_start":12,"column_end":16},"name":"With","qualname":"::parser::sequence::With","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3378},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":451485,"byte_end":451489,"line_start":536,"line_end":536,"column_start":8,"column_end":12},"name":"with","qualname":"::parser::sequence::with","value":"pub fn with<Input, P1, P2>(P1, P2) -> With<P1, P2> where Input: Stream,\nP1: Parser<Input>, P2: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p1.with(p2)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p1.with(p2)`].","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":451385,"byte_end":451419,"line_start":533,"line_end":533,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":451420,"byte_end":451423,"line_start":534,"line_end":534,"column_start":1,"column_end":4}},{"value":"/ [`p1.with(p2)`]: ../trait.Parser.html#method.with","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":451424,"byte_end":451477,"line_start":535,"line_end":535,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":9787},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":451674,"byte_end":451678,"line_start":546,"line_end":546,"column_start":12,"column_end":16},"name":"Skip","qualname":"::parser::sequence::Skip","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3391},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":452370,"byte_end":452374,"line_start":573,"line_end":573,"column_start":8,"column_end":12},"name":"skip","qualname":"::parser::sequence::skip","value":"pub fn skip<Input, P1, P2>(P1, P2) -> Skip<P1, P2> where Input: Stream,\nP1: Parser<Input>, P2: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9828},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":452577,"byte_end":452584,"line_start":584,"line_end":584,"column_start":16,"column_end":23},"name":"Between","qualname":"::parser::sequence::Between","value":"Between { open, close, parser }","parent":null,"children":[{"krate":0,"index":9833},{"krate":0,"index":9834},{"krate":0,"index":9835},{"krate":0,"index":9836}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9833},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":453124,"byte_end":453128,"line_start":600,"line_end":600,"column_start":32,"column_end":36},"name":"open","qualname":"::parser::sequence::Between::open","value":"L","parent":{"krate":0,"index":9828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9834},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":453133,"byte_end":453138,"line_start":600,"line_end":600,"column_start":41,"column_end":46},"name":"close","qualname":"::parser::sequence::Between::close","value":"R","parent":{"krate":0,"index":9828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9835},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":453143,"byte_end":453149,"line_start":600,"line_end":600,"column_start":51,"column_end":57},"name":"parser","qualname":"::parser::sequence::Between::parser","value":"P","parent":{"krate":0,"index":9828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":9823},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":453100,"byte_end":453107,"line_start":600,"line_end":600,"column_start":8,"column_end":15},"name":"between","qualname":"::parser::sequence::between","value":"pub fn between<Input, L, R, P>(L, R, P) -> Between<Input, L, R, P> where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, Input: Stream, L: Parser<Input>,\nR: Parser<Input>, P: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses `open` followed by `parser` followed by `close`.\n Returns the value of `parser`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":19233,"byte_end":19242,"line_start":509,"line_end":509,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":9854},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":453419,"byte_end":453423,"line_start":616,"line_end":616,"column_start":12,"column_end":16},"name":"Then","qualname":"::parser::sequence::Then","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3405},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":455736,"byte_end":455740,"line_start":695,"line_end":695,"column_start":8,"column_end":12},"name":"then","qualname":"::parser::sequence::then","value":"pub fn then<Input, P, F, N>(P, F) -> Then<P, F> where Input: Stream,\nF: FnMut(P::Output) -> N, P: Parser<Input>, N: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.then(f)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.then(f)`].","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":455640,"byte_end":455672,"line_start":692,"line_end":692,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":455673,"byte_end":455676,"line_start":693,"line_end":693,"column_start":1,"column_end":4}},{"value":"/ [`p.then(f)`]: ../trait.Parser.html#method.then","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":455677,"byte_end":455728,"line_start":694,"line_end":694,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":9869},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":455936,"byte_end":455947,"line_start":706,"line_end":706,"column_start":12,"column_end":23},"name":"ThenPartial","qualname":"::parser::sequence::ThenPartial","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3420},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":458228,"byte_end":458240,"line_start":781,"line_end":781,"column_start":8,"column_end":20},"name":"then_partial","qualname":"::parser::sequence::then_partial","value":"pub fn then_partial<Input, P, F, N>(P, F) -> ThenPartial<P, F> where\nInput: Stream, F: FnMut(&mut P::Output) -> N, P: Parser<Input>,\nN: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.then_partial(f)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.then_partial(f)`].","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":458108,"byte_end":458148,"line_start":778,"line_end":778,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":458149,"byte_end":458152,"line_start":779,"line_end":779,"column_start":1,"column_end":4}},{"value":"/ [`p.then_partial(f)`]: ../trait.Parser.html#method.then_partial","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":458153,"byte_end":458220,"line_start":780,"line_end":780,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":9884},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":458659,"byte_end":458666,"line_start":803,"line_end":803,"column_start":12,"column_end":19},"name":"ThenRef","qualname":"::parser::sequence::ThenRef","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3435},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":461162,"byte_end":461170,"line_start":888,"line_end":888,"column_start":8,"column_end":16},"name":"then_ref","qualname":"::parser::sequence::then_ref","value":"pub fn then_ref<Input, P, F, N>(P, F) -> ThenRef<P, F> where Input: Stream,\nF: FnMut(&P::Output) -> N, P: Parser<Input>, N: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.then_ref(f)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.then_ref(f)`].","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":461058,"byte_end":461094,"line_start":885,"line_end":885,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":461095,"byte_end":461098,"line_start":886,"line_end":886,"column_start":1,"column_end":4}},{"value":"/ [`p.then_ref(f)`]: ../trait.Parser.html#method.then","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":461099,"byte_end":461154,"line_start":887,"line_end":887,"column_start":1,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":3440},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"token","qualname":"::parser::token","value":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","parent":null,"children":[{"krate":0,"index":3441},{"krate":0,"index":3442},{"krate":0,"index":3443},{"krate":0,"index":3446},{"krate":0,"index":3449},{"krate":0,"index":3452},{"krate":0,"index":3453},{"krate":0,"index":3456},{"krate":0,"index":3457},{"krate":0,"index":3460},{"krate":0,"index":3463},{"krate":0,"index":3466},{"krate":0,"index":3467},{"krate":0,"index":3469},{"krate":0,"index":3470},{"krate":0,"index":3473},{"krate":0,"index":3476},{"krate":0,"index":3479},{"krate":0,"index":9899},{"krate":0,"index":9903},{"krate":0,"index":9905},{"krate":0,"index":3482},{"krate":0,"index":3487},{"krate":0,"index":9908},{"krate":0,"index":9913},{"krate":0,"index":9916},{"krate":0,"index":3489},{"krate":0,"index":3493},{"krate":0,"index":3500},{"krate":0,"index":9920},{"krate":0,"index":9925},{"krate":0,"index":9928},{"krate":0,"index":3503},{"krate":0,"index":3510},{"krate":0,"index":9932},{"krate":0,"index":9936},{"krate":0,"index":9938},{"krate":0,"index":3514},{"krate":0,"index":3521},{"krate":0,"index":9941},{"krate":0,"index":9950},{"krate":0,"index":3523},{"krate":0,"index":3533},{"krate":0,"index":9956},{"krate":0,"index":9963},{"krate":0,"index":3538},{"krate":0,"index":3545},{"krate":0,"index":9968},{"krate":0,"index":9971},{"krate":0,"index":9973},{"krate":0,"index":3549},{"krate":0,"index":3554},{"krate":0,"index":9976},{"krate":0,"index":9981},{"krate":0,"index":9984},{"krate":0,"index":3556},{"krate":0,"index":3565},{"krate":0,"index":9988},{"krate":0,"index":9993},{"krate":0,"index":9996},{"krate":0,"index":3568},{"krate":0,"index":3576},{"krate":0,"index":10000},{"krate":0,"index":10006},{"krate":0,"index":10009},{"krate":0,"index":3579},{"krate":0,"index":3585},{"krate":0,"index":10013},{"krate":0,"index":10019},{"krate":0,"index":10022},{"krate":0,"index":3588},{"krate":0,"index":3595},{"krate":0,"index":10026},{"krate":0,"index":10030},{"krate":0,"index":10032},{"krate":0,"index":3599},{"krate":0,"index":3605}],"decl_id":null,"docs":" Parsers working with single stream items.\n","sig":null,"attributes":[{"value":"/ Parsers working with single stream items.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":461339,"byte_end":461384,"line_start":1,"line_end":1,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":9899},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":461651,"byte_end":461654,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"Any","qualname":"::parser::token::Any","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3487},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":462382,"byte_end":462385,"line_start":44,"line_end":44,"column_start":8,"column_end":11},"name":"any","qualname":"::parser::token::any","value":"pub fn any<Input>() -> Any<Input> where Input: Stream","parent":null,"children":[],"decl_id":null,"docs":" Parses any token.","sig":null,"attributes":[{"value":"/ Parses any token.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":461964,"byte_end":461985,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":461986,"byte_end":461989,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":461990,"byte_end":461997,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":461998,"byte_end":462025,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":462026,"byte_end":462047,"line_start":34,"line_end":34,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":462048,"byte_end":462065,"line_start":35,"line_end":35,"column_start":1,"column_end":18}},{"value":"/ let mut char_parser = any();","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":462066,"byte_end":462098,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(char_parser.parse(\"!\").map(|x| x.0), Ok('!'));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":462099,"byte_end":462160,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/ assert!(char_parser.parse(\"\").is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":462161,"byte_end":462205,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/ let mut byte_parser = any();","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":462206,"byte_end":462238,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(byte_parser.parse(&b\"!\"[..]).map(|x| x.0), Ok(b'!'));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":462239,"byte_end":462307,"line_start":40,"line_end":40,"column_start":1,"column_end":69}},{"value":"/ assert!(byte_parser.parse(&b\"\"[..]).is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":462308,"byte_end":462358,"line_start":41,"line_end":41,"column_start":1,"column_end":51}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":462359,"byte_end":462366,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":462367,"byte_end":462374,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9908},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":462494,"byte_end":462501,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"Satisfy","qualname":"::parser::token::Satisfy","value":"Satisfy {  }","parent":null,"children":[{"krate":0,"index":9911},{"krate":0,"index":9912}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3500},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":463862,"byte_end":463869,"line_start":104,"line_end":104,"column_start":8,"column_end":15},"name":"satisfy","qualname":"::parser::token::satisfy","value":"pub fn satisfy<Input, P>(P) -> Satisfy<Input, P> where Input: Stream,\nP: FnMut(Input::Token) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Parses a token and succeeds depending on the result of `predicate`.","sig":null,"attributes":[{"value":"/ Parses a token and succeeds depending on the result of `predicate`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":463517,"byte_end":463588,"line_start":93,"line_end":93,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":463589,"byte_end":463592,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":463593,"byte_end":463600,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":463601,"byte_end":463628,"line_start":96,"line_end":96,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":463629,"byte_end":463650,"line_start":97,"line_end":97,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":463651,"byte_end":463668,"line_start":98,"line_end":98,"column_start":1,"column_end":18}},{"value":"/ let mut parser = satisfy(|c| c == '!' || c == '?');","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":463669,"byte_end":463724,"line_start":99,"line_end":99,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser.parse(\"!\").map(|x| x.0), Ok('!'));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":463725,"byte_end":463781,"line_start":100,"line_end":100,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(parser.parse(\"?\").map(|x| x.0), Ok('?'));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":463782,"byte_end":463838,"line_start":101,"line_end":101,"column_start":1,"column_end":57}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":463839,"byte_end":463846,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":463847,"byte_end":463854,"line_start":103,"line_end":103,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9920},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":464084,"byte_end":464094,"line_start":116,"line_end":116,"column_start":12,"column_end":22},"name":"SatisfyMap","qualname":"::parser::token::SatisfyMap","value":"SatisfyMap {  }","parent":null,"children":[{"krate":0,"index":9923},{"krate":0,"index":9924}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3510},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":465198,"byte_end":465209,"line_start":158,"line_end":158,"column_start":8,"column_end":19},"name":"satisfy_map","qualname":"::parser::token::satisfy_map","value":"pub fn satisfy_map<Input, P, R>(P) -> SatisfyMap<Input, P> where\nInput: Stream, P: FnMut(Input::Token) -> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" Parses a token and passes it to `predicate`. If `predicate` returns `Some` the parser succeeds\n and returns the value inside the `Option`. If `predicate` returns `None` the parser fails\n without consuming any input.","sig":null,"attributes":[{"value":"/ Parses a token and passes it to `predicate`. If `predicate` returns `Some` the parser succeeds","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":464500,"byte_end":464598,"line_start":134,"line_end":134,"column_start":1,"column_end":99}},{"value":"/ and returns the value inside the `Option`. If `predicate` returns `None` the parser fails","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":464599,"byte_end":464692,"line_start":135,"line_end":135,"column_start":1,"column_end":94}},{"value":"/ without consuming any input.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":464693,"byte_end":464725,"line_start":136,"line_end":136,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":464726,"byte_end":464729,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":464730,"byte_end":464737,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":464738,"byte_end":464765,"line_start":139,"line_end":139,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":464766,"byte_end":464787,"line_start":140,"line_end":140,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":464788,"byte_end":464805,"line_start":141,"line_end":141,"column_start":1,"column_end":18}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":464806,"byte_end":464837,"line_start":142,"line_end":142,"column_start":1,"column_end":32}},{"value":"/ enum YesNo {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":464838,"byte_end":464854,"line_start":143,"line_end":143,"column_start":1,"column_end":17}},{"value":"/     Yes,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":464855,"byte_end":464867,"line_start":144,"line_end":144,"column_start":1,"column_end":13}},{"value":"/     No,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":464868,"byte_end":464879,"line_start":145,"line_end":145,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":464880,"byte_end":464885,"line_start":146,"line_end":146,"column_start":1,"column_end":6}},{"value":"/ let mut parser = satisfy_map(|c| {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":464886,"byte_end":464924,"line_start":147,"line_end":147,"column_start":1,"column_end":39}},{"value":"/     match c {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":464925,"byte_end":464942,"line_start":148,"line_end":148,"column_start":1,"column_end":18}},{"value":"/         'Y' => Some(YesNo::Yes),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":464943,"byte_end":464979,"line_start":149,"line_end":149,"column_start":1,"column_end":37}},{"value":"/         'N' => Some(YesNo::No),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":464980,"byte_end":465015,"line_start":150,"line_end":150,"column_start":1,"column_end":36}},{"value":"/         _ => None,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":465016,"byte_end":465038,"line_start":151,"line_end":151,"column_start":1,"column_end":23}},{"value":"/     }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":465039,"byte_end":465048,"line_start":152,"line_end":152,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":465049,"byte_end":465056,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(parser.parse(\"Y\").map(|x| x.0), Ok(YesNo::Yes));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":465057,"byte_end":465120,"line_start":154,"line_end":154,"column_start":1,"column_end":64}},{"value":"/ assert!(parser.parse(\"A\").map(|x| x.0).is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":465121,"byte_end":465174,"line_start":155,"line_end":155,"column_start":1,"column_end":54}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":465175,"byte_end":465182,"line_start":156,"line_end":156,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":465183,"byte_end":465190,"line_start":157,"line_end":157,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9932},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":465438,"byte_end":465443,"line_start":170,"line_end":170,"column_start":12,"column_end":17},"name":"Token","qualname":"::parser::token::Token","value":"Token {  }","parent":null,"children":[{"krate":0,"index":9934},{"krate":0,"index":9935}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3521},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":466352,"byte_end":466357,"line_start":208,"line_end":208,"column_start":8,"column_end":13},"name":"token","qualname":"::parser::token::token","value":"pub fn token<Input>(Input::Token) -> Token<Input> where Input: Stream,\nInput::Token: PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Parses a character and succeeds if the character is equal to `c`.","sig":null,"attributes":[{"value":"/ Parses a character and succeeds if the character is equal to `c`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":466075,"byte_end":466144,"line_start":196,"line_end":196,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":466145,"byte_end":466148,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":466149,"byte_end":466156,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":466157,"byte_end":466184,"line_start":199,"line_end":199,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":466185,"byte_end":466206,"line_start":200,"line_end":200,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":466207,"byte_end":466224,"line_start":201,"line_end":201,"column_start":1,"column_end":18}},{"value":"/ let result = token('!')","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":466225,"byte_end":466252,"line_start":202,"line_end":202,"column_start":1,"column_end":28}},{"value":"/     .parse(\"!\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":466253,"byte_end":466272,"line_start":203,"line_end":203,"column_start":1,"column_end":20}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":466273,"byte_end":466295,"line_start":204,"line_end":204,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok('!'));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":466296,"byte_end":466328,"line_start":205,"line_end":205,"column_start":1,"column_end":33}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":466329,"byte_end":466336,"line_start":206,"line_end":206,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":466337,"byte_end":466344,"line_start":207,"line_end":207,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9941},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":466544,"byte_end":466550,"line_start":220,"line_end":220,"column_start":12,"column_end":18},"name":"Tokens","qualname":"::parser::token::Tokens","value":"Tokens {  }","parent":null,"children":[{"krate":0,"index":9946},{"krate":0,"index":9947},{"krate":0,"index":9948},{"krate":0,"index":9949}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3533},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":469492,"byte_end":469498,"line_start":310,"line_end":310,"column_start":8,"column_end":14},"name":"tokens","qualname":"::parser::token::tokens","value":"pub fn tokens<C, E, T, Input>(C, E, T) -> Tokens<C, E, T, Input> where\nC: FnMut(T::Item, Input::Token) -> bool, T: Clone + IntoIterator,\nInput: Stream","parent":null,"children":[],"decl_id":null,"docs":" Parses multiple tokens.","sig":null,"attributes":[{"value":"/ Parses multiple tokens.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":468665,"byte_end":468692,"line_start":285,"line_end":285,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":468693,"byte_end":468696,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ Consumes items from the input and compares them to the values from `tokens` using the","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":468697,"byte_end":468786,"line_start":287,"line_end":287,"column_start":1,"column_end":90}},{"value":"/ comparison function `cmp`. Succeeds if all the items from `tokens` are matched in the input","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":468787,"byte_end":468882,"line_start":288,"line_end":288,"column_start":1,"column_end":96}},{"value":"/ stream and fails otherwise with `expected` used as part of the error.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":468883,"byte_end":468956,"line_start":289,"line_end":289,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":468957,"byte_end":468960,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":468961,"byte_end":468968,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":468969,"byte_end":468996,"line_start":292,"line_end":292,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":468997,"byte_end":469018,"line_start":293,"line_end":293,"column_start":1,"column_end":22}},{"value":"/ # use combine::error;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":469019,"byte_end":469044,"line_start":294,"line_end":294,"column_start":1,"column_end":26}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":469045,"byte_end":469062,"line_start":295,"line_end":295,"column_start":1,"column_end":18}},{"value":"/ let result = tokens(|l, r| l.eq_ignore_ascii_case(&r), \"abc\", \"abc\".chars())","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":469063,"byte_end":469143,"line_start":296,"line_end":296,"column_start":1,"column_end":81}},{"value":"/     .parse(\"AbC\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":469144,"byte_end":469165,"line_start":297,"line_end":297,"column_start":1,"column_end":22}},{"value":"/     .map(|x| x.0.as_str());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":469166,"byte_end":469197,"line_start":298,"line_end":298,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(result, Ok(\"abc\"));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":469198,"byte_end":469232,"line_start":299,"line_end":299,"column_start":1,"column_end":35}},{"value":"/ let result = tokens(","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":469233,"byte_end":469257,"line_start":300,"line_end":300,"column_start":1,"column_end":25}},{"value":"/     |&l, r| (if l < r { r - l } else { l - r }) <= 2,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":469258,"byte_end":469315,"line_start":301,"line_end":301,"column_start":1,"column_end":58}},{"value":"/     error::Range(&b\"025\"[..]),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":469316,"byte_end":469350,"line_start":302,"line_end":302,"column_start":1,"column_end":35}},{"value":"/     &b\"025\"[..]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":469351,"byte_end":469370,"line_start":303,"line_end":303,"column_start":1,"column_end":20}},{"value":"/ )","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":469371,"byte_end":469376,"line_start":304,"line_end":304,"column_start":1,"column_end":6}},{"value":"/     .parse(&b\"123\"[..])","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":469377,"byte_end":469404,"line_start":305,"line_end":305,"column_start":1,"column_end":28}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":469405,"byte_end":469427,"line_start":306,"line_end":306,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(&b\"025\"[..]));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":469428,"byte_end":469468,"line_start":307,"line_end":307,"column_start":1,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":469469,"byte_end":469476,"line_start":308,"line_end":308,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":469477,"byte_end":469484,"line_start":309,"line_end":309,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9956},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":469801,"byte_end":469810,"line_start":325,"line_end":325,"column_start":12,"column_end":21},"name":"TokensCmp","qualname":"::parser::token::TokensCmp","value":"TokensCmp {  }","parent":null,"children":[{"krate":0,"index":9960},{"krate":0,"index":9961},{"krate":0,"index":9962}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3545},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":472422,"byte_end":472432,"line_start":410,"line_end":410,"column_start":8,"column_end":18},"name":"tokens_cmp","qualname":"::parser::token::tokens_cmp","value":"pub fn tokens_cmp<C, T, I>(T, C) -> TokensCmp<C, T, I> where\nC: FnMut(T::Item, I::Token) -> bool, T: Clone + IntoIterator, I: Stream","parent":null,"children":[],"decl_id":null,"docs":" Parses multiple tokens.","sig":null,"attributes":[{"value":"/ Parses multiple tokens.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":471637,"byte_end":471664,"line_start":385,"line_end":385,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":471665,"byte_end":471668,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ Consumes items from the input and compares them to the values from `tokens` using the","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":471669,"byte_end":471758,"line_start":387,"line_end":387,"column_start":1,"column_end":90}},{"value":"/ comparison function `cmp`. Succeeds if all the items from `tokens` are matched in the input","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":471759,"byte_end":471854,"line_start":388,"line_end":388,"column_start":1,"column_end":96}},{"value":"/ stream and fails otherwise.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":471855,"byte_end":471886,"line_start":389,"line_end":389,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":471887,"byte_end":471890,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":471891,"byte_end":471898,"line_start":391,"line_end":391,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":471899,"byte_end":471926,"line_start":392,"line_end":392,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":471927,"byte_end":471948,"line_start":393,"line_end":393,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":471949,"byte_end":471966,"line_start":394,"line_end":394,"column_start":1,"column_end":18}},{"value":"/ # #[allow(deprecated)]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":471967,"byte_end":471993,"line_start":395,"line_end":395,"column_start":1,"column_end":27}},{"value":"/ # use std::ascii::AsciiExt;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":471994,"byte_end":472025,"line_start":396,"line_end":396,"column_start":1,"column_end":32}},{"value":"/ let result = tokens_cmp(\"abc\".chars(), |l, r| l.eq_ignore_ascii_case(&r))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":472026,"byte_end":472103,"line_start":397,"line_end":397,"column_start":1,"column_end":78}},{"value":"/     .parse(\"AbC\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":472104,"byte_end":472125,"line_start":398,"line_end":398,"column_start":1,"column_end":22}},{"value":"/     .map(|x| x.0.as_str());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":472126,"byte_end":472157,"line_start":399,"line_end":399,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(result, Ok(\"abc\"));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":472158,"byte_end":472192,"line_start":400,"line_end":400,"column_start":1,"column_end":35}},{"value":"/ let result = tokens_cmp(","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":472193,"byte_end":472221,"line_start":401,"line_end":401,"column_start":1,"column_end":29}},{"value":"/     &b\"025\"[..],","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":472222,"byte_end":472242,"line_start":402,"line_end":402,"column_start":1,"column_end":21}},{"value":"/     |&l, r| (if l < r { r - l } else { l - r }) <= 2,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":472243,"byte_end":472300,"line_start":403,"line_end":403,"column_start":1,"column_end":58}},{"value":"/ )","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":472301,"byte_end":472306,"line_start":404,"line_end":404,"column_start":1,"column_end":6}},{"value":"/     .parse(&b\"123\"[..])","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":472307,"byte_end":472334,"line_start":405,"line_end":405,"column_start":1,"column_end":28}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":472335,"byte_end":472357,"line_start":406,"line_end":406,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(&b\"025\"[..]));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":472358,"byte_end":472398,"line_start":407,"line_end":407,"column_start":1,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":472399,"byte_end":472406,"line_start":408,"line_end":408,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":472407,"byte_end":472414,"line_start":409,"line_end":409,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9968},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":472694,"byte_end":472702,"line_start":424,"line_end":424,"column_start":12,"column_end":20},"name":"Position","qualname":"::parser::token::Position","value":"Position {  }","parent":null,"children":[{"krate":0,"index":9970}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3554},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":473579,"byte_end":473587,"line_start":459,"line_end":459,"column_start":8,"column_end":16},"name":"position","qualname":"::parser::token::position","value":"pub fn position<Input>() -> Position<Input> where Input: Stream","parent":null,"children":[],"decl_id":null,"docs":" Parser which just returns the current position in the stream.","sig":null,"attributes":[{"value":"/ Parser which just returns the current position in the stream.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":473062,"byte_end":473127,"line_start":444,"line_end":444,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":473128,"byte_end":473131,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":473132,"byte_end":473139,"line_start":446,"line_end":446,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":473140,"byte_end":473167,"line_start":447,"line_end":447,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":473168,"byte_end":473189,"line_start":448,"line_end":448,"column_start":1,"column_end":22}},{"value":"/ # use combine::stream::position::{self, SourcePosition};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":473190,"byte_end":473250,"line_start":449,"line_end":449,"column_start":1,"column_end":61}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":473251,"byte_end":473268,"line_start":450,"line_end":450,"column_start":1,"column_end":18}},{"value":"/ let result = (position(), token('!'), position())","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":473269,"byte_end":473322,"line_start":451,"line_end":451,"column_start":1,"column_end":54}},{"value":"/     .parse(position::Stream::new(\"!\"))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":473323,"byte_end":473365,"line_start":452,"line_end":452,"column_start":1,"column_end":43}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":473366,"byte_end":473388,"line_start":453,"line_end":453,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok((SourcePosition { line: 1, column: 1 },","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":473389,"byte_end":473454,"line_start":454,"line_end":454,"column_start":1,"column_end":66}},{"value":"/                        '!',","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":473455,"byte_end":473486,"line_start":455,"line_end":455,"column_start":1,"column_end":32}},{"value":"/                        SourcePosition { line: 1, column: 2 })));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":473487,"byte_end":473555,"line_start":456,"line_end":456,"column_start":1,"column_end":69}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":473556,"byte_end":473563,"line_start":457,"line_end":457,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":473564,"byte_end":473571,"line_start":458,"line_end":458,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9976},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":473731,"byte_end":473736,"line_start":469,"line_end":469,"column_start":12,"column_end":17},"name":"OneOf","qualname":"::parser::token::OneOf","value":"OneOf {  }","parent":null,"children":[{"krate":0,"index":9979},{"krate":0,"index":9980}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3565},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":474740,"byte_end":474746,"line_start":509,"line_end":509,"column_start":8,"column_end":14},"name":"one_of","qualname":"::parser::token::one_of","value":"pub fn one_of<T, Input>(T) -> OneOf<T, Input> where T: Clone + IntoIterator,\nInput: Stream, Input::Token: PartialEq<T::Item>","parent":null,"children":[],"decl_id":null,"docs":" Extract one token and succeeds if it is part of `tokens`.","sig":null,"attributes":[{"value":"/ Extract one token and succeeds if it is part of `tokens`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":474452,"byte_end":474513,"line_start":498,"line_end":498,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":474514,"byte_end":474517,"line_start":499,"line_end":499,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":474518,"byte_end":474525,"line_start":500,"line_end":500,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":474526,"byte_end":474553,"line_start":501,"line_end":501,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":474554,"byte_end":474575,"line_start":502,"line_end":502,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":474576,"byte_end":474593,"line_start":503,"line_end":503,"column_start":1,"column_end":18}},{"value":"/ let result = many(one_of(\"abc\".chars()))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":474594,"byte_end":474638,"line_start":504,"line_end":504,"column_start":1,"column_end":45}},{"value":"/     .parse(\"abd\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":474639,"byte_end":474661,"line_start":505,"line_end":505,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok((String::from(\"ab\"), \"d\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":474662,"byte_end":474716,"line_start":506,"line_end":506,"column_start":1,"column_end":55}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":474717,"byte_end":474724,"line_start":507,"line_end":507,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":474725,"byte_end":474732,"line_start":508,"line_end":508,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9988},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":474982,"byte_end":474988,"line_start":522,"line_end":522,"column_start":12,"column_end":18},"name":"NoneOf","qualname":"::parser::token::NoneOf","value":"NoneOf {  }","parent":null,"children":[{"krate":0,"index":9991},{"krate":0,"index":9992}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3576},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":476227,"byte_end":476234,"line_start":567,"line_end":567,"column_start":8,"column_end":15},"name":"none_of","qualname":"::parser::token::none_of","value":"pub fn none_of<T, Input>(T) -> NoneOf<T, Input> where T: Clone + IntoIterator,\nInput: Stream, Input::Token: PartialEq<T::Item>","parent":null,"children":[],"decl_id":null,"docs":" Extract one token and succeeds if it is not part of `tokens`.","sig":null,"attributes":[{"value":"/ Extract one token and succeeds if it is not part of `tokens`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":475497,"byte_end":475562,"line_start":545,"line_end":545,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":475563,"byte_end":475566,"line_start":546,"line_end":546,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":475567,"byte_end":475574,"line_start":547,"line_end":547,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":475575,"byte_end":475602,"line_start":548,"line_end":548,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":475603,"byte_end":475624,"line_start":549,"line_end":549,"column_start":1,"column_end":22}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":475625,"byte_end":475657,"line_start":550,"line_end":550,"column_start":1,"column_end":33}},{"value":"/ # use combine::stream::position;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":475658,"byte_end":475694,"line_start":551,"line_end":551,"column_start":1,"column_end":37}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":475695,"byte_end":475712,"line_start":552,"line_end":552,"column_start":1,"column_end":18}},{"value":"/ let mut parser = many1(none_of(b\"abc\".iter().cloned()));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":475713,"byte_end":475773,"line_start":553,"line_end":553,"column_start":1,"column_end":61}},{"value":"/ let result = parser.easy_parse(position::Stream::new(&b\"xyb\"[..]))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":475774,"byte_end":475844,"line_start":554,"line_end":554,"column_start":1,"column_end":71}},{"value":"/     .map(|(output, input)| (output, input.input));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":475845,"byte_end":475899,"line_start":555,"line_end":555,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(result, Ok((b\"xy\"[..].to_owned(), &b\"b\"[..])));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":475900,"byte_end":475962,"line_start":556,"line_end":556,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":475963,"byte_end":475966,"line_start":557,"line_end":557,"column_start":1,"column_end":4}},{"value":"/ let result = parser.easy_parse(position::Stream::new(&b\"ab\"[..]));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":475967,"byte_end":476037,"line_start":558,"line_end":558,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(result, Err(easy::Errors {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":476038,"byte_end":476079,"line_start":559,"line_end":559,"column_start":1,"column_end":42}},{"value":"/     position: 0,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":476080,"byte_end":476100,"line_start":560,"line_end":560,"column_start":1,"column_end":21}},{"value":"/     errors: vec![","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":476101,"byte_end":476122,"line_start":561,"line_end":561,"column_start":1,"column_end":22}},{"value":"/         easy::Error::Unexpected(easy::Info::Token(b'a')),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":476123,"byte_end":476184,"line_start":562,"line_end":562,"column_start":1,"column_end":62}},{"value":"/     ]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":476185,"byte_end":476194,"line_start":563,"line_end":563,"column_start":1,"column_end":10}},{"value":"/ }));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":476195,"byte_end":476203,"line_start":564,"line_end":564,"column_start":1,"column_end":9}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":476204,"byte_end":476211,"line_start":565,"line_end":565,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":476212,"byte_end":476219,"line_start":566,"line_end":566,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10000},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":476472,"byte_end":476477,"line_start":580,"line_end":580,"column_start":12,"column_end":17},"name":"Value","qualname":"::parser::token::Value","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3585},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":477073,"byte_end":477078,"line_start":606,"line_end":606,"column_start":8,"column_end":13},"name":"value","qualname":"::parser::token::value","value":"pub fn value<Input, T>(T) -> Value<Input, T> where Input: Stream, T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Always returns the value `v` without consuming any input.","sig":null,"attributes":[{"value":"/ Always returns the value `v` without consuming any input.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":476796,"byte_end":476857,"line_start":594,"line_end":594,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":476858,"byte_end":476861,"line_start":595,"line_end":595,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":476862,"byte_end":476869,"line_start":596,"line_end":596,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":476870,"byte_end":476897,"line_start":597,"line_end":597,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":476898,"byte_end":476919,"line_start":598,"line_end":598,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":476920,"byte_end":476937,"line_start":599,"line_end":599,"column_start":1,"column_end":18}},{"value":"/ let result = value(42)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":476938,"byte_end":476964,"line_start":600,"line_end":600,"column_start":1,"column_end":27}},{"value":"/     .parse(\"hello world\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":476965,"byte_end":476994,"line_start":601,"line_end":601,"column_start":1,"column_end":30}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":476995,"byte_end":477017,"line_start":602,"line_end":602,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(42));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":477018,"byte_end":477049,"line_start":603,"line_end":603,"column_start":1,"column_end":32}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":477050,"byte_end":477057,"line_start":604,"line_end":604,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":477058,"byte_end":477065,"line_start":605,"line_end":605,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10013},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":477218,"byte_end":477225,"line_start":615,"line_end":615,"column_start":12,"column_end":19},"name":"Produce","qualname":"::parser::token::Produce","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3595},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":477949,"byte_end":477956,"line_start":642,"line_end":642,"column_start":8,"column_end":15},"name":"produce","qualname":"::parser::token::produce","value":"pub fn produce<Input, F, R>(F) -> Produce<Input, F> where Input: Stream,\nF: FnMut() -> R","parent":null,"children":[],"decl_id":null,"docs":" Always returns the value produced by calling `f`.","sig":null,"attributes":[{"value":"/ Always returns the value produced by calling `f`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":477552,"byte_end":477605,"line_start":629,"line_end":629,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":477606,"byte_end":477609,"line_start":630,"line_end":630,"column_start":1,"column_end":4}},{"value":"/ Can be used when `value` is unable to be used for lack of `Clone` implementation on the value.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":477610,"byte_end":477708,"line_start":631,"line_end":631,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":477709,"byte_end":477712,"line_start":632,"line_end":632,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":477713,"byte_end":477720,"line_start":633,"line_end":633,"column_start":1,"column_end":8}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":477721,"byte_end":477742,"line_start":634,"line_end":634,"column_start":1,"column_end":22}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":477743,"byte_end":477774,"line_start":635,"line_end":635,"column_start":1,"column_end":32}},{"value":"/ struct NoClone;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":477775,"byte_end":477794,"line_start":636,"line_end":636,"column_start":1,"column_end":20}},{"value":"/ let result = produce(|| vec![NoClone])","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":477795,"byte_end":477837,"line_start":637,"line_end":637,"column_start":1,"column_end":43}},{"value":"/     .parse(\"hello world\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":477838,"byte_end":477867,"line_start":638,"line_end":638,"column_start":1,"column_end":30}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":477868,"byte_end":477890,"line_start":639,"line_end":639,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(vec![NoClone]));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":477891,"byte_end":477933,"line_start":640,"line_end":640,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":477934,"byte_end":477941,"line_start":641,"line_end":641,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10026},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":478110,"byte_end":478113,"line_start":651,"line_end":651,"column_start":12,"column_end":15},"name":"Eof","qualname":"::parser::token::Eof","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3605},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":479506,"byte_end":479509,"line_start":695,"line_end":695,"column_start":8,"column_end":11},"name":"eof","qualname":"::parser::token::eof","value":"pub fn eof<Input>() -> Eof<Input> where Input: Stream","parent":null,"children":[],"decl_id":null,"docs":" Succeeds only if the stream is at end of input, fails otherwise.","sig":null,"attributes":[{"value":"/ Succeeds only if the stream is at end of input, fails otherwise.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":478840,"byte_end":478908,"line_start":676,"line_end":676,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":478909,"byte_end":478912,"line_start":677,"line_end":677,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":478913,"byte_end":478920,"line_start":678,"line_end":678,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":478921,"byte_end":478948,"line_start":679,"line_end":679,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":478949,"byte_end":478970,"line_start":680,"line_end":680,"column_start":1,"column_end":22}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":478971,"byte_end":479003,"line_start":681,"line_end":681,"column_start":1,"column_end":33}},{"value":"/ # use combine::stream::position::{self, SourcePosition};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":479004,"byte_end":479064,"line_start":682,"line_end":682,"column_start":1,"column_end":61}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":479065,"byte_end":479082,"line_start":683,"line_end":683,"column_start":1,"column_end":18}},{"value":"/ let mut parser = eof();","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":479083,"byte_end":479110,"line_start":684,"line_end":684,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(parser.easy_parse(position::Stream::new(\"\")), Ok(((), position::Stream::new(\"\"))));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":479111,"byte_end":479209,"line_start":685,"line_end":685,"column_start":1,"column_end":99}},{"value":"/ assert_eq!(parser.easy_parse(position::Stream::new(\"x\")), Err(easy::Errors {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":479210,"byte_end":479290,"line_start":686,"line_end":686,"column_start":1,"column_end":81}},{"value":"/     position: SourcePosition::default(),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":479291,"byte_end":479335,"line_start":687,"line_end":687,"column_start":1,"column_end":45}},{"value":"/     errors: vec![","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":479336,"byte_end":479357,"line_start":688,"line_end":688,"column_start":1,"column_end":22}},{"value":"/         easy::Error::Unexpected('x'.into()),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":479358,"byte_end":479406,"line_start":689,"line_end":689,"column_start":1,"column_end":49}},{"value":"/         easy::Error::Expected(\"end of input\".into())","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":479407,"byte_end":479463,"line_start":690,"line_end":690,"column_start":1,"column_end":57}},{"value":"/     ]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":479464,"byte_end":479473,"line_start":691,"line_end":691,"column_start":1,"column_end":10}},{"value":"/ }));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":479474,"byte_end":479482,"line_start":692,"line_end":692,"column_start":1,"column_end":9}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":479483,"byte_end":479490,"line_start":693,"line_end":693,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":479491,"byte_end":479498,"line_start":694,"line_end":694,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":3607},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":212205,"byte_end":212211,"line_start":84,"line_end":84,"column_start":11,"column_end":17},"name":"Parser","qualname":"::parser::Parser","value":"Parser<Input: Stream>","parent":null,"children":[{"krate":0,"index":3609},{"krate":0,"index":3610},{"krate":0,"index":3611},{"krate":0,"index":3612},{"krate":0,"index":3613},{"krate":0,"index":3614},{"krate":0,"index":3615},{"krate":0,"index":3616},{"krate":0,"index":3617},{"krate":0,"index":3618},{"krate":0,"index":3619},{"krate":0,"index":3621},{"krate":0,"index":3623},{"krate":0,"index":3625},{"krate":0,"index":3626},{"krate":0,"index":3627},{"krate":0,"index":3628},{"krate":0,"index":3630},{"krate":0,"index":3632},{"krate":0,"index":3634},{"krate":0,"index":3636},{"krate":0,"index":3639},{"krate":0,"index":3642},{"krate":0,"index":3645},{"krate":0,"index":3648},{"krate":0,"index":3651},{"krate":0,"index":3654},{"krate":0,"index":3657},{"krate":0,"index":3660},{"krate":0,"index":3661},{"krate":0,"index":3665},{"krate":0,"index":3666},{"krate":0,"index":3670},{"krate":0,"index":3672},{"krate":0,"index":3674},{"krate":0,"index":3676}],"decl_id":null,"docs":" By implementing the `Parser` trait a type says that it can be used to parse an input stream\n into the type `Output`.","sig":null,"attributes":[{"value":"/ By implementing the `Parser` trait a type says that it can be used to parse an input stream","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":211529,"byte_end":211624,"line_start":72,"line_end":72,"column_start":1,"column_end":96}},{"value":"/ into the type `Output`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":211625,"byte_end":211652,"line_start":73,"line_end":73,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":211653,"byte_end":211656,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ All methods have a default implementation but there needs to be at least an implementation of","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":211657,"byte_end":211754,"line_start":75,"line_end":75,"column_start":1,"column_end":98}},{"value":"/ [`parse_stream`], [`parse_stream`], or [`parse_lazy`]. If the last is implemented, an","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":211755,"byte_end":211844,"line_start":76,"line_end":76,"column_start":1,"column_end":90}},{"value":"/ implementation of [`add_error`] may also be required. See the documentation for","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":211845,"byte_end":211928,"line_start":77,"line_end":77,"column_start":1,"column_end":84}},{"value":"/ [`parse_lazy`] for details.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":211929,"byte_end":211960,"line_start":78,"line_end":78,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":211961,"byte_end":211964,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ [`parse_stream`]: trait.Parser.html#method.parse_stream","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":211965,"byte_end":212024,"line_start":80,"line_end":80,"column_start":1,"column_end":60}},{"value":"/ [`parse_stream`]: trait.Parser.html#method.parse_stream","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":212025,"byte_end":212084,"line_start":81,"line_end":81,"column_start":1,"column_end":60}},{"value":"/ [`parse_lazy`]: trait.Parser.html#method.parse_lazy","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":212085,"byte_end":212140,"line_start":82,"line_end":82,"column_start":1,"column_end":56}},{"value":"/ [`add_error`]: trait.Parser.html#method.add_error","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":212141,"byte_end":212194,"line_start":83,"line_end":83,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":3609},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":212302,"byte_end":212308,"line_start":86,"line_end":86,"column_start":10,"column_end":16},"name":"Output","qualname":"::parser::Parser::Output","value":"type Output;","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" The type which is returned if the parser is successful.\n","sig":null,"attributes":[{"value":"/ The type which is returned if the parser is successful.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":212233,"byte_end":212292,"line_start":85,"line_end":85,"column_start":5,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":3610},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":212484,"byte_end":212496,"line_start":91,"line_end":91,"column_start":10,"column_end":22},"name":"PartialState","qualname":"::parser::Parser::PartialState","value":"type PartialState: Default;","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Determines the state necessary to resume parsing after more input is supplied.","sig":null,"attributes":[{"value":"/ Determines the state necessary to resume parsing after more input is supplied.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":212315,"byte_end":212397,"line_start":88,"line_end":88,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":212402,"byte_end":212405,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If partial parsing is not supported this can be set to `()`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":212410,"byte_end":212474,"line_start":90,"line_end":90,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3611},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":213137,"byte_end":213142,"line_start":105,"line_end":105,"column_start":8,"column_end":13},"name":"parse","qualname":"::parser::Parser::parse","value":"pub fn parse(&mut Self, Input)\n-> Result<(Self::Output, Input), <Input as StreamOnce>::Error>","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Entry point of the parser. Takes some input and tries to parse it.","sig":null,"attributes":[{"value":"/ Entry point of the parser. Takes some input and tries to parse it.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":212512,"byte_end":212582,"line_start":93,"line_end":93,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":212587,"byte_end":212590,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Returns the parsed result and the remaining input if the parser succeeds, or a","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":212595,"byte_end":212677,"line_start":95,"line_end":95,"column_start":5,"column_end":87}},{"value":"/ error otherwise.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":212682,"byte_end":212702,"line_start":96,"line_end":96,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":212707,"byte_end":212710,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ This is the most straightforward entry point to a parser. Since it does not decorate the","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":212715,"byte_end":212807,"line_start":98,"line_end":98,"column_start":5,"column_end":97}},{"value":"/ input in any way you may find the error messages a hard to read. If that is the case you","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":212812,"byte_end":212904,"line_start":99,"line_end":99,"column_start":5,"column_end":97}},{"value":"/ may want to try wrapping your input with an [`easy::Stream`] or call [`easy_parse`]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":212909,"byte_end":212996,"line_start":100,"line_end":100,"column_start":5,"column_end":92}},{"value":"/ instead.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":213001,"byte_end":213013,"line_start":101,"line_end":101,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":213018,"byte_end":213021,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ [`easy::Stream`]: super::easy::Stream","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":213026,"byte_end":213067,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/ [`easy_parse`]: super::parser::EasyParser::easy_parse","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":213072,"byte_end":213129,"line_start":104,"line_end":104,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3612},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":213666,"byte_end":213682,"line_start":120,"line_end":120,"column_start":8,"column_end":24},"name":"parse_with_state","qualname":"::parser::Parser::parse_with_state","value":"pub fn parse_with_state(&mut Self, &mut Input, &mut Self::PartialState)\n-> Result<Self::Output, <Input as StreamOnce>::Error>","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Entry point of the parser when using partial parsing.\n Takes some input and tries to parse it.","sig":null,"attributes":[{"value":"/ Entry point of the parser when using partial parsing.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":213433,"byte_end":213490,"line_start":115,"line_end":115,"column_start":5,"column_end":62}},{"value":"/ Takes some input and tries to parse it.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":213495,"byte_end":213538,"line_start":116,"line_end":116,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":213543,"byte_end":213546,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ Returns the parsed result and the remaining input if the parser succeeds, or a","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":213551,"byte_end":213633,"line_start":118,"line_end":118,"column_start":5,"column_end":87}},{"value":"/ error otherwise.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":213638,"byte_end":213658,"line_start":119,"line_end":119,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3613},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":214507,"byte_end":214519,"line_start":141,"line_end":141,"column_start":8,"column_end":20},"name":"parse_stream","qualname":"::parser::Parser::parse_stream","value":"pub fn parse_stream(&mut Self, &mut Input)\n-> ParseResult<Self::Output, <Input as StreamOnce>::Error>","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Parses using the stream `input` by calling [`Stream::uncons`] one or more times.","sig":null,"attributes":[{"value":"/ Parses using the stream `input` by calling [`Stream::uncons`] one or more times.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":214006,"byte_end":214090,"line_start":131,"line_end":131,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":214095,"byte_end":214098,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Semantically equivalent to [`parse_stream`], except this method returns a flattened result","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":214103,"byte_end":214197,"line_start":133,"line_end":133,"column_start":5,"column_end":99}},{"value":"/ type, combining `Result` and [`Commit`] into a single [`ParseResult`].","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":214202,"byte_end":214276,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":214281,"byte_end":214284,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ [`Stream::uncons`]: super::stream::StreamOnce::uncons","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":214289,"byte_end":214346,"line_start":136,"line_end":136,"column_start":5,"column_end":62}},{"value":"/ [`parse_stream`]: Parser::parse_stream","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":214351,"byte_end":214393,"line_start":137,"line_end":137,"column_start":5,"column_end":47}},{"value":"/ [`Commit`]: super::error::Commit","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":214398,"byte_end":214434,"line_start":138,"line_end":138,"column_start":5,"column_end":41}},{"value":"/ [`ParseResult`]: super::error::ParseResult","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":214439,"byte_end":214485,"line_start":139,"line_end":139,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":214490,"byte_end":214499,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3614},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":216305,"byte_end":216315,"line_start":180,"line_end":180,"column_start":8,"column_end":18},"name":"parse_lazy","qualname":"::parser::Parser::parse_lazy","value":"pub fn parse_lazy(&mut Self, &mut Input)\n-> ParseResult<Self::Output, <Input as StreamOnce>::Error>","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Parses using the stream `input` by calling [`Stream::uncons`] one or more times.","sig":null,"attributes":[{"value":"/ Parses using the stream `input` by calling [`Stream::uncons`] one or more times.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":215237,"byte_end":215321,"line_start":161,"line_end":161,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":215326,"byte_end":215329,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Specialized version of [`parse_stream`] which permits error value creation to be","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":215334,"byte_end":215418,"line_start":163,"line_end":163,"column_start":5,"column_end":89}},{"value":"/ skipped in the common case.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":215423,"byte_end":215454,"line_start":164,"line_end":164,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":215459,"byte_end":215462,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ When this parser returns `PeekErr`, this method is allowed to return an empty","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":215467,"byte_end":215548,"line_start":166,"line_end":166,"column_start":5,"column_end":86}},{"value":"/ [`Error`]. The error value that would have been returned can instead be obtained by","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":215553,"byte_end":215640,"line_start":167,"line_end":167,"column_start":5,"column_end":92}},{"value":"/ calling [`add_error`]. This allows a parent parser such as `choice` to skip the creation of","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":215645,"byte_end":215740,"line_start":168,"line_end":168,"column_start":5,"column_end":100}},{"value":"/ an unnecessary error value, if an alternative parser succeeds.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":215745,"byte_end":215811,"line_start":169,"line_end":169,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":215816,"byte_end":215819,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Parsers should seek to implement this function instead of the above two if errors can be","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":215824,"byte_end":215916,"line_start":171,"line_end":171,"column_start":5,"column_end":97}},{"value":"/ encountered before consuming input. The default implementation always returns all errors,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":215921,"byte_end":216014,"line_start":172,"line_end":172,"column_start":5,"column_end":98}},{"value":"/ with [`add_error`] being a no-op.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":216019,"byte_end":216056,"line_start":173,"line_end":173,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":216061,"byte_end":216064,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream::uncons`]: super::stream::StreamOnce::uncons","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":216069,"byte_end":216126,"line_start":175,"line_end":175,"column_start":5,"column_end":62}},{"value":"/ [`parse_stream`]: Parser::parse_stream","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":216131,"byte_end":216173,"line_start":176,"line_end":176,"column_start":5,"column_end":47}},{"value":"/ [`Error`]: super::stream::StreamOnce::Error","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":216178,"byte_end":216225,"line_start":177,"line_end":177,"column_start":5,"column_end":52}},{"value":"/ [`add_error`]: trait.Parser.html#method.add_error","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":216230,"byte_end":216283,"line_start":178,"line_end":178,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":216288,"byte_end":216297,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3615},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":217375,"byte_end":217384,"line_start":206,"line_end":206,"column_start":8,"column_end":17},"name":"add_error","qualname":"::parser::Parser::add_error","value":"pub fn add_error(&mut Self, &mut Tracked<<Input as StreamOnce>::Error>)","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Adds the first error that would normally be returned by this parser if it failed with an\n `PeekErr` result.","sig":null,"attributes":[{"value":"/ Adds the first error that would normally be returned by this parser if it failed with an","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":217133,"byte_end":217225,"line_start":200,"line_end":200,"column_start":5,"column_end":97}},{"value":"/ `PeekErr` result.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":217230,"byte_end":217251,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":217256,"byte_end":217259,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ See [`parse_lazy`] for details.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":217264,"byte_end":217299,"line_start":203,"line_end":203,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":217304,"byte_end":217307,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ [`parse_lazy`]: trait.Parser.html#method.parse_lazy","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":217312,"byte_end":217367,"line_start":205,"line_end":205,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3616},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":217531,"byte_end":217551,"line_start":210,"line_end":210,"column_start":8,"column_end":28},"name":"parse_stream_partial","qualname":"::parser::Parser::parse_stream_partial","value":"pub fn parse_stream_partial(&mut Self, &mut Input, &mut Self::PartialState)\n-> ParseResult<Self::Output, <Input as StreamOnce>::Error>","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Like `parse_stream` but supports partial parsing.\n","sig":null,"attributes":[{"value":"/ Like `parse_stream` but supports partial parsing.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":217456,"byte_end":217509,"line_start":208,"line_end":208,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":217514,"byte_end":217523,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3617},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":218712,"byte_end":218723,"line_start":240,"line_end":240,"column_start":8,"column_end":19},"name":"parse_first","qualname":"::parser::Parser::parse_first","value":"pub fn parse_first(&mut Self, &mut Input, &mut Self::PartialState)\n-> ParseResult<Self::Output, <Input as StreamOnce>::Error>","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Parses using the stream `input` and allows itself to be resumed at a later point using\n `parse_partial` by storing the necessary intermediate state in `state`.","sig":null,"attributes":[{"value":"/ Parses using the stream `input` and allows itself to be resumed at a later point using","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":218262,"byte_end":218352,"line_start":230,"line_end":230,"column_start":5,"column_end":95}},{"value":"/ `parse_partial` by storing the necessary intermediate state in `state`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":218357,"byte_end":218432,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":218437,"byte_end":218440,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ Unlike `parse_partial` function this is allowed to assume that there is no partial state to","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":218445,"byte_end":218540,"line_start":233,"line_end":233,"column_start":5,"column_end":100}},{"value":"/ resume.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":218545,"byte_end":218556,"line_start":234,"line_end":234,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":218561,"byte_end":218564,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ Internal API. May break without a semver bump","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":218569,"byte_end":218618,"line_start":236,"line_end":236,"column_start":5,"column_end":54}},{"value":"/ Always overridden by the `parse_mode!` macro","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":218623,"byte_end":218671,"line_start":237,"line_end":237,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":218676,"byte_end":218685,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3618},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":219255,"byte_end":219268,"line_start":255,"line_end":255,"column_start":8,"column_end":21},"name":"parse_partial","qualname":"::parser::Parser::parse_partial","value":"pub fn parse_partial(&mut Self, &mut Input, &mut Self::PartialState)\n-> ParseResult<Self::Output, <Input as StreamOnce>::Error>","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Parses using the stream `input` and allows itself to be resumed at a later point using\n `parse_partial` by storing the necessary intermediate state in `state`","sig":null,"attributes":[{"value":"/ Parses using the stream `input` and allows itself to be resumed at a later point using","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":218930,"byte_end":219020,"line_start":248,"line_end":248,"column_start":5,"column_end":95}},{"value":"/ `parse_partial` by storing the necessary intermediate state in `state`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":219025,"byte_end":219099,"line_start":249,"line_end":249,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":219104,"byte_end":219107,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Internal API. May break without a semver bump","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":219112,"byte_end":219161,"line_start":251,"line_end":251,"column_start":5,"column_end":54}},{"value":"/ Always overridden by the `parse_mode!` macro","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":219166,"byte_end":219214,"line_start":252,"line_end":252,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":219219,"byte_end":219228,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3619},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":219578,"byte_end":219588,"line_start":267,"line_end":267,"column_start":8,"column_end":18},"name":"parse_mode","qualname":"::parser::Parser::parse_mode","value":"pub fn parse_mode<M>(&mut Self, M, &mut Input, &mut Self::PartialState)\n-> ParseResult<Self::Output, <Input as StreamOnce>::Error> where M: ParseMode,\nSelf: Sized","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Internal API. May break without a semver bump\n","sig":null,"attributes":[{"value":"/ Internal API. May break without a semver bump","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":219488,"byte_end":219537,"line_start":264,"line_end":264,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":219561,"byte_end":219570,"line_start":266,"line_end":266,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3621},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":219960,"byte_end":219975,"line_start":283,"line_end":283,"column_start":8,"column_end":23},"name":"parse_mode_impl","qualname":"::parser::Parser::parse_mode_impl","value":"pub fn parse_mode_impl<M>(&mut Self, M, &mut Input, &mut Self::PartialState)\n-> ParseResult<Self::Output, <Input as StreamOnce>::Error> where M: ParseMode,\nSelf: Sized","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Internal API. May break without a semver bump\n","sig":null,"attributes":[{"value":"/ Internal API. May break without a semver bump","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":219870,"byte_end":219919,"line_start":280,"line_end":280,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":219943,"byte_end":219952,"line_start":282,"line_end":282,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3623},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":220452,"byte_end":220472,"line_start":303,"line_end":303,"column_start":8,"column_end":28},"name":"parse_committed_mode","qualname":"::parser::Parser::parse_committed_mode","value":"pub fn parse_committed_mode<M>(&mut Self, M, &mut Input,\n                               &mut Self::PartialState)\n-> ParseResult<Self::Output, <Input as StreamOnce>::Error> where M: ParseMode,\nSelf: Sized","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Internal API. May break without a semver bump\n","sig":null,"attributes":[{"value":"/ Internal API. May break without a semver bump","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":220362,"byte_end":220411,"line_start":300,"line_end":300,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":220435,"byte_end":220444,"line_start":302,"line_end":302,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3625},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":221068,"byte_end":221080,"line_start":324,"line_end":324,"column_start":8,"column_end":20},"name":"parser_count","qualname":"::parser::Parser::parser_count","value":"pub fn parser_count(&Self) -> ErrorOffset","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Returns how many parsers this parser contains","sig":null,"attributes":[{"value":"/ Returns how many parsers this parser contains","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":220900,"byte_end":220949,"line_start":320,"line_end":320,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":220954,"byte_end":220957,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Internal API: This should not be implemented explicitly outside of combine.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":220962,"byte_end":221041,"line_start":322,"line_end":322,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3626},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":221245,"byte_end":221273,"line_start":330,"line_end":330,"column_start":8,"column_end":36},"name":"add_committed_expected_error","qualname":"::parser::Parser::add_committed_expected_error","value":"pub fn add_committed_expected_error(&mut Self,\n                                    &mut Tracked<<Input as\n                                                 StreamOnce>::Error>)","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Internal API: This should not be implemented explicitly outside of combine.\n","sig":null,"attributes":[{"value":"/ Internal API: This should not be implemented explicitly outside of combine.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":221139,"byte_end":221218,"line_start":328,"line_end":328,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3627},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":222269,"byte_end":222275,"line_start":357,"line_end":357,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::parser::Parser::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self where Self: Sized","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Borrows a parser instead of consuming it.","sig":null,"attributes":[{"value":"/ Borrows a parser instead of consuming it.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":221350,"byte_end":221395,"line_start":333,"line_end":333,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":221400,"byte_end":221403,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Used to apply parser combinators on `self` without losing ownership.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":221408,"byte_end":221480,"line_start":335,"line_end":335,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":221485,"byte_end":221488,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":221493,"byte_end":221500,"line_start":337,"line_end":337,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":221505,"byte_end":221532,"line_start":338,"line_end":338,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":221537,"byte_end":221558,"line_start":339,"line_end":339,"column_start":5,"column_end":26}},{"value":"/ # use combine::error::Commit;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":221563,"byte_end":221596,"line_start":340,"line_end":340,"column_start":5,"column_end":38}},{"value":"/ # use combine::parser::char::{digit, letter};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":221601,"byte_end":221650,"line_start":341,"line_end":341,"column_start":5,"column_end":54}},{"value":"/ fn test(input: &mut &'static str) -> StdParseResult<(char, char), &'static str> {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":221655,"byte_end":221740,"line_start":342,"line_end":342,"column_start":5,"column_end":90}},{"value":"/     let mut p = digit();","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":221745,"byte_end":221773,"line_start":343,"line_end":343,"column_start":5,"column_end":33}},{"value":"/     let ((d, _), committed) = (p.by_ref(), letter()).parse_stream(input).into_result()?;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":221778,"byte_end":221870,"line_start":344,"line_end":344,"column_start":5,"column_end":97}},{"value":"/     let (d2, committed) = committed.combine(|_| p.parse_stream(input).into_result())?;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":221875,"byte_end":221965,"line_start":345,"line_end":345,"column_start":5,"column_end":95}},{"value":"/     Ok(((d, d2), committed))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":221970,"byte_end":222002,"line_start":346,"line_end":346,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":222007,"byte_end":222012,"line_start":347,"line_end":347,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":222017,"byte_end":222020,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":222025,"byte_end":222040,"line_start":349,"line_end":349,"column_start":5,"column_end":20}},{"value":"/     let mut input = \"1a23\";","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":222045,"byte_end":222076,"line_start":350,"line_end":350,"column_start":5,"column_end":36}},{"value":"/     assert_eq!(","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":222081,"byte_end":222100,"line_start":351,"line_end":351,"column_start":5,"column_end":24}},{"value":"/         test(&mut input).map(|(t, c)| (t, c.map(|_| input))),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":222105,"byte_end":222170,"line_start":352,"line_end":352,"column_start":5,"column_end":70}},{"value":"/         Ok((('1', '2'), Commit::Commit(\"3\")))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":222175,"byte_end":222224,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/     );","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":222229,"byte_end":222239,"line_start":354,"line_end":354,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":222244,"byte_end":222249,"line_start":355,"line_end":355,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":222254,"byte_end":222261,"line_start":356,"line_end":356,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3628},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":222801,"byte_end":222805,"line_start":379,"line_end":379,"column_start":8,"column_end":12},"name":"with","qualname":"::parser::Parser::with","value":"pub fn with<P2>(Self, P2) -> With<Self, P2> where Self: Sized,\nP2: Parser<Input>","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Discards the value of the `self` parser and returns the value of `p`.\n Fails if any of the parsers fails.","sig":null,"attributes":[{"value":"/ Discards the value of the `self` parser and returns the value of `p`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":222361,"byte_end":222434,"line_start":364,"line_end":364,"column_start":5,"column_end":78}},{"value":"/ Fails if any of the parsers fails.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":222439,"byte_end":222477,"line_start":365,"line_end":365,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":222482,"byte_end":222485,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":222490,"byte_end":222497,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":222502,"byte_end":222529,"line_start":368,"line_end":368,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":222534,"byte_end":222555,"line_start":369,"line_end":369,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":222560,"byte_end":222599,"line_start":370,"line_end":370,"column_start":5,"column_end":44}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":222604,"byte_end":222621,"line_start":371,"line_end":371,"column_start":5,"column_end":22}},{"value":"/ let result = digit()","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":222626,"byte_end":222650,"line_start":372,"line_end":372,"column_start":5,"column_end":29}},{"value":"/     .with(token('i'))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":222655,"byte_end":222680,"line_start":373,"line_end":373,"column_start":5,"column_end":30}},{"value":"/     .parse(\"9i\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":222685,"byte_end":222705,"line_start":374,"line_end":374,"column_start":5,"column_end":25}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":222710,"byte_end":222732,"line_start":375,"line_end":375,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(result, Ok('i'));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":222737,"byte_end":222769,"line_start":376,"line_end":376,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":222774,"byte_end":222781,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":222786,"byte_end":222793,"line_start":378,"line_end":378,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3630},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223378,"byte_end":223382,"line_start":402,"line_end":402,"column_start":8,"column_end":12},"name":"skip","qualname":"::parser::Parser::skip","value":"pub fn skip<P2>(Self, P2) -> Skip<Self, P2> where Self: Sized,\nP2: Parser<Input>","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Discards the value of the `p` parser and returns the value of `self`.\n Fails if any of the parsers fails.","sig":null,"attributes":[{"value":"/ Discards the value of the `p` parser and returns the value of `self`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":222938,"byte_end":223011,"line_start":387,"line_end":387,"column_start":5,"column_end":78}},{"value":"/ Fails if any of the parsers fails.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223016,"byte_end":223054,"line_start":388,"line_end":388,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223059,"byte_end":223062,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223067,"byte_end":223074,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223079,"byte_end":223106,"line_start":391,"line_end":391,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223111,"byte_end":223132,"line_start":392,"line_end":392,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223137,"byte_end":223176,"line_start":393,"line_end":393,"column_start":5,"column_end":44}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223181,"byte_end":223198,"line_start":394,"line_end":394,"column_start":5,"column_end":22}},{"value":"/ let result = digit()","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223203,"byte_end":223227,"line_start":395,"line_end":395,"column_start":5,"column_end":29}},{"value":"/     .skip(token('i'))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223232,"byte_end":223257,"line_start":396,"line_end":396,"column_start":5,"column_end":30}},{"value":"/     .parse(\"9i\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223262,"byte_end":223282,"line_start":397,"line_end":397,"column_start":5,"column_end":25}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223287,"byte_end":223309,"line_start":398,"line_end":398,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(result, Ok('9'));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223314,"byte_end":223346,"line_start":399,"line_end":399,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223351,"byte_end":223358,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223363,"byte_end":223370,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3632},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223996,"byte_end":223999,"line_start":426,"line_end":426,"column_start":8,"column_end":11},"name":"and","qualname":"::parser::Parser::and","value":"pub fn and<P2>(Self, P2) -> (Self, P2) where Self: Sized, P2: Parser<Input>","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Parses with `self` followed by `p`.\n Succeeds if both parsers succeed, otherwise fails.\n Returns a tuple with both values on success.","sig":null,"attributes":[{"value":"/ Parses with `self` followed by `p`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223515,"byte_end":223554,"line_start":410,"line_end":410,"column_start":5,"column_end":44}},{"value":"/ Succeeds if both parsers succeed, otherwise fails.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223559,"byte_end":223613,"line_start":411,"line_end":411,"column_start":5,"column_end":59}},{"value":"/ Returns a tuple with both values on success.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223618,"byte_end":223666,"line_start":412,"line_end":412,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223671,"byte_end":223674,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223679,"byte_end":223686,"line_start":414,"line_end":414,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223691,"byte_end":223718,"line_start":415,"line_end":415,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223723,"byte_end":223744,"line_start":416,"line_end":416,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223749,"byte_end":223788,"line_start":417,"line_end":417,"column_start":5,"column_end":44}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223793,"byte_end":223810,"line_start":418,"line_end":418,"column_start":5,"column_end":22}},{"value":"/ let result = digit()","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223815,"byte_end":223839,"line_start":419,"line_end":419,"column_start":5,"column_end":29}},{"value":"/     .and(token('i'))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223844,"byte_end":223868,"line_start":420,"line_end":420,"column_start":5,"column_end":29}},{"value":"/     .parse(\"9i\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223873,"byte_end":223893,"line_start":421,"line_end":421,"column_start":5,"column_end":25}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223898,"byte_end":223920,"line_start":422,"line_end":422,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(result, Ok(('9', 'i')));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223925,"byte_end":223964,"line_start":423,"line_end":423,"column_start":5,"column_end":44}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223969,"byte_end":223976,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":223981,"byte_end":223988,"line_start":425,"line_end":425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3634},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":225416,"byte_end":225418,"line_start":463,"line_end":463,"column_start":8,"column_end":10},"name":"or","qualname":"::parser::Parser::or","value":"pub fn or<P2>(Self, P2) -> Or<Self, P2> where Self: Sized, P2: Parser<Input,\nOutput = Self::Output>","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Returns a parser which attempts to parse using `self`. If `self` fails without committing\n it tries to consume the same input using `p`.","sig":null,"attributes":[{"value":"/ Returns a parser which attempts to parse using `self`. If `self` fails without committing","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":224124,"byte_end":224217,"line_start":434,"line_end":434,"column_start":5,"column_end":98}},{"value":"/ it tries to consume the same input using `p`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":224222,"byte_end":224271,"line_start":435,"line_end":435,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":224276,"byte_end":224279,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ If you are looking to chain 3 or more parsers using `or` you may consider using the","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":224284,"byte_end":224371,"line_start":437,"line_end":437,"column_start":5,"column_end":92}},{"value":"/ [`choice!`] macro instead, which can be clearer and may result in a faster parser.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":224376,"byte_end":224462,"line_start":438,"line_end":438,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":224467,"byte_end":224470,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":224475,"byte_end":224482,"line_start":440,"line_end":440,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":224487,"byte_end":224514,"line_start":441,"line_end":441,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":224519,"byte_end":224540,"line_start":442,"line_end":442,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::{digit, string};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":224545,"byte_end":224594,"line_start":443,"line_end":443,"column_start":5,"column_end":54}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":224599,"byte_end":224616,"line_start":444,"line_end":444,"column_start":5,"column_end":22}},{"value":"/ let mut parser = string(\"let\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":224621,"byte_end":224655,"line_start":445,"line_end":445,"column_start":5,"column_end":39}},{"value":"/     .or(digit().map(|_| \"digit\"))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":224660,"byte_end":224697,"line_start":446,"line_end":446,"column_start":5,"column_end":42}},{"value":"/     .or(string(\"led\"));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":224702,"byte_end":224729,"line_start":447,"line_end":447,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(parser.parse(\"let\"), Ok((\"let\", \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":224734,"byte_end":224787,"line_start":448,"line_end":448,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(parser.parse(\"1\"), Ok((\"digit\", \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":224792,"byte_end":224845,"line_start":449,"line_end":449,"column_start":5,"column_end":58}},{"value":"/ assert!(parser.parse(\"led\").is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":224850,"byte_end":224892,"line_start":450,"line_end":450,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":224897,"byte_end":224900,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ let mut parser2 = string(\"two\").or(string(\"three\"));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":224905,"byte_end":224961,"line_start":452,"line_end":452,"column_start":5,"column_end":61}},{"value":"/ // Fails as the parser for \"two\" consumes the first 't' before failing","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":224966,"byte_end":225040,"line_start":453,"line_end":453,"column_start":5,"column_end":79}},{"value":"/ assert!(parser2.parse(\"three\").is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":225045,"byte_end":225090,"line_start":454,"line_end":454,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":225095,"byte_end":225098,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ // Use 'attempt' to make failing parsers always act as if they have not committed any input","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":225103,"byte_end":225198,"line_start":456,"line_end":456,"column_start":5,"column_end":100}},{"value":"/ let mut parser3 = attempt(string(\"two\")).or(attempt(string(\"three\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":225203,"byte_end":225277,"line_start":457,"line_end":457,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(parser3.parse(\"three\"), Ok((\"three\", \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":225282,"byte_end":225340,"line_start":458,"line_end":458,"column_start":5,"column_end":63}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":225345,"byte_end":225352,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":225357,"byte_end":225364,"line_start":460,"line_end":460,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":225369,"byte_end":225372,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ [`choice!`]: super::choice!","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":225377,"byte_end":225408,"line_start":462,"line_end":462,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3636},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":226646,"byte_end":226650,"line_start":500,"line_end":500,"column_start":8,"column_end":12},"name":"then","qualname":"::parser::Parser::then","value":"pub fn then<N, F>(Self, F) -> Then<Self, F> where Self: Sized,\nF: FnMut(Self::Output) -> N, N: Parser<Input>","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Parses using `self` and then passes the value to `f` which returns a parser used to parse\n the rest of the input.","sig":null,"attributes":[{"value":"/ Parses using `self` and then passes the value to `f` which returns a parser used to parse","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":225570,"byte_end":225663,"line_start":471,"line_end":471,"column_start":5,"column_end":98}},{"value":"/ the rest of the input.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":225668,"byte_end":225694,"line_start":472,"line_end":472,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":225699,"byte_end":225702,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ Since the parser returned from `f` must have a single type it can be useful to use the","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":225707,"byte_end":225797,"line_start":474,"line_end":474,"column_start":5,"column_end":95}},{"value":"/ [`left`](Parser::left) and [`right`](Parser::right) methods to merge parsers of differing types into one.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":225802,"byte_end":225911,"line_start":475,"line_end":475,"column_start":5,"column_end":114}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":225916,"byte_end":225919,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ If you are using partial parsing you may want to use [`then_partial`](Parser::then_partial) instead.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":225924,"byte_end":226028,"line_start":477,"line_end":477,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":226033,"byte_end":226036,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":226041,"byte_end":226048,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ # #![cfg(feature = \"std\")]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":226053,"byte_end":226083,"line_start":480,"line_end":480,"column_start":5,"column_end":35}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":226088,"byte_end":226115,"line_start":481,"line_end":481,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":226120,"byte_end":226141,"line_start":482,"line_end":482,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":226146,"byte_end":226185,"line_start":483,"line_end":483,"column_start":5,"column_end":44}},{"value":"/ # use combine::error::Commit;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":226190,"byte_end":226223,"line_start":484,"line_end":484,"column_start":5,"column_end":38}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":226228,"byte_end":226260,"line_start":485,"line_end":485,"column_start":5,"column_end":37}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":226265,"byte_end":226282,"line_start":486,"line_end":486,"column_start":5,"column_end":22}},{"value":"/ let result = digit()","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":226287,"byte_end":226311,"line_start":487,"line_end":487,"column_start":5,"column_end":29}},{"value":"/     .then(|d| {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":226316,"byte_end":226335,"line_start":488,"line_end":488,"column_start":5,"column_end":24}},{"value":"/         if d == '9' {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":226340,"byte_end":226365,"line_start":489,"line_end":489,"column_start":5,"column_end":30}},{"value":"/             value(9).left()","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":226370,"byte_end":226401,"line_start":490,"line_end":490,"column_start":5,"column_end":36}},{"value":"/         }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":226406,"byte_end":226419,"line_start":491,"line_end":491,"column_start":5,"column_end":18}},{"value":"/         else {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":226424,"byte_end":226442,"line_start":492,"line_end":492,"column_start":5,"column_end":23}},{"value":"/             unexpected_any(d).message(\"Not a nine\").right()","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":226447,"byte_end":226510,"line_start":493,"line_end":493,"column_start":5,"column_end":68}},{"value":"/         }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":226515,"byte_end":226528,"line_start":494,"line_end":494,"column_start":5,"column_end":18}},{"value":"/     })","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":226533,"byte_end":226543,"line_start":495,"line_end":495,"column_start":5,"column_end":15}},{"value":"/     .easy_parse(\"9\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":226548,"byte_end":226573,"line_start":496,"line_end":496,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(result, Ok((9, \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":226578,"byte_end":226614,"line_start":497,"line_end":497,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":226619,"byte_end":226626,"line_start":498,"line_end":498,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":226631,"byte_end":226638,"line_start":499,"line_end":499,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3639},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":228037,"byte_end":228049,"line_start":539,"line_end":539,"column_start":8,"column_end":20},"name":"then_partial","qualname":"::parser::Parser::then_partial","value":"pub fn then_partial<N, F>(Self, F) -> ThenPartial<Self, F> where Self: Sized,\nF: FnMut(&mut Self::Output) -> N, N: Parser<Input>","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Variant of [`then`](Parser::then) which parses using `self` and then passes the value to `f` as a `&mut` reference.","sig":null,"attributes":[{"value":"/ Variant of [`then`](Parser::then) which parses using `self` and then passes the value to `f` as a `&mut` reference.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":226819,"byte_end":226938,"line_start":509,"line_end":509,"column_start":5,"column_end":124}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":226943,"byte_end":226946,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ Useful when doing partial parsing since it does not need to store the parser returned by","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":226951,"byte_end":227043,"line_start":511,"line_end":511,"column_start":5,"column_end":97}},{"value":"/ `f` in the partial state. Instead it will call `f` each to request a new parser each time","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":227048,"byte_end":227141,"line_start":512,"line_end":512,"column_start":5,"column_end":98}},{"value":"/ parsing resumes and that parser is needed.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":227146,"byte_end":227192,"line_start":513,"line_end":513,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":227197,"byte_end":227200,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ Since the parser returned from `f` must have a single type it can be useful to use the","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":227205,"byte_end":227295,"line_start":515,"line_end":515,"column_start":5,"column_end":95}},{"value":"/ [`left`](Parser::left) and [`right`](Parser::right) methods to merge parsers of differing types into one.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":227300,"byte_end":227409,"line_start":516,"line_end":516,"column_start":5,"column_end":114}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":227414,"byte_end":227417,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":227422,"byte_end":227429,"line_start":518,"line_end":518,"column_start":5,"column_end":12}},{"value":"/ # #![cfg(feature = \"std\")]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":227434,"byte_end":227464,"line_start":519,"line_end":519,"column_start":5,"column_end":35}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":227469,"byte_end":227496,"line_start":520,"line_end":520,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":227501,"byte_end":227522,"line_start":521,"line_end":521,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":227527,"byte_end":227566,"line_start":522,"line_end":522,"column_start":5,"column_end":44}},{"value":"/ # use combine::error::Commit;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":227571,"byte_end":227604,"line_start":523,"line_end":523,"column_start":5,"column_end":38}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":227609,"byte_end":227641,"line_start":524,"line_end":524,"column_start":5,"column_end":37}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":227646,"byte_end":227663,"line_start":525,"line_end":525,"column_start":5,"column_end":22}},{"value":"/ let result = digit()","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":227668,"byte_end":227692,"line_start":526,"line_end":526,"column_start":5,"column_end":29}},{"value":"/     .then_partial(|d| {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":227697,"byte_end":227724,"line_start":527,"line_end":527,"column_start":5,"column_end":32}},{"value":"/         if *d == '9' {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":227729,"byte_end":227755,"line_start":528,"line_end":528,"column_start":5,"column_end":31}},{"value":"/             value(9).left()","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":227760,"byte_end":227791,"line_start":529,"line_end":529,"column_start":5,"column_end":36}},{"value":"/         }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":227796,"byte_end":227809,"line_start":530,"line_end":530,"column_start":5,"column_end":18}},{"value":"/         else {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":227814,"byte_end":227832,"line_start":531,"line_end":531,"column_start":5,"column_end":23}},{"value":"/             unexpected_any(*d).message(\"Not a nine\").right()","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":227837,"byte_end":227901,"line_start":532,"line_end":532,"column_start":5,"column_end":69}},{"value":"/         }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":227906,"byte_end":227919,"line_start":533,"line_end":533,"column_start":5,"column_end":18}},{"value":"/     })","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":227924,"byte_end":227934,"line_start":534,"line_end":534,"column_start":5,"column_end":15}},{"value":"/     .easy_parse(\"9\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":227939,"byte_end":227964,"line_start":535,"line_end":535,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(result, Ok((9, \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":227969,"byte_end":228005,"line_start":536,"line_end":536,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":228010,"byte_end":228017,"line_start":537,"line_end":537,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":228022,"byte_end":228029,"line_start":538,"line_end":538,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3642},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":229245,"byte_end":229253,"line_start":575,"line_end":575,"column_start":8,"column_end":16},"name":"then_ref","qualname":"::parser::Parser::then_ref","value":"pub fn then_ref<N, F>(Self, F) -> ThenRef<Self, F> where Self: Sized,\nF: FnMut(&Self::Output) -> N, N: Parser<Input>","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Parses using `self` and then passes a reference to the value to `f` which returns a parser\n used to parse the rest of the input. The value is then combined with the output of `f`.","sig":null,"attributes":[{"value":"/ Parses using `self` and then passes a reference to the value to `f` which returns a parser","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":228238,"byte_end":228332,"line_start":548,"line_end":548,"column_start":5,"column_end":99}},{"value":"/ used to parse the rest of the input. The value is then combined with the output of `f`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":228337,"byte_end":228428,"line_start":549,"line_end":549,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":228433,"byte_end":228436,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ Since the parser returned from `f` must have a single type it can be useful to use the","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":228441,"byte_end":228531,"line_start":551,"line_end":551,"column_start":5,"column_end":95}},{"value":"/ `left` and `right` methods to merge parsers of differing types into one.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":228536,"byte_end":228612,"line_start":552,"line_end":552,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":228617,"byte_end":228620,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":228625,"byte_end":228632,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"/ # #![cfg(feature = \"std\")]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":228637,"byte_end":228667,"line_start":555,"line_end":555,"column_start":5,"column_end":35}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":228672,"byte_end":228699,"line_start":556,"line_end":556,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":228704,"byte_end":228725,"line_start":557,"line_end":557,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":228730,"byte_end":228769,"line_start":558,"line_end":558,"column_start":5,"column_end":44}},{"value":"/ # use combine::error::Commit;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":228774,"byte_end":228807,"line_start":559,"line_end":559,"column_start":5,"column_end":38}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":228812,"byte_end":228844,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":228849,"byte_end":228866,"line_start":561,"line_end":561,"column_start":5,"column_end":22}},{"value":"/ let result = digit()","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":228871,"byte_end":228895,"line_start":562,"line_end":562,"column_start":5,"column_end":29}},{"value":"/     .then_ref(|d| {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":228900,"byte_end":228923,"line_start":563,"line_end":563,"column_start":5,"column_end":28}},{"value":"/         if *d == '9' {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":228928,"byte_end":228954,"line_start":564,"line_end":564,"column_start":5,"column_end":31}},{"value":"/             digit().left()","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":228959,"byte_end":228989,"line_start":565,"line_end":565,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":228994,"byte_end":229007,"line_start":566,"line_end":566,"column_start":5,"column_end":18}},{"value":"/         else {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":229012,"byte_end":229030,"line_start":567,"line_end":567,"column_start":5,"column_end":23}},{"value":"/             unexpected_any(*d).message(\"Not a nine\").right()","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":229035,"byte_end":229099,"line_start":568,"line_end":568,"column_start":5,"column_end":69}},{"value":"/         }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":229104,"byte_end":229117,"line_start":569,"line_end":569,"column_start":5,"column_end":18}},{"value":"/     })","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":229122,"byte_end":229132,"line_start":570,"line_end":570,"column_start":5,"column_end":15}},{"value":"/     .easy_parse(\"98\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":229137,"byte_end":229163,"line_start":571,"line_end":571,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(result, Ok((('9', '8'), \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":229168,"byte_end":229213,"line_start":572,"line_end":572,"column_start":5,"column_end":50}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":229218,"byte_end":229225,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":229230,"byte_end":229237,"line_start":574,"line_end":574,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3645},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":229797,"byte_end":229800,"line_start":598,"line_end":598,"column_start":8,"column_end":11},"name":"map","qualname":"::parser::Parser::map","value":"pub fn map<F, B>(Self, F) -> Map<Self, F> where Self: Sized,\nF: FnMut(Self::Output) -> B","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Uses `f` to map over the parsed value.","sig":null,"attributes":[{"value":"/ Uses `f` to map over the parsed value.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":229430,"byte_end":229472,"line_start":584,"line_end":584,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":229477,"byte_end":229480,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":229485,"byte_end":229492,"line_start":586,"line_end":586,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":229497,"byte_end":229524,"line_start":587,"line_end":587,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":229529,"byte_end":229550,"line_start":588,"line_end":588,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":229555,"byte_end":229594,"line_start":589,"line_end":589,"column_start":5,"column_end":44}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":229599,"byte_end":229616,"line_start":590,"line_end":590,"column_start":5,"column_end":22}},{"value":"/ let result = digit()","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":229621,"byte_end":229645,"line_start":591,"line_end":591,"column_start":5,"column_end":29}},{"value":"/     .map(|c| c == '9')","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":229650,"byte_end":229676,"line_start":592,"line_end":592,"column_start":5,"column_end":31}},{"value":"/     .parse(\"9\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":229681,"byte_end":229700,"line_start":593,"line_end":593,"column_start":5,"column_end":24}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":229705,"byte_end":229727,"line_start":594,"line_end":594,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(result, Ok(true));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":229732,"byte_end":229765,"line_start":595,"line_end":595,"column_start":5,"column_end":38}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":229770,"byte_end":229777,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":229782,"byte_end":229789,"line_start":597,"line_end":597,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3648},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":229944,"byte_end":229953,"line_start":606,"line_end":606,"column_start":8,"column_end":17},"name":"map_input","qualname":"::parser::Parser::map_input","value":"pub fn map_input<F, B>(Self, F) -> MapInput<Self, F> where Self: Sized,\nF: FnMut(Self::Output, &mut Input) -> B","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3651},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":230609,"byte_end":230617,"line_start":628,"line_end":628,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::parser::Parser::flat_map","value":"pub fn flat_map<F, B>(Self, F) -> FlatMap<Self, F> where Self: Sized,\nF: FnMut(Self::Output) -> Result<B, <Input as StreamOnce>::Error>","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Uses `f` to map over the output of `self`. If `f` returns an error the parser fails.","sig":null,"attributes":[{"value":"/ Uses `f` to map over the output of `self`. If `f` returns an error the parser fails.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":230117,"byte_end":230205,"line_start":614,"line_end":614,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":230210,"byte_end":230213,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":230218,"byte_end":230225,"line_start":616,"line_end":616,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":230230,"byte_end":230257,"line_start":617,"line_end":617,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":230262,"byte_end":230283,"line_start":618,"line_end":618,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":230288,"byte_end":230327,"line_start":619,"line_end":619,"column_start":5,"column_end":44}},{"value":"/ # use combine::parser::range::take;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":230332,"byte_end":230371,"line_start":620,"line_end":620,"column_start":5,"column_end":44}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":230376,"byte_end":230393,"line_start":621,"line_end":621,"column_start":5,"column_end":22}},{"value":"/ let result = take(4)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":230398,"byte_end":230422,"line_start":622,"line_end":622,"column_start":5,"column_end":29}},{"value":"/     .flat_map(|bs| many(digit()).parse(bs).map(|t| t.0))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":230427,"byte_end":230487,"line_start":623,"line_end":623,"column_start":5,"column_end":65}},{"value":"/     .parse(\"12abcd\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":230492,"byte_end":230517,"line_start":624,"line_end":624,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(result, Ok((String::from(\"12\"), \"cd\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":230522,"byte_end":230577,"line_start":625,"line_end":625,"column_start":5,"column_end":60}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":230582,"byte_end":230589,"line_start":626,"line_end":626,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":230594,"byte_end":230601,"line_start":627,"line_end":627,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3654},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":231580,"byte_end":231587,"line_start":658,"line_end":658,"column_start":8,"column_end":15},"name":"message","qualname":"::parser::Parser::message","value":"pub fn message<S>(Self, S) -> Message<Self, S> where Self: Sized,\nS: for<'s> ErrorInfo","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Parses with `self` and if it fails, adds the message `msg` to the error.","sig":null,"attributes":[{"value":"/ Parses with `self` and if it fails, adds the message `msg` to the error.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":230805,"byte_end":230881,"line_start":636,"line_end":636,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":230886,"byte_end":230889,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":230894,"byte_end":230901,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # #![cfg(feature = \"std\")]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":230906,"byte_end":230936,"line_start":639,"line_end":639,"column_start":5,"column_end":35}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":230941,"byte_end":230968,"line_start":640,"line_end":640,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":230973,"byte_end":230994,"line_start":641,"line_end":641,"column_start":5,"column_end":26}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":230999,"byte_end":231031,"line_start":642,"line_end":642,"column_start":5,"column_end":37}},{"value":"/ # use combine::stream::position::{self, SourcePosition};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":231036,"byte_end":231096,"line_start":643,"line_end":643,"column_start":5,"column_end":65}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":231101,"byte_end":231118,"line_start":644,"line_end":644,"column_start":5,"column_end":22}},{"value":"/ let result = token('9')","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":231123,"byte_end":231150,"line_start":645,"line_end":645,"column_start":5,"column_end":32}},{"value":"/     .message(\"Not a nine\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":231155,"byte_end":231185,"line_start":646,"line_end":646,"column_start":5,"column_end":35}},{"value":"/     .easy_parse(position::Stream::new(\"8\"));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":231190,"byte_end":231238,"line_start":647,"line_end":647,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, Err(easy::Errors {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":231243,"byte_end":231284,"line_start":648,"line_end":648,"column_start":5,"column_end":46}},{"value":"/     position: SourcePosition::default(),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":231289,"byte_end":231333,"line_start":649,"line_end":649,"column_start":5,"column_end":49}},{"value":"/     errors: vec![","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":231338,"byte_end":231359,"line_start":650,"line_end":650,"column_start":5,"column_end":26}},{"value":"/         easy::Error::Unexpected('8'.into()),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":231364,"byte_end":231412,"line_start":651,"line_end":651,"column_start":5,"column_end":53}},{"value":"/         easy::Error::Expected('9'.into()),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":231417,"byte_end":231463,"line_start":652,"line_end":652,"column_start":5,"column_end":51}},{"value":"/         easy::Error::Message(\"Not a nine\".into())","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":231468,"byte_end":231521,"line_start":653,"line_end":653,"column_start":5,"column_end":58}},{"value":"/     ]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":231526,"byte_end":231535,"line_start":654,"line_end":654,"column_start":5,"column_end":14}},{"value":"/ }));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":231540,"byte_end":231548,"line_start":655,"line_end":655,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":231553,"byte_end":231560,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":231565,"byte_end":231572,"line_start":657,"line_end":657,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3657},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":233053,"byte_end":233061,"line_start":700,"line_end":700,"column_start":8,"column_end":16},"name":"expected","qualname":"::parser::Parser::expected","value":"pub fn expected<S>(Self, S) -> Expected<Self, S> where Self: Sized,\nS: for<'s> ErrorInfo","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Parses with `self` and if it fails without consuming any input any expected errors are\n replaced by `msg`. `msg` is then used in error messages as \"Expected `msg`\".","sig":null,"attributes":[{"value":"/ Parses with `self` and if it fails without consuming any input any expected errors are","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":231762,"byte_end":231852,"line_start":666,"line_end":666,"column_start":5,"column_end":95}},{"value":"/ replaced by `msg`. `msg` is then used in error messages as \"Expected `msg`\".","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":231857,"byte_end":231937,"line_start":667,"line_end":667,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":231942,"byte_end":231945,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":231950,"byte_end":231957,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ # #![cfg(feature = \"std\")]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":231962,"byte_end":231992,"line_start":670,"line_end":670,"column_start":5,"column_end":35}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":231997,"byte_end":232024,"line_start":671,"line_end":671,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":232029,"byte_end":232050,"line_start":672,"line_end":672,"column_start":5,"column_end":26}},{"value":"/ # use combine::error;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":232055,"byte_end":232080,"line_start":673,"line_end":673,"column_start":5,"column_end":30}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":232085,"byte_end":232117,"line_start":674,"line_end":674,"column_start":5,"column_end":37}},{"value":"/ # use combine::stream::position::{self, SourcePosition};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":232122,"byte_end":232182,"line_start":675,"line_end":675,"column_start":5,"column_end":65}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":232187,"byte_end":232204,"line_start":676,"line_end":676,"column_start":5,"column_end":22}},{"value":"/ let result = token('9')","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":232209,"byte_end":232236,"line_start":677,"line_end":677,"column_start":5,"column_end":32}},{"value":"/     .expected(\"nine\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":232241,"byte_end":232266,"line_start":678,"line_end":678,"column_start":5,"column_end":30}},{"value":"/     .easy_parse(position::Stream::new(\"8\"));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":232271,"byte_end":232319,"line_start":679,"line_end":679,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, Err(easy::Errors {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":232324,"byte_end":232365,"line_start":680,"line_end":680,"column_start":5,"column_end":46}},{"value":"/     position: SourcePosition::default(),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":232370,"byte_end":232414,"line_start":681,"line_end":681,"column_start":5,"column_end":49}},{"value":"/     errors: vec![","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":232419,"byte_end":232440,"line_start":682,"line_end":682,"column_start":5,"column_end":26}},{"value":"/         easy::Error::Unexpected('8'.into()),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":232445,"byte_end":232493,"line_start":683,"line_end":683,"column_start":5,"column_end":53}},{"value":"/         easy::Error::Expected(\"nine\".into())","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":232498,"byte_end":232546,"line_start":684,"line_end":684,"column_start":5,"column_end":53}},{"value":"/     ]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":232551,"byte_end":232560,"line_start":685,"line_end":685,"column_start":5,"column_end":14}},{"value":"/ }));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":232565,"byte_end":232573,"line_start":686,"line_end":686,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":232578,"byte_end":232581,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ let result = token('9')","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":232586,"byte_end":232613,"line_start":688,"line_end":688,"column_start":5,"column_end":32}},{"value":"/     .expected(error::Format(format_args!(\"That is not a nine!\")))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":232618,"byte_end":232687,"line_start":689,"line_end":689,"column_start":5,"column_end":74}},{"value":"/     .easy_parse(position::Stream::new(\"8\"));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":232692,"byte_end":232740,"line_start":690,"line_end":690,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, Err(easy::Errors {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":232745,"byte_end":232786,"line_start":691,"line_end":691,"column_start":5,"column_end":46}},{"value":"/     position: SourcePosition::default(),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":232791,"byte_end":232835,"line_start":692,"line_end":692,"column_start":5,"column_end":49}},{"value":"/     errors: vec![","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":232840,"byte_end":232861,"line_start":693,"line_end":693,"column_start":5,"column_end":26}},{"value":"/         easy::Error::Unexpected('8'.into()),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":232866,"byte_end":232914,"line_start":694,"line_end":694,"column_start":5,"column_end":53}},{"value":"/         easy::Error::Expected(\"That is not a nine!\".to_string().into())","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":232919,"byte_end":232994,"line_start":695,"line_end":695,"column_start":5,"column_end":80}},{"value":"/     ]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":232999,"byte_end":233008,"line_start":696,"line_end":696,"column_start":5,"column_end":14}},{"value":"/ }));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":233013,"byte_end":233021,"line_start":697,"line_end":697,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":233026,"byte_end":233033,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":233038,"byte_end":233045,"line_start":699,"line_end":699,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3660},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":233994,"byte_end":234000,"line_start":730,"line_end":730,"column_start":8,"column_end":14},"name":"silent","qualname":"::parser::Parser::silent","value":"pub fn silent(Self) -> Silent<Self> where Self: Sized","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Parses with `self`, if it fails without consuming any input any expected errors that would\n otherwise be emitted by `self` are suppressed.","sig":null,"attributes":[{"value":"/ Parses with `self`, if it fails without consuming any input any expected errors that would","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":233238,"byte_end":233332,"line_start":708,"line_end":708,"column_start":5,"column_end":99}},{"value":"/ otherwise be emitted by `self` are suppressed.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":233337,"byte_end":233387,"line_start":709,"line_end":709,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":233392,"byte_end":233395,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":233400,"byte_end":233407,"line_start":711,"line_end":711,"column_start":5,"column_end":12}},{"value":"/ # #![cfg(feature = \"std\")]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":233412,"byte_end":233442,"line_start":712,"line_end":712,"column_start":5,"column_end":35}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":233447,"byte_end":233474,"line_start":713,"line_end":713,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":233479,"byte_end":233500,"line_start":714,"line_end":714,"column_start":5,"column_end":26}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":233505,"byte_end":233537,"line_start":715,"line_end":715,"column_start":5,"column_end":37}},{"value":"/ # use combine::stream::position::{self, SourcePosition};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":233542,"byte_end":233602,"line_start":716,"line_end":716,"column_start":5,"column_end":65}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":233607,"byte_end":233624,"line_start":717,"line_end":717,"column_start":5,"column_end":22}},{"value":"/ let result = token('9')","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":233629,"byte_end":233656,"line_start":718,"line_end":718,"column_start":5,"column_end":32}},{"value":"/     .expected(\"nine\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":233661,"byte_end":233686,"line_start":719,"line_end":719,"column_start":5,"column_end":30}},{"value":"/     .silent()","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":233691,"byte_end":233708,"line_start":720,"line_end":720,"column_start":5,"column_end":22}},{"value":"/     .easy_parse(position::Stream::new(\"8\"));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":233713,"byte_end":233761,"line_start":721,"line_end":721,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, Err(easy::Errors {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":233766,"byte_end":233807,"line_start":722,"line_end":722,"column_start":5,"column_end":46}},{"value":"/     position: SourcePosition::default(),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":233812,"byte_end":233856,"line_start":723,"line_end":723,"column_start":5,"column_end":49}},{"value":"/     errors: vec![","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":233861,"byte_end":233882,"line_start":724,"line_end":724,"column_start":5,"column_end":26}},{"value":"/         easy::Error::Unexpected('8'.into()),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":233887,"byte_end":233935,"line_start":725,"line_end":725,"column_start":5,"column_end":53}},{"value":"/     ]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":233940,"byte_end":233949,"line_start":726,"line_end":726,"column_start":5,"column_end":14}},{"value":"/ }));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":233954,"byte_end":233962,"line_start":727,"line_end":727,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":233967,"byte_end":233974,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":233979,"byte_end":233986,"line_start":729,"line_end":729,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3661},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":235046,"byte_end":235054,"line_start":756,"line_end":756,"column_start":8,"column_end":16},"name":"and_then","qualname":"::parser::Parser::and_then","value":"pub fn and_then<F, O, E>(Self, F) -> AndThen<Self, F> where\nSelf: Parser<Input> + Sized, F: FnMut(Self::Output) -> Result<O, E>,\nE: Into<<Input::Error as\n        ParseError<Input::Token, Input::Range, Input::Position>>::StreamError>","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Parses with `self` and applies `f` on the result if `self` parses successfully.\n `f` may optionally fail with an error which is automatically converted to a `ParseError`.","sig":null,"attributes":[{"value":"/ Parses with `self` and applies `f` on the result if `self` parses successfully.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":234092,"byte_end":234175,"line_start":737,"line_end":737,"column_start":5,"column_end":88}},{"value":"/ `f` may optionally fail with an error which is automatically converted to a `ParseError`.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":234180,"byte_end":234273,"line_start":738,"line_end":738,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":234278,"byte_end":234281,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":234286,"byte_end":234293,"line_start":740,"line_end":740,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":234298,"byte_end":234325,"line_start":741,"line_end":741,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":234330,"byte_end":234351,"line_start":742,"line_end":742,"column_start":5,"column_end":26}},{"value":"/ # use combine::stream::position::{self, SourcePosition};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":234356,"byte_end":234416,"line_start":743,"line_end":743,"column_start":5,"column_end":65}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":234421,"byte_end":234460,"line_start":744,"line_end":744,"column_start":5,"column_end":44}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":234465,"byte_end":234482,"line_start":745,"line_end":745,"column_start":5,"column_end":22}},{"value":"/ let mut parser = many1(digit())","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":234487,"byte_end":234522,"line_start":746,"line_end":746,"column_start":5,"column_end":40}},{"value":"/     .and_then(|s: String| s.parse::<i32>());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":234527,"byte_end":234575,"line_start":747,"line_end":747,"column_start":5,"column_end":53}},{"value":"/ let result = parser.easy_parse(position::Stream::new(\"1234\")).map(|(x, state)| (x, state.input));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":234580,"byte_end":234681,"line_start":748,"line_end":748,"column_start":5,"column_end":106}},{"value":"/ assert_eq!(result, Ok((1234, \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":234686,"byte_end":234725,"line_start":749,"line_end":749,"column_start":5,"column_end":44}},{"value":"/ let result = parser.easy_parse(position::Stream::new(\"999999999999999999999999\"));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":234730,"byte_end":234816,"line_start":750,"line_end":750,"column_start":5,"column_end":91}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":234821,"byte_end":234850,"line_start":751,"line_end":751,"column_start":5,"column_end":34}},{"value":"/ // Errors are report as if they occurred at the start of the parse","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":234855,"byte_end":234925,"line_start":752,"line_end":752,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(result.unwrap_err().position, SourcePosition { line: 1, column: 1 });","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":234930,"byte_end":235014,"line_start":753,"line_end":753,"column_start":5,"column_end":89}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":235019,"byte_end":235026,"line_start":754,"line_end":754,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":235031,"byte_end":235038,"line_start":755,"line_end":755,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3665},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":236172,"byte_end":236176,"line_start":790,"line_end":790,"column_start":8,"column_end":12},"name":"iter","qualname":"::parser::Parser::iter","value":"pub fn iter(Self, &mut Input)\n-> Iter<, Input, Self, Self::PartialState, FirstMode> where\nSelf: Parser<Input> + Sized","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Creates an iterator from a parser and a state. Can be used as an alternative to [`many`]\n when collecting directly into a `Extend` type is not desirable.","sig":null,"attributes":[{"value":"/ Creates an iterator from a parser and a state. Can be used as an alternative to [`many`]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":235362,"byte_end":235454,"line_start":767,"line_end":767,"column_start":5,"column_end":97}},{"value":"/ when collecting directly into a `Extend` type is not desirable.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":235459,"byte_end":235526,"line_start":768,"line_end":768,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":235531,"byte_end":235534,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":235539,"byte_end":235546,"line_start":770,"line_end":770,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":235551,"byte_end":235578,"line_start":771,"line_end":771,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":235583,"byte_end":235604,"line_start":772,"line_end":772,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::{char, digit};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":235609,"byte_end":235656,"line_start":773,"line_end":773,"column_start":5,"column_end":52}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":235661,"byte_end":235678,"line_start":774,"line_end":774,"column_start":5,"column_end":22}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":235683,"byte_end":235718,"line_start":775,"line_end":775,"column_start":5,"column_end":40}},{"value":"/ let number = parser(|input| {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":235723,"byte_end":235756,"line_start":776,"line_end":776,"column_start":5,"column_end":38}},{"value":"/     buffer.clear();","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":235761,"byte_end":235784,"line_start":777,"line_end":777,"column_start":5,"column_end":28}},{"value":"/     let mut iter = digit().iter(input);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":235789,"byte_end":235832,"line_start":778,"line_end":778,"column_start":5,"column_end":48}},{"value":"/     buffer.extend(&mut iter);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":235837,"byte_end":235870,"line_start":779,"line_end":779,"column_start":5,"column_end":38}},{"value":"/     let i = buffer.parse::<i32>().unwrap();","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":235875,"byte_end":235922,"line_start":780,"line_end":780,"column_start":5,"column_end":52}},{"value":"/     iter.into_result(i)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":235927,"byte_end":235954,"line_start":781,"line_end":781,"column_start":5,"column_end":32}},{"value":"/ });","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":235959,"byte_end":235966,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ let result = sep_by(number, char(','))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":235971,"byte_end":236013,"line_start":783,"line_end":783,"column_start":5,"column_end":47}},{"value":"/     .parse(\"123,45,6\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":236018,"byte_end":236045,"line_start":784,"line_end":784,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(result, Ok((vec![123, 45, 6], \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":236050,"byte_end":236101,"line_start":785,"line_end":785,"column_start":5,"column_end":56}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":236106,"byte_end":236113,"line_start":786,"line_end":786,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":236118,"byte_end":236125,"line_start":787,"line_end":787,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":236130,"byte_end":236133,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ [`many`]: repeat::many","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":236138,"byte_end":236164,"line_start":789,"line_end":789,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3666},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":237194,"byte_end":237206,"line_start":820,"line_end":820,"column_start":8,"column_end":20},"name":"partial_iter","qualname":"::parser::Parser::partial_iter","value":"pub fn partial_iter<'a, 's,\n                    M>(Self, M, &'a mut Input, &'s mut Self::PartialState)\n-> Iter where Self: Parser<Input> + Sized, M: ParseMode","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Creates an iterator from a parser and a state. Can be used as an alternative to [`many`]\n when collecting directly into a `Extend` type is not desirable.","sig":null,"attributes":[{"value":"/ Creates an iterator from a parser and a state. Can be used as an alternative to [`many`]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":236384,"byte_end":236476,"line_start":797,"line_end":797,"column_start":5,"column_end":97}},{"value":"/ when collecting directly into a `Extend` type is not desirable.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":236481,"byte_end":236548,"line_start":798,"line_end":798,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":236553,"byte_end":236556,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":236561,"byte_end":236568,"line_start":800,"line_end":800,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":236573,"byte_end":236600,"line_start":801,"line_end":801,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":236605,"byte_end":236626,"line_start":802,"line_end":802,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::{char, digit};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":236631,"byte_end":236678,"line_start":803,"line_end":803,"column_start":5,"column_end":52}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":236683,"byte_end":236700,"line_start":804,"line_end":804,"column_start":5,"column_end":22}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":236705,"byte_end":236740,"line_start":805,"line_end":805,"column_start":5,"column_end":40}},{"value":"/ let number = parser(|input| {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":236745,"byte_end":236778,"line_start":806,"line_end":806,"column_start":5,"column_end":38}},{"value":"/     buffer.clear();","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":236783,"byte_end":236806,"line_start":807,"line_end":807,"column_start":5,"column_end":28}},{"value":"/     let mut iter = digit().iter(input);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":236811,"byte_end":236854,"line_start":808,"line_end":808,"column_start":5,"column_end":48}},{"value":"/     buffer.extend(&mut iter);","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":236859,"byte_end":236892,"line_start":809,"line_end":809,"column_start":5,"column_end":38}},{"value":"/     let i = buffer.parse::<i32>().unwrap();","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":236897,"byte_end":236944,"line_start":810,"line_end":810,"column_start":5,"column_end":52}},{"value":"/     iter.into_result(i)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":236949,"byte_end":236976,"line_start":811,"line_end":811,"column_start":5,"column_end":32}},{"value":"/ });","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":236981,"byte_end":236988,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/ let result = sep_by(number, char(','))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":236993,"byte_end":237035,"line_start":813,"line_end":813,"column_start":5,"column_end":47}},{"value":"/     .parse(\"123,45,6\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":237040,"byte_end":237067,"line_start":814,"line_end":814,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(result, Ok((vec![123, 45, 6], \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":237072,"byte_end":237123,"line_start":815,"line_end":815,"column_start":5,"column_end":56}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":237128,"byte_end":237135,"line_start":816,"line_end":816,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":237140,"byte_end":237147,"line_start":817,"line_end":817,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":237152,"byte_end":237155,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ [`many`]: repeat::many","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":237160,"byte_end":237186,"line_start":819,"line_end":819,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3670},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":238313,"byte_end":238318,"line_start":854,"line_end":854,"column_start":8,"column_end":13},"name":"boxed","qualname":"::parser::Parser::boxed","value":"pub fn boxed<'a>(Self)\n->\n    Box<dyn Parser<Input, Output = Self::Output, PartialState =\n        Self::Output> + 'a> where Self: Sized + 'a","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Turns the parser into a trait object by putting it in a `Box`. Can be used to easily\n return parsers from functions without naming the type.","sig":null,"attributes":[{"value":"/ Turns the parser into a trait object by putting it in a `Box`. Can be used to easily","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":237531,"byte_end":237619,"line_start":833,"line_end":833,"column_start":5,"column_end":93}},{"value":"/ return parsers from functions without naming the type.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":237624,"byte_end":237682,"line_start":834,"line_end":834,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":237687,"byte_end":237690,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":237695,"byte_end":237702,"line_start":836,"line_end":836,"column_start":5,"column_end":12}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":237707,"byte_end":237728,"line_start":837,"line_end":837,"column_start":5,"column_end":26}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":237733,"byte_end":237750,"line_start":838,"line_end":838,"column_start":5,"column_end":22}},{"value":"/ fn test<'input, F>(","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":237755,"byte_end":237778,"line_start":839,"line_end":839,"column_start":5,"column_end":28}},{"value":"/     c: char,","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":237783,"byte_end":237799,"line_start":840,"line_end":840,"column_start":5,"column_end":21}},{"value":"/     f: F)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":237804,"byte_end":237817,"line_start":841,"line_end":841,"column_start":5,"column_end":18}},{"value":"/     -> Box<dyn Parser<&'input str, Output = (char, char), PartialState = ()> + 'input>","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":237822,"byte_end":237912,"line_start":842,"line_end":842,"column_start":5,"column_end":95}},{"value":"/     where F: FnMut(char) -> bool + 'static","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":237917,"byte_end":237963,"line_start":843,"line_end":843,"column_start":5,"column_end":51}},{"value":"/ {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":237968,"byte_end":237973,"line_start":844,"line_end":844,"column_start":5,"column_end":10}},{"value":"/     combine::parser::combinator::no_partial((token(c), satisfy(f))).boxed()","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":237978,"byte_end":238057,"line_start":845,"line_end":845,"column_start":5,"column_end":84}},{"value":"/ }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":238062,"byte_end":238067,"line_start":846,"line_end":846,"column_start":5,"column_end":10}},{"value":"/ let result = test('a', |c| c >= 'a' && c <= 'f')","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":238072,"byte_end":238124,"line_start":847,"line_end":847,"column_start":5,"column_end":57}},{"value":"/     .parse(\"ac\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":238129,"byte_end":238150,"line_start":848,"line_end":848,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(result, Ok((('a', 'c'), \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":238155,"byte_end":238200,"line_start":849,"line_end":849,"column_start":5,"column_end":50}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":238205,"byte_end":238212,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":238217,"byte_end":238224,"line_start":851,"line_end":851,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":238229,"byte_end":238254,"line_start":852,"line_end":852,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3672},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":239461,"byte_end":239465,"line_start":889,"line_end":889,"column_start":8,"column_end":12},"name":"left","qualname":"::parser::Parser::left","value":"pub fn left<R>(Self) -> Either<Self, R> where Self: Sized, R: Parser<Input,\nOutput = Self::Output>","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Wraps the parser into the [`Either`](combinator::Either) enum which allows combinators such as [`then`](Parser::then) to return\n multiple different parser types (merging them to one)","sig":null,"attributes":[{"value":"/ Wraps the parser into the [`Either`](combinator::Either) enum which allows combinators such as [`then`](Parser::then) to return","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":238509,"byte_end":238640,"line_start":863,"line_end":863,"column_start":5,"column_end":136}},{"value":"/ multiple different parser types (merging them to one)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":238645,"byte_end":238702,"line_start":864,"line_end":864,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":238707,"byte_end":238710,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":238715,"byte_end":238722,"line_start":866,"line_end":866,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":238727,"byte_end":238754,"line_start":867,"line_end":867,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":238759,"byte_end":238780,"line_start":868,"line_end":868,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::{digit, letter};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":238785,"byte_end":238834,"line_start":869,"line_end":869,"column_start":5,"column_end":54}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":238839,"byte_end":238856,"line_start":870,"line_end":870,"column_start":5,"column_end":22}},{"value":"/ let mut parser = any().then(|c|","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":238861,"byte_end":238896,"line_start":871,"line_end":871,"column_start":5,"column_end":40}},{"value":"/     if c == '#' {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":238901,"byte_end":238922,"line_start":872,"line_end":872,"column_start":5,"column_end":26}},{"value":"/         skip_many(satisfy(|c| c != '\\n'))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":238927,"byte_end":238972,"line_start":873,"line_end":873,"column_start":5,"column_end":50}},{"value":"/             .with(value(\"\".to_string()))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":238977,"byte_end":239021,"line_start":874,"line_end":874,"column_start":5,"column_end":49}},{"value":"/             .left()","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":239026,"byte_end":239049,"line_start":875,"line_end":875,"column_start":5,"column_end":28}},{"value":"/     } else {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":239054,"byte_end":239070,"line_start":876,"line_end":876,"column_start":5,"column_end":21}},{"value":"/         many1(letter())","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":239075,"byte_end":239102,"line_start":877,"line_end":877,"column_start":5,"column_end":32}},{"value":"/             .map(move |mut s: String| { s.insert(0, c); s })","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":239107,"byte_end":239171,"line_start":878,"line_end":878,"column_start":5,"column_end":69}},{"value":"/             .right()","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":239176,"byte_end":239200,"line_start":879,"line_end":879,"column_start":5,"column_end":29}},{"value":"/     });","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":239205,"byte_end":239216,"line_start":880,"line_end":880,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":239221,"byte_end":239224,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ let result = parser.parse(\"ac2\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":239229,"byte_end":239266,"line_start":882,"line_end":882,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(result, Ok((\"ac\".to_string(), \"2\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":239271,"byte_end":239323,"line_start":883,"line_end":883,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":239328,"byte_end":239331,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ let result = parser.parse(\"# ac2\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":239336,"byte_end":239375,"line_start":885,"line_end":885,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(result, Ok((\"\".to_string(), \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":239380,"byte_end":239429,"line_start":886,"line_end":886,"column_start":5,"column_end":54}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":239434,"byte_end":239441,"line_start":887,"line_end":887,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":239446,"byte_end":239453,"line_start":888,"line_end":888,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3674},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":240570,"byte_end":240575,"line_start":923,"line_end":923,"column_start":8,"column_end":13},"name":"right","qualname":"::parser::Parser::right","value":"pub fn right<L>(Self) -> Either<L, Self> where Self: Sized, L: Parser<Input,\nOutput = Self::Output>","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Wraps the parser into the [`Either`](combinator::Either) enum which allows combinators such as [`then`](Parser::then) to return\n multiple different parser types (merging them to one)","sig":null,"attributes":[{"value":"/ Wraps the parser into the [`Either`](combinator::Either) enum which allows combinators such as [`then`](Parser::then) to return","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":239618,"byte_end":239749,"line_start":897,"line_end":897,"column_start":5,"column_end":136}},{"value":"/ multiple different parser types (merging them to one)","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":239754,"byte_end":239811,"line_start":898,"line_end":898,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":239816,"byte_end":239819,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":239824,"byte_end":239831,"line_start":900,"line_end":900,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":239836,"byte_end":239863,"line_start":901,"line_end":901,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":239868,"byte_end":239889,"line_start":902,"line_end":902,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::{digit, letter};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":239894,"byte_end":239943,"line_start":903,"line_end":903,"column_start":5,"column_end":54}},{"value":"/ # fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":239948,"byte_end":239965,"line_start":904,"line_end":904,"column_start":5,"column_end":22}},{"value":"/ let mut parser = any().then(|c|","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":239970,"byte_end":240005,"line_start":905,"line_end":905,"column_start":5,"column_end":40}},{"value":"/     if c == '#' {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":240010,"byte_end":240031,"line_start":906,"line_end":906,"column_start":5,"column_end":26}},{"value":"/         skip_many(satisfy(|c| c != '\\n'))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":240036,"byte_end":240081,"line_start":907,"line_end":907,"column_start":5,"column_end":50}},{"value":"/             .with(value(\"\".to_string()))","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":240086,"byte_end":240130,"line_start":908,"line_end":908,"column_start":5,"column_end":49}},{"value":"/             .left()","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":240135,"byte_end":240158,"line_start":909,"line_end":909,"column_start":5,"column_end":28}},{"value":"/     } else {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":240163,"byte_end":240179,"line_start":910,"line_end":910,"column_start":5,"column_end":21}},{"value":"/         many1(letter())","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":240184,"byte_end":240211,"line_start":911,"line_end":911,"column_start":5,"column_end":32}},{"value":"/             .map(move |mut s: String| { s.insert(0, c); s })","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":240216,"byte_end":240280,"line_start":912,"line_end":912,"column_start":5,"column_end":69}},{"value":"/             .right()","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":240285,"byte_end":240309,"line_start":913,"line_end":913,"column_start":5,"column_end":29}},{"value":"/     });","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":240314,"byte_end":240325,"line_start":914,"line_end":914,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":240330,"byte_end":240333,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ let result = parser.parse(\"ac2\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":240338,"byte_end":240375,"line_start":916,"line_end":916,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(result, Ok((\"ac\".to_string(), \"2\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":240380,"byte_end":240432,"line_start":917,"line_end":917,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":240437,"byte_end":240440,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ let result = parser.parse(\"# ac2\");","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":240445,"byte_end":240484,"line_start":919,"line_end":919,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(result, Ok((\"\".to_string(), \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":240489,"byte_end":240538,"line_start":920,"line_end":920,"column_start":5,"column_end":54}},{"value":"/ # }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":240543,"byte_end":240550,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":240555,"byte_end":240562,"line_start":922,"line_end":922,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3676},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":241457,"byte_end":241464,"line_start":950,"line_end":950,"column_start":8,"column_end":15},"name":"spanned","qualname":"::parser::Parser::spanned","value":"pub fn spanned(Self) -> Spanned<Self> where Self: Sized","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Marks errors produced inside the `self` parser with the span from the start of the parse to\n the end of it.","sig":null,"attributes":[{"value":"/ Marks errors produced inside the `self` parser with the span from the start of the parse to","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":240729,"byte_end":240824,"line_start":931,"line_end":931,"column_start":5,"column_end":100}},{"value":"/ the end of it.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":240829,"byte_end":240847,"line_start":932,"line_end":932,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":240852,"byte_end":240855,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/ [`p.spanned()`]: ../trait.Parser.html#method.spanned","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":240860,"byte_end":240916,"line_start":934,"line_end":934,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":240921,"byte_end":240924,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":240929,"byte_end":240936,"line_start":936,"line_end":936,"column_start":5,"column_end":12}},{"value":"/ use combine::{*, parser::{char::string, combinator::spanned}};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":240941,"byte_end":241007,"line_start":937,"line_end":937,"column_start":5,"column_end":71}},{"value":"/ use combine::stream::{easy, span};","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":241012,"byte_end":241050,"line_start":938,"line_end":938,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":241055,"byte_end":241058,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ let input = \"hel\";","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":241063,"byte_end":241085,"line_start":940,"line_end":940,"column_start":5,"column_end":27}},{"value":"/ let result = spanned(string(\"hello\")).parse(","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":241090,"byte_end":241138,"line_start":941,"line_end":941,"column_start":5,"column_end":53}},{"value":"/     span::Stream::<_, easy::Errors<_, _, span::Span<_>>>::from(easy::Stream::from(input)),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":241143,"byte_end":241237,"line_start":942,"line_end":942,"column_start":5,"column_end":99}},{"value":"/ );","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":241242,"byte_end":241248,"line_start":943,"line_end":943,"column_start":5,"column_end":11}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":241253,"byte_end":241282,"line_start":944,"line_end":944,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":241287,"byte_end":241302,"line_start":945,"line_end":945,"column_start":5,"column_end":20}},{"value":"/     result.unwrap_err().position.map(|p| p.translate_position(input)),","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":241307,"byte_end":241381,"line_start":946,"line_end":946,"column_start":5,"column_end":79}},{"value":"/     span::Span { start: 0, end: 3 },","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":241386,"byte_end":241426,"line_start":947,"line_end":947,"column_start":5,"column_end":45}},{"value":"/ );","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":241431,"byte_end":241437,"line_start":948,"line_end":948,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":241442,"byte_end":241449,"line_start":949,"line_end":949,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3677},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":241720,"byte_end":241730,"line_start":961,"line_end":961,"column_start":11,"column_end":21},"name":"EasyParser","qualname":"::parser::EasyParser","value":"EasyParser<Input: Stream>: Parser<crate::easy::Stream<Input>>","parent":null,"children":[{"krate":0,"index":3679}],"decl_id":null,"docs":" Provides the `easy_parse` method which provides good error messages by default\n","sig":null,"attributes":[{"value":"/ Provides the `easy_parse` method which provides good error messages by default","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":241556,"byte_end":241638,"line_start":958,"line_end":958,"column_start":1,"column_end":83}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":241639,"byte_end":241662,"line_start":959,"line_end":959,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":3679},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":243307,"byte_end":243317,"line_start":1008,"line_end":1008,"column_start":8,"column_end":18},"name":"easy_parse","qualname":"::parser::EasyParser::easy_parse","value":"pub fn easy_parse(&mut Self, Input)\n->\n    Result<(<Self as Parser<crate::easy::Stream<Input>>>::Output, Input),\n           crate::easy::ParseError<Input>> where Input: Stream,\ncrate::easy::Stream<Input>: StreamOnce<Token = Input::Token, Range =\nInput::Token, Error = Input::Token, Position = Input::Token>,\nInput::Position: Default, Self: Sized + Parser<crate::easy::Stream<Input>>","parent":{"krate":0,"index":3677},"children":[],"decl_id":null,"docs":" Entry point of the parser. Takes some input and tries to parse it, returning an easy to use\n and format error if parsing did not succeed.","sig":null,"attributes":[{"value":"/ Entry point of the parser. Takes some input and tries to parse it, returning an easy to use","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":241852,"byte_end":241947,"line_start":966,"line_end":966,"column_start":5,"column_end":100}},{"value":"/ and format error if parsing did not succeed.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":241952,"byte_end":242000,"line_start":967,"line_end":967,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":242005,"byte_end":242008,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ Returns the parsed result and the remaining input if the parser succeeds, or a","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":242013,"byte_end":242095,"line_start":969,"line_end":969,"column_start":5,"column_end":87}},{"value":"/ This function wraps requires `Input == easy::Stream<Input>` which makes it return","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":242100,"byte_end":242185,"line_start":970,"line_end":970,"column_start":5,"column_end":90}},{"value":"/ return `easy::Errors` if an error occurs. Due to this wrapping it is recommended that the","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":242190,"byte_end":242283,"line_start":971,"line_end":971,"column_start":5,"column_end":98}},{"value":"/ parser `Self` is written with a generic input type.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":242288,"byte_end":242343,"line_start":972,"line_end":972,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":242348,"byte_end":242351,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":242356,"byte_end":242363,"line_start":974,"line_end":974,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":242368,"byte_end":242386,"line_start":975,"line_end":975,"column_start":5,"column_end":23}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":242391,"byte_end":242418,"line_start":976,"line_end":976,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":242423,"byte_end":242426,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ use combine::*;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":242431,"byte_end":242450,"line_start":978,"line_end":978,"column_start":5,"column_end":24}},{"value":"/ use combine::parser::repeat::many1;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":242455,"byte_end":242494,"line_start":979,"line_end":979,"column_start":5,"column_end":44}},{"value":"/ use combine::parser::char::letter;","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":242499,"byte_end":242537,"line_start":980,"line_end":980,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":242542,"byte_end":242545,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ // Good!","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":242550,"byte_end":242562,"line_start":982,"line_end":982,"column_start":5,"column_end":17}},{"value":"/ parser!{","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":242567,"byte_end":242579,"line_start":983,"line_end":983,"column_start":5,"column_end":17}},{"value":"/ fn my_parser[Input]()(Input) -> String","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":242584,"byte_end":242626,"line_start":984,"line_end":984,"column_start":5,"column_end":47}},{"value":"/     where [Input: Stream<Token = char>]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":242631,"byte_end":242674,"line_start":985,"line_end":985,"column_start":5,"column_end":48}},{"value":"/ {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":242679,"byte_end":242684,"line_start":986,"line_end":986,"column_start":5,"column_end":10}},{"value":"/     many1::<String, _, _>(letter())","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":242689,"byte_end":242728,"line_start":987,"line_end":987,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":242733,"byte_end":242738,"line_start":988,"line_end":988,"column_start":5,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":242743,"byte_end":242748,"line_start":989,"line_end":989,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":242753,"byte_end":242756,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ // Won't compile with `easy_parse` since it is specialized on `&str`","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":242761,"byte_end":242833,"line_start":991,"line_end":991,"column_start":5,"column_end":77}},{"value":"/ parser!{","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":242838,"byte_end":242850,"line_start":992,"line_end":992,"column_start":5,"column_end":17}},{"value":"/ fn my_parser2['a]()(&'a str) -> String","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":242855,"byte_end":242897,"line_start":993,"line_end":993,"column_start":5,"column_end":47}},{"value":"/     where [&'a str: Stream<Token = char, Range = &'a str>]","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":242902,"byte_end":242964,"line_start":994,"line_end":994,"column_start":5,"column_end":67}},{"value":"/ {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":242969,"byte_end":242974,"line_start":995,"line_end":995,"column_start":5,"column_end":10}},{"value":"/     many1(letter())","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":242979,"byte_end":243002,"line_start":996,"line_end":996,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":243007,"byte_end":243012,"line_start":997,"line_end":997,"column_start":5,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":243017,"byte_end":243022,"line_start":998,"line_end":998,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":243027,"byte_end":243030,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":243035,"byte_end":243050,"line_start":1000,"line_end":1000,"column_start":5,"column_end":20}},{"value":"/     assert_eq!(my_parser().parse(\"abc\"), Ok((\"abc\".to_string(), \"\")));","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":243055,"byte_end":243129,"line_start":1001,"line_end":1001,"column_start":5,"column_end":79}},{"value":"/     // Would fail to compile if uncommented","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":243134,"byte_end":243181,"line_start":1002,"line_end":1002,"column_start":5,"column_end":52}},{"value":"/     // my_parser2().parse(\"abc\")","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":243186,"byte_end":243222,"line_start":1003,"line_end":1003,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":243227,"byte_end":243232,"line_start":1004,"line_end":1004,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":243237,"byte_end":243244,"line_start":1005,"line_end":1005,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":243249,"byte_end":243252,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ [`ParseError`]: struct.ParseError.html","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":243257,"byte_end":243299,"line_start":1007,"line_end":1007,"column_start":5,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":3692},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":245795,"byte_end":245804,"line_start":1104,"line_end":1104,"column_start":11,"column_end":20},"name":"ParseMode","qualname":"::parser::ParseMode","value":"ParseMode: Copy","parent":null,"children":[{"krate":0,"index":3693},{"krate":0,"index":3694},{"krate":0,"index":3695},{"krate":0,"index":3698}],"decl_id":null,"docs":" Internal API. May break without a semver bump\n Specifies whether the parser must check for partial state that must be resumed\n","sig":null,"attributes":[{"value":"/ Internal API. May break without a semver bump","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":245637,"byte_end":245686,"line_start":1101,"line_end":1101,"column_start":1,"column_end":50}},{"value":"/ Specifies whether the parser must check for partial state that must be resumed","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":245702,"byte_end":245784,"line_start":1103,"line_end":1103,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3693},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":245965,"byte_end":245973,"line_start":1107,"line_end":1107,"column_start":8,"column_end":16},"name":"is_first","qualname":"::parser::ParseMode::is_first","value":"pub fn is_first(Self) -> bool","parent":{"krate":0,"index":3692},"children":[],"decl_id":null,"docs":" If `true` then the parser has no previous state to resume otherwise the parser *might* have\n state to resume which it must check.\n","sig":null,"attributes":[{"value":"/ If `true` then the parser has no previous state to resume otherwise the parser *might* have","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":245817,"byte_end":245912,"line_start":1105,"line_end":1105,"column_start":5,"column_end":100}},{"value":"/ state to resume which it must check.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":245917,"byte_end":245957,"line_start":1106,"line_end":1106,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3694},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":246040,"byte_end":246049,"line_start":1109,"line_end":1109,"column_start":8,"column_end":17},"name":"set_first","qualname":"::parser::ParseMode::set_first","value":"pub fn set_first(&mut Self)","parent":{"krate":0,"index":3692},"children":[],"decl_id":null,"docs":" Puts the mode into `first` parsing.\n","sig":null,"attributes":[{"value":"/ Puts the mode into `first` parsing.","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":245993,"byte_end":246032,"line_start":1108,"line_end":1108,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3695},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":246070,"byte_end":246075,"line_start":1111,"line_end":1111,"column_start":8,"column_end":13},"name":"parse","qualname":"::parser::ParseMode::parse","value":"pub fn parse<P, Input>(Self, &mut P, &mut Input, &mut P::PartialState)\n-> ParseResult<P::Output, Input::Error> where P: Parser<Input>, Input: Stream","parent":{"krate":0,"index":3692},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3698},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":246316,"byte_end":246331,"line_start":1122,"line_end":1122,"column_start":8,"column_end":23},"name":"parse_committed","qualname":"::parser::ParseMode::parse_committed","value":"pub fn parse_committed<P,\n                       Input>(Self, &mut P, &mut Input, &mut P::PartialState)\n-> ParseResult<P::Output, <Input as StreamOnce>::Error> where\nP: Parser<Input>, Input: Stream","parent":{"krate":0,"index":3692},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":246299,"byte_end":246308,"line_start":1121,"line_end":1121,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":10049},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":247237,"byte_end":247246,"line_start":1151,"line_end":1151,"column_start":12,"column_end":21},"name":"FirstMode","qualname":"::parser::FirstMode","value":"","parent":null,"children":[],"decl_id":null,"docs":" Internal API. May break without a semver bump\n","sig":null,"attributes":[{"value":"/ Internal API. May break without a semver bump","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":247138,"byte_end":247187,"line_start":1148,"line_end":1148,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":10054},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":247800,"byte_end":247811,"line_start":1177,"line_end":1177,"column_start":12,"column_end":23},"name":"PartialMode","qualname":"::parser::PartialMode","value":"PartialMode { first }","parent":null,"children":[{"krate":0,"index":10055}],"decl_id":null,"docs":" Internal API. May break without a semver bump\n","sig":null,"attributes":[{"value":"/ Internal API. May break without a semver bump","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":247692,"byte_end":247741,"line_start":1174,"line_end":1174,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":10055},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":247822,"byte_end":247827,"line_start":1178,"line_end":1178,"column_start":9,"column_end":14},"name":"first","qualname":"::parser::PartialMode::first","value":"bool","parent":{"krate":0,"index":10054},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10061},"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":23105,"byte_end":23116,"line_start":627,"line_end":627,"column_start":12,"column_end":23},"name":"ErrorOffset","qualname":"::ErrorOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":35950,"byte_end":35956,"line_start":14,"line_end":14,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":37494,"byte_end":37498,"line_start":69,"line_end":69,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":37948,"byte_end":37952,"line_start":86,"line_end":86,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":38238,"byte_end":38242,"line_start":99,"line_end":99,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":38527,"byte_end":38531,"line_start":112,"line_end":112,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":38895,"byte_end":38899,"line_start":128,"line_end":128,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":39030,"byte_end":39035,"line_start":134,"line_end":134,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":39320,"byte_end":39324,"line_start":147,"line_end":147,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":39455,"byte_end":39460,"line_start":153,"line_end":153,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":39826,"byte_end":39830,"line_start":167,"line_end":167,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":39976,"byte_end":39982,"line_start":176,"line_end":176,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":40269,"byte_end":40273,"line_start":188,"line_end":188,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":40425,"byte_end":40431,"line_start":197,"line_end":197,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":41425,"byte_end":41431,"line_start":222,"line_end":222,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":41606,"byte_end":41612,"line_start":230,"line_end":230,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":41758,"byte_end":41764,"line_start":238,"line_end":238,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":52328,"byte_end":52343,"line_start":560,"line_end":560,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":52499,"byte_end":52514,"line_start":567,"line_end":567,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":52589,"byte_end":52604,"line_start":573,"line_end":573,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":52856,"byte_end":52871,"line_start":583,"line_end":583,"column_start":48,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":413},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":54409,"byte_end":54424,"line_start":653,"line_end":653,"column_start":67,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":433},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":55595,"byte_end":55610,"line_start":705,"line_end":705,"column_start":71,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":56063,"byte_end":56078,"line_start":723,"line_end":723,"column_start":52,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":56536,"byte_end":56553,"line_start":743,"line_end":743,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":56709,"byte_end":56726,"line_start":750,"line_end":750,"column_start":19,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":56801,"byte_end":56818,"line_start":756,"line_end":756,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":57139,"byte_end":57156,"line_start":767,"line_end":767,"column_start":48,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":59116,"byte_end":59133,"line_start":842,"line_end":842,"column_start":67,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":60316,"byte_end":60333,"line_start":893,"line_end":893,"column_start":71,"column_end":88},"value":"","parent":null,"children":[{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":60786,"byte_end":60803,"line_start":911,"line_end":911,"column_start":52,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":61415,"byte_end":61422,"line_start":933,"line_end":933,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":62412,"byte_end":62423,"line_start":959,"line_end":959,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":64230,"byte_end":64241,"line_start":1029,"line_end":1029,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":64394,"byte_end":64405,"line_start":1035,"line_end":1035,"column_start":60,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":64775,"byte_end":64786,"line_start":1047,"line_end":1047,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":65187,"byte_end":65198,"line_start":1061,"line_end":1061,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":124018,"byte_end":124027,"line_start":54,"line_end":54,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":127569,"byte_end":127575,"line_start":182,"line_end":182,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":127609,"byte_end":127615,"line_start":184,"line_end":184,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":632},{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":127962,"byte_end":127968,"line_start":199,"line_end":199,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":131136,"byte_end":131146,"line_start":327,"line_end":327,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":131191,"byte_end":131201,"line_start":329,"line_end":329,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":641},{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":131605,"byte_end":131615,"line_start":344,"line_end":344,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":143213,"byte_end":143222,"line_start":727,"line_end":727,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":143823,"byte_end":143832,"line_start":746,"line_end":746,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":150824,"byte_end":150830,"line_start":38,"line_end":38,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":151443,"byte_end":151449,"line_start":62,"line_end":62,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":151960,"byte_end":151966,"line_start":80,"line_end":80,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":152568,"byte_end":152574,"line_start":102,"line_end":102,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":157734,"byte_end":157738,"line_start":105,"line_end":105,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":158112,"byte_end":158116,"line_start":119,"line_end":119,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":747},{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":158780,"byte_end":158784,"line_start":149,"line_end":149,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":159352,"byte_end":159356,"line_start":162,"line_end":162,"column_start":57,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":159705,"byte_end":159709,"line_start":173,"line_end":173,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":159820,"byte_end":159824,"line_start":178,"line_end":178,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":159938,"byte_end":159942,"line_start":184,"line_end":184,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":160050,"byte_end":160054,"line_start":190,"line_end":190,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":160651,"byte_end":160656,"line_start":209,"line_end":209,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":163643,"byte_end":163648,"line_start":315,"line_end":315,"column_start":81,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":812},{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":164798,"byte_end":164804,"line_start":367,"line_end":367,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":165343,"byte_end":165348,"line_start":384,"line_end":384,"column_start":66,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":166674,"byte_end":166680,"line_start":416,"line_end":416,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":845},{"krate":0,"index":847},{"krate":0,"index":848}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":168741,"byte_end":168746,"line_start":501,"line_end":501,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":853},{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":169522,"byte_end":169527,"line_start":531,"line_end":531,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":169889,"byte_end":169894,"line_start":542,"line_end":542,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":170039,"byte_end":170044,"line_start":551,"line_end":551,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":873},{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":173579,"byte_end":173585,"line_start":647,"line_end":647,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":891},{"krate":0,"index":893},{"krate":0,"index":897},{"krate":0,"index":900},{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":177322,"byte_end":177328,"line_start":769,"line_end":769,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":177546,"byte_end":177552,"line_start":780,"line_end":780,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":177862,"byte_end":177867,"line_start":792,"line_end":792,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":178317,"byte_end":178323,"line_start":806,"line_end":806,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":178418,"byte_end":178424,"line_start":812,"line_end":812,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":178858,"byte_end":178864,"line_start":830,"line_end":830,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":179328,"byte_end":179334,"line_start":851,"line_end":851,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":943},{"krate":0,"index":945},{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":180252,"byte_end":180258,"line_start":888,"line_end":888,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":181788,"byte_end":181799,"line_start":48,"line_end":48,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":181881,"byte_end":181895,"line_start":52,"line_end":52,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":182003,"byte_end":182009,"line_start":57,"line_end":57,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":183051,"byte_end":183057,"line_start":92,"line_end":92,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":183348,"byte_end":183354,"line_start":103,"line_end":103,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":183749,"byte_end":183755,"line_start":114,"line_end":114,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1032}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":184192,"byte_end":184198,"line_start":128,"line_end":128,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":186095,"byte_end":186110,"line_start":200,"line_end":200,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1065}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":186545,"byte_end":186560,"line_start":228,"line_end":228,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1067},{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":186815,"byte_end":186830,"line_start":238,"line_end":238,"column_start":52,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1072}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":187261,"byte_end":187275,"line_start":257,"line_end":257,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1074}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":187382,"byte_end":187396,"line_start":263,"line_end":263,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":187542,"byte_end":187556,"line_start":269,"line_end":269,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1078}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":187655,"byte_end":187669,"line_start":275,"line_end":275,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":188211,"byte_end":188225,"line_start":304,"line_end":304,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":188786,"byte_end":188800,"line_start":333,"line_end":333,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":188972,"byte_end":188978,"line_start":341,"line_end":341,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1100},{"krate":0,"index":1102},{"krate":0,"index":1105},{"krate":0,"index":1108},{"krate":0,"index":1109}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":190689,"byte_end":190695,"line_start":403,"line_end":403,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":192829,"byte_end":192834,"line_start":18,"line_end":18,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1151}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":193146,"byte_end":193151,"line_start":28,"line_end":28,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1153}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":193435,"byte_end":193440,"line_start":38,"line_end":38,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1165},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":194914,"byte_end":194919,"line_start":109,"line_end":109,"column_start":67,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1184},{"krate":0,"index":1185}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":196006,"byte_end":196012,"line_start":161,"line_end":161,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":196390,"byte_end":196396,"line_start":177,"line_end":177,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/span.rs","byte_start":197820,"byte_end":197824,"line_start":15,"line_end":15,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1236}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/span.rs","byte_start":197984,"byte_end":197988,"line_start":28,"line_end":28,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/span.rs","byte_start":198282,"byte_end":198288,"line_start":40,"line_end":40,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1245}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/span.rs","byte_start":198402,"byte_end":198408,"line_start":46,"line_end":46,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/span.rs","byte_start":199143,"byte_end":199149,"line_start":71,"line_end":71,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/span.rs","byte_start":199907,"byte_end":199913,"line_start":97,"line_end":97,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1267},{"krate":0,"index":1269},{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/span.rs","byte_start":201215,"byte_end":201221,"line_start":144,"line_end":144,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/state.rs","byte_start":201960,"byte_end":201966,"line_start":12,"line_end":12,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1299}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/state.rs","byte_start":202124,"byte_end":202130,"line_start":22,"line_end":22,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/state.rs","byte_start":202474,"byte_end":202480,"line_start":39,"line_end":39,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/state.rs","byte_start":202856,"byte_end":202862,"line_start":58,"line_end":58,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1321},{"krate":0,"index":1323},{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":204029,"byte_end":204035,"line_start":21,"line_end":21,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":204418,"byte_end":204423,"line_start":35,"line_end":35,"column_start":34,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":204557,"byte_end":204562,"line_start":42,"line_end":42,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1361}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":204962,"byte_end":204969,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1365},{"krate":0,"index":1366}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":205648,"byte_end":205655,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1370}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":206012,"byte_end":206019,"line_start":94,"line_end":94,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1374}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":206110,"byte_end":206117,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1379},{"krate":0,"index":1381},{"krate":0,"index":1382}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":207107,"byte_end":207114,"line_start":137,"line_end":137,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1387}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":71983,"byte_end":71988,"line_start":165,"line_end":165,"column_start":24,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":74592,"byte_end":74597,"line_start":244,"line_end":244,"column_start":29,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":87500,"byte_end":87513,"line_start":759,"line_end":759,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1538}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":87604,"byte_end":87617,"line_start":765,"line_end":765,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1541}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":87764,"byte_end":87777,"line_start":775,"line_end":775,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":88102,"byte_end":88115,"line_start":792,"line_end":792,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1554}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":88460,"byte_end":88473,"line_start":811,"line_end":811,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1560},{"krate":0,"index":1562},{"krate":0,"index":1563}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":89574,"byte_end":89588,"line_start":854,"line_end":854,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1566}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":89917,"byte_end":89931,"line_start":867,"line_end":867,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1573}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":90078,"byte_end":90092,"line_start":877,"line_end":877,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1576},{"krate":0,"index":1577},{"krate":0,"index":1578}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":90417,"byte_end":90431,"line_start":894,"line_end":894,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1581},{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1584},{"krate":0,"index":1585},{"krate":0,"index":1586}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":90777,"byte_end":90791,"line_start":913,"line_end":913,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1589},{"krate":0,"index":1590},{"krate":0,"index":1592},{"krate":0,"index":1594},{"krate":0,"index":1595}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":91678,"byte_end":91696,"line_start":951,"line_end":951,"column_start":24,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1598}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":91843,"byte_end":91861,"line_start":961,"line_end":961,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1603}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":92186,"byte_end":92204,"line_start":978,"line_end":978,"column_start":24,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1609},{"krate":0,"index":1610},{"krate":0,"index":1611}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":92551,"byte_end":92569,"line_start":997,"line_end":997,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1614},{"krate":0,"index":1615},{"krate":0,"index":1617},{"krate":0,"index":1619},{"krate":0,"index":1620}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":93539,"byte_end":93550,"line_start":1036,"line_end":1036,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1624}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":93668,"byte_end":93679,"line_start":1042,"line_end":1042,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1628}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":93864,"byte_end":93875,"line_start":1052,"line_end":1052,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1636}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":95419,"byte_end":95430,"line_start":1119,"line_end":1119,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1648},{"krate":0,"index":1650},{"krate":0,"index":1651}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":96894,"byte_end":96908,"line_start":1174,"line_end":1174,"column_start":13,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1654}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":97395,"byte_end":97409,"line_start":1190,"line_end":1190,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1658},{"krate":0,"index":1659}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":97591,"byte_end":97605,"line_start":1200,"line_end":1200,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1662},{"krate":0,"index":1663},{"krate":0,"index":1664},{"krate":0,"index":1665},{"krate":0,"index":1666}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":98150,"byte_end":98163,"line_start":1221,"line_end":1221,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1674}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":98268,"byte_end":98281,"line_start":1227,"line_end":1227,"column_start":26,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":98317,"byte_end":98330,"line_start":1229,"line_end":1229,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1679}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":98432,"byte_end":98445,"line_start":1235,"line_end":1235,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1682}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":98550,"byte_end":98563,"line_start":1241,"line_end":1241,"column_start":24,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":98602,"byte_end":98615,"line_start":1243,"line_end":1243,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1687}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":98753,"byte_end":98766,"line_start":1249,"line_end":1249,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1690}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":98879,"byte_end":98892,"line_start":1255,"line_end":1255,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1693}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":99046,"byte_end":99059,"line_start":1264,"line_end":1264,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1696}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":99228,"byte_end":99241,"line_start":1273,"line_end":1273,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1699},{"krate":0,"index":1700}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":291442,"byte_end":291448,"line_start":356,"line_end":356,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2114},{"krate":0,"index":2115},{"krate":0,"index":7293},{"krate":0,"index":7294},{"krate":0,"index":2116},{"krate":0,"index":2118}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":298243,"byte_end":298245,"line_start":562,"line_end":562,"column_start":42,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2143},{"krate":0,"index":2144},{"krate":0,"index":7307},{"krate":0,"index":7308},{"krate":0,"index":2145},{"krate":0,"index":2147}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":300399,"byte_end":300407,"line_start":635,"line_end":635,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2155},{"krate":0,"index":2156},{"krate":0,"index":7318},{"krate":0,"index":7319},{"krate":0,"index":2157},{"krate":0,"index":7320},{"krate":0,"index":7321}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":307956,"byte_end":307969,"line_start":23,"line_end":23,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2244},{"krate":0,"index":2245},{"krate":0,"index":7331},{"krate":0,"index":7332},{"krate":0,"index":2246},{"krate":0,"index":2248},{"krate":0,"index":2249},{"krate":0,"index":7333}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":309802,"byte_end":309805,"line_start":91,"line_end":91,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2257},{"krate":0,"index":2258},{"krate":0,"index":2259},{"krate":0,"index":7343},{"krate":0,"index":7344},{"krate":0,"index":2260},{"krate":0,"index":2262},{"krate":0,"index":7345},{"krate":0,"index":7346},{"krate":0,"index":7347}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":311794,"byte_end":311803,"line_start":170,"line_end":170,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2271},{"krate":0,"index":2272},{"krate":0,"index":2273},{"krate":0,"index":7357},{"krate":0,"index":7358},{"krate":0,"index":7359}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":312941,"byte_end":312944,"line_start":216,"line_end":216,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2283},{"krate":0,"index":2284},{"krate":0,"index":7373},{"krate":0,"index":7374},{"krate":0,"index":2285},{"krate":0,"index":7375},{"krate":0,"index":7376},{"krate":0,"index":7377}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":314042,"byte_end":314050,"line_start":261,"line_end":261,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2298},{"krate":0,"index":2299},{"krate":0,"index":7391},{"krate":0,"index":7392},{"krate":0,"index":2300},{"krate":0,"index":7393},{"krate":0,"index":7394},{"krate":0,"index":7395}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":315219,"byte_end":315226,"line_start":306,"line_end":306,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2313},{"krate":0,"index":2314},{"krate":0,"index":7409},{"krate":0,"index":7410},{"krate":0,"index":2315},{"krate":0,"index":7411},{"krate":0,"index":7412},{"krate":0,"index":7413}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":316604,"byte_end":316611,"line_start":357,"line_end":357,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2328},{"krate":0,"index":2329},{"krate":0,"index":7427},{"krate":0,"index":7428},{"krate":0,"index":2330},{"krate":0,"index":7429},{"krate":0,"index":7430},{"krate":0,"index":7431}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":318981,"byte_end":318990,"line_start":430,"line_end":430,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2341}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":321524,"byte_end":321533,"line_start":500,"line_end":500,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2347},{"krate":0,"index":2348},{"krate":0,"index":7445},{"krate":0,"index":7446},{"krate":0,"index":2349},{"krate":0,"index":2351}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":323155,"byte_end":323161,"line_start":557,"line_end":557,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2369},{"krate":0,"index":2370},{"krate":0,"index":2371},{"krate":0,"index":7447},{"krate":0,"index":7448},{"krate":0,"index":2372},{"krate":0,"index":2374}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":325445,"byte_end":325454,"line_start":635,"line_end":635,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2382},{"krate":0,"index":2383},{"krate":0,"index":2384},{"krate":0,"index":7449},{"krate":0,"index":7450},{"krate":0,"index":2385},{"krate":0,"index":7451},{"krate":0,"index":7452},{"krate":0,"index":7453}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":326370,"byte_end":326376,"line_start":678,"line_end":678,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2393},{"krate":0,"index":2394},{"krate":0,"index":2395},{"krate":0,"index":7463},{"krate":0,"index":7464},{"krate":0,"index":2397},{"krate":0,"index":7465},{"krate":0,"index":7466},{"krate":0,"index":7467}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":327554,"byte_end":327575,"line_start":730,"line_end":730,"column_start":34,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2410},{"krate":0,"index":2411},{"krate":0,"index":2412},{"krate":0,"index":7473},{"krate":0,"index":7474},{"krate":0,"index":2413},{"krate":0,"index":7475},{"krate":0,"index":7476},{"krate":0,"index":7477}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":330258,"byte_end":330283,"line_start":833,"line_end":833,"column_start":34,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2425},{"krate":0,"index":2426},{"krate":0,"index":2427},{"krate":0,"index":7483},{"krate":0,"index":7484},{"krate":0,"index":2428},{"krate":0,"index":7485},{"krate":0,"index":7486},{"krate":0,"index":7487}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":333030,"byte_end":333059,"line_start":936,"line_end":936,"column_start":34,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2440},{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":7493},{"krate":0,"index":7494},{"krate":0,"index":2443},{"krate":0,"index":7495},{"krate":0,"index":7496},{"krate":0,"index":7497}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":335647,"byte_end":335651,"line_start":1030,"line_end":1030,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2453},{"krate":0,"index":2454},{"krate":0,"index":2455},{"krate":0,"index":2456},{"krate":0,"index":7507},{"krate":0,"index":7508},{"krate":0,"index":2457},{"krate":0,"index":2459},{"krate":0,"index":2461},{"krate":0,"index":2462}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":337630,"byte_end":337637,"line_start":1102,"line_end":1102,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2470}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":337953,"byte_end":337960,"line_start":1115,"line_end":1115,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2477},{"krate":0,"index":2478},{"krate":0,"index":7522},{"krate":0,"index":7523},{"krate":0,"index":2479},{"krate":0,"index":2481},{"krate":0,"index":2482}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":340128,"byte_end":340134,"line_start":1192,"line_end":1192,"column_start":17,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":340181,"byte_end":340187,"line_start":1194,"line_end":1194,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2496}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":340551,"byte_end":340554,"line_start":1215,"line_end":1215,"column_start":17,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":340605,"byte_end":340608,"line_start":1217,"line_end":1217,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2507}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":342802,"byte_end":342808,"line_start":1292,"line_end":1292,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2521},{"krate":0,"index":2522},{"krate":0,"index":2523},{"krate":0,"index":2525},{"krate":0,"index":7574},{"krate":0,"index":7575},{"krate":0,"index":2527},{"krate":0,"index":2530},{"krate":0,"index":2532}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":347187,"byte_end":347201,"line_start":1435,"line_end":1435,"column_start":49,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2557},{"krate":0,"index":2558},{"krate":0,"index":7576},{"krate":0,"index":7577},{"krate":0,"index":2559}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":349285,"byte_end":349292,"line_start":1516,"line_end":1516,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2585},{"krate":0,"index":2586},{"krate":0,"index":7585},{"krate":0,"index":7586},{"krate":0,"index":2587},{"krate":0,"index":7587},{"krate":0,"index":7588}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":351056,"byte_end":351066,"line_start":18,"line_end":18,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2633},{"krate":0,"index":2634},{"krate":0,"index":2635},{"krate":0,"index":2636}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":353263,"byte_end":353270,"line_start":97,"line_end":97,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2651},{"krate":0,"index":2652},{"krate":0,"index":7611},{"krate":0,"index":7612},{"krate":0,"index":2653},{"krate":0,"index":2655},{"krate":0,"index":7613},{"krate":0,"index":7614}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":354816,"byte_end":354824,"line_start":154,"line_end":154,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2666},{"krate":0,"index":2667},{"krate":0,"index":7625},{"krate":0,"index":7626},{"krate":0,"index":2668},{"krate":0,"index":2670},{"krate":0,"index":7627},{"krate":0,"index":7628}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":356008,"byte_end":356014,"line_start":200,"line_end":200,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":7636},{"krate":0,"index":7637},{"krate":0,"index":2682},{"krate":0,"index":2685},{"krate":0,"index":2686},{"krate":0,"index":7638}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":358943,"byte_end":358951,"line_start":69,"line_end":69,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":2725}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":359693,"byte_end":359702,"line_start":105,"line_end":105,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2736}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":359930,"byte_end":359939,"line_start":118,"line_end":118,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2741},{"krate":0,"index":2742},{"krate":0,"index":2743}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":362575,"byte_end":362580,"line_start":35,"line_end":35,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2818},{"krate":0,"index":2819},{"krate":0,"index":2820},{"krate":0,"index":2824}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":366176,"byte_end":366194,"line_start":153,"line_end":153,"column_start":34,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2835},{"krate":0,"index":2836},{"krate":0,"index":7695},{"krate":0,"index":7696},{"krate":0,"index":2837},{"krate":0,"index":2840}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":369519,"byte_end":369523,"line_start":261,"line_end":261,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2853},{"krate":0,"index":2854},{"krate":0,"index":2855}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":370629,"byte_end":370638,"line_start":305,"line_end":305,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2867},{"krate":0,"index":2868},{"krate":0,"index":7697},{"krate":0,"index":7698},{"krate":0,"index":2869}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":372194,"byte_end":372204,"line_start":363,"line_end":363,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2885},{"krate":0,"index":2886},{"krate":0,"index":7699},{"krate":0,"index":7700},{"krate":0,"index":2887}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":373763,"byte_end":373777,"line_start":423,"line_end":423,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2900},{"krate":0,"index":2901},{"krate":0,"index":2902}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":378312,"byte_end":378321,"line_start":543,"line_end":543,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2909}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":378621,"byte_end":378627,"line_start":557,"line_end":557,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2919},{"krate":0,"index":2920},{"krate":0,"index":7714},{"krate":0,"index":7715},{"krate":0,"index":2921}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":387089,"byte_end":387104,"line_start":89,"line_end":89,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3030},{"krate":0,"index":3031},{"krate":0,"index":3032}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":387775,"byte_end":387786,"line_start":119,"line_end":119,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3039},{"krate":0,"index":3040},{"krate":0,"index":7801},{"krate":0,"index":7802},{"krate":0,"index":3041},{"krate":0,"index":3045}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":391174,"byte_end":391178,"line_start":252,"line_end":252,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3078},{"krate":0,"index":3079},{"krate":0,"index":3081},{"krate":0,"index":3083},{"krate":0,"index":3085}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":393753,"byte_end":393757,"line_start":338,"line_end":338,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3093},{"krate":0,"index":3094}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":394867,"byte_end":394871,"line_start":380,"line_end":380,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3099},{"krate":0,"index":3100},{"krate":0,"index":7840},{"krate":0,"index":7841},{"krate":0,"index":3101},{"krate":0,"index":3103},{"krate":0,"index":3104},{"krate":0,"index":3105}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":396902,"byte_end":396907,"line_start":452,"line_end":452,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3114},{"krate":0,"index":3115},{"krate":0,"index":7855},{"krate":0,"index":7856},{"krate":0,"index":3116},{"krate":0,"index":3119},{"krate":0,"index":7857},{"krate":0,"index":7858}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":399410,"byte_end":399414,"line_start":543,"line_end":543,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3125}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":399488,"byte_end":399492,"line_start":549,"line_end":549,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3128}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":401215,"byte_end":401220,"line_start":618,"line_end":618,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3135},{"krate":0,"index":3136},{"krate":0,"index":7917},{"krate":0,"index":7918},{"krate":0,"index":3137},{"krate":0,"index":3140},{"krate":0,"index":7919},{"krate":0,"index":7920}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":403316,"byte_end":403322,"line_start":693,"line_end":693,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3151},{"krate":0,"index":3152},{"krate":0,"index":7937},{"krate":0,"index":7938},{"krate":0,"index":3153},{"krate":0,"index":3157},{"krate":0,"index":7939},{"krate":0,"index":7940}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":406430,"byte_end":406438,"line_start":801,"line_end":801,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3168},{"krate":0,"index":3169},{"krate":0,"index":7957},{"krate":0,"index":7958},{"krate":0,"index":3170},{"krate":0,"index":3173}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":408516,"byte_end":408525,"line_start":875,"line_end":875,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3184},{"krate":0,"index":3185},{"krate":0,"index":7975},{"krate":0,"index":7976},{"krate":0,"index":3186},{"krate":0,"index":3191}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":411748,"byte_end":411755,"line_start":982,"line_end":982,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3201},{"krate":0,"index":3202},{"krate":0,"index":7990},{"krate":0,"index":7991},{"krate":0,"index":3203},{"krate":0,"index":3205}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":414372,"byte_end":414379,"line_start":1072,"line_end":1072,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3214},{"krate":0,"index":3215},{"krate":0,"index":3216},{"krate":0,"index":3217}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":416798,"byte_end":416807,"line_start":1147,"line_end":1147,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3226},{"krate":0,"index":3227},{"krate":0,"index":8017},{"krate":0,"index":8018},{"krate":0,"index":3228}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":421069,"byte_end":421080,"line_start":1270,"line_end":1270,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3239},{"krate":0,"index":3240},{"krate":0,"index":8054},{"krate":0,"index":8055},{"krate":0,"index":3241}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":424887,"byte_end":424894,"line_start":1384,"line_end":1384,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3259},{"krate":0,"index":3260},{"krate":0,"index":3261},{"krate":0,"index":3262}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":428804,"byte_end":428811,"line_start":1495,"line_end":1495,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3285},{"krate":0,"index":3286},{"krate":0,"index":8088},{"krate":0,"index":8089},{"krate":0,"index":3287}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":433065,"byte_end":433078,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3354}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":433226,"byte_end":433239,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3358}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":450564,"byte_end":450568,"line_start":499,"line_end":499,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3371},{"krate":0,"index":3372},{"krate":0,"index":3373},{"krate":0,"index":9782},{"krate":0,"index":9783},{"krate":0,"index":3375},{"krate":0,"index":9784},{"krate":0,"index":9785},{"krate":0,"index":9786}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":451744,"byte_end":451748,"line_start":547,"line_end":547,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3386},{"krate":0,"index":3387},{"krate":0,"index":9799},{"krate":0,"index":9800},{"krate":0,"index":3388},{"krate":0,"index":9801},{"krate":0,"index":9802},{"krate":0,"index":9803}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":453476,"byte_end":453480,"line_start":617,"line_end":617,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3400},{"krate":0,"index":3401},{"krate":0,"index":9867},{"krate":0,"index":9868},{"krate":0,"index":3402},{"krate":0,"index":3404}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":456000,"byte_end":456011,"line_start":707,"line_end":707,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3415},{"krate":0,"index":3416},{"krate":0,"index":9882},{"krate":0,"index":9883},{"krate":0,"index":3417},{"krate":0,"index":3419}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":458719,"byte_end":458726,"line_start":804,"line_end":804,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3430},{"krate":0,"index":3431},{"krate":0,"index":9897},{"krate":0,"index":9898},{"krate":0,"index":3432},{"krate":0,"index":3434}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":461727,"byte_end":461730,"line_start":17,"line_end":17,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3484},{"krate":0,"index":3485},{"krate":0,"index":3486}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":463089,"byte_end":463096,"line_start":73,"line_end":73,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3496},{"krate":0,"index":3497},{"krate":0,"index":3498}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":464197,"byte_end":464207,"line_start":121,"line_end":121,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3507},{"krate":0,"index":3508},{"krate":0,"index":3509}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":465594,"byte_end":465599,"line_start":179,"line_end":179,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3516},{"krate":0,"index":3517},{"krate":0,"index":3518},{"krate":0,"index":3520}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":466713,"byte_end":466719,"line_start":230,"line_end":230,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3529},{"krate":0,"index":3530},{"krate":0,"index":3531},{"krate":0,"index":3532}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":469950,"byte_end":469959,"line_start":334,"line_end":334,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3542},{"krate":0,"index":3543},{"krate":0,"index":3544}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":472803,"byte_end":472811,"line_start":431,"line_end":431,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3551},{"krate":0,"index":3552},{"krate":0,"index":3553}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":473858,"byte_end":473863,"line_start":477,"line_end":477,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3559},{"krate":0,"index":3560},{"krate":0,"index":3561},{"krate":0,"index":3564}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":475110,"byte_end":475116,"line_start":530,"line_end":530,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3571},{"krate":0,"index":3572},{"krate":0,"index":3573}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":476558,"byte_end":476563,"line_start":581,"line_end":581,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3582},{"krate":0,"index":3583},{"krate":0,"index":3584}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":477309,"byte_end":477316,"line_start":616,"line_end":616,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3592},{"krate":0,"index":3593},{"krate":0,"index":3594}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":478172,"byte_end":478175,"line_start":652,"line_end":652,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3601},{"krate":0,"index":3602},{"krate":0,"index":3603},{"krate":0,"index":3604}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":244040,"byte_end":244041,"line_start":1032,"line_end":1032,"column_start":38,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":245542,"byte_end":245545,"line_start":1093,"line_end":1093,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":10042},{"krate":0,"index":10043},{"krate":0,"index":10044},{"krate":0,"index":10045},{"krate":0,"index":10046},{"krate":0,"index":10047},{"krate":0,"index":10048}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":247267,"byte_end":247276,"line_start":1152,"line_end":1152,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3702},{"krate":0,"index":3703},{"krate":0,"index":3704}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":247856,"byte_end":247867,"line_start":1180,"line_end":1180,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3708},{"krate":0,"index":3709},{"krate":0,"index":3710}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":22903,"byte_end":22908,"line_start":616,"line_end":616,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":158}},{"kind":"Mod","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":22931,"byte_end":22937,"line_start":618,"line_end":618,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":547}},{"kind":"Mod","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":68055,"byte_end":68065,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":590}},{"kind":"Mod","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":68253,"byte_end":68261,"line_start":57,"line_end":57,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":656}},{"kind":"Mod","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":68342,"byte_end":68346,"line_start":60,"line_end":60,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":699}},{"kind":"Mod","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":68426,"byte_end":68434,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":950}},{"kind":"Mod","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":68570,"byte_end":68574,"line_start":66,"line_end":66,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1117}},{"kind":"Mod","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":68584,"byte_end":68588,"line_start":67,"line_end":67,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1200}},{"kind":"Mod","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":68651,"byte_end":68656,"line_start":69,"line_end":69,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1275}},{"kind":"Mod","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":68738,"byte_end":68745,"line_start":73,"line_end":73,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1325}},{"kind":"Mod","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/lib.rs","byte_start":22960,"byte_end":22966,"line_start":620,"line_end":620,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1717}},{"kind":"Mod","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":211285,"byte_end":211289,"line_start":58,"line_end":58,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1857}},{"kind":"Mod","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":211299,"byte_end":211303,"line_start":59,"line_end":59,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1965}},{"kind":"Mod","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":211313,"byte_end":211319,"line_start":60,"line_end":60,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2051}},{"kind":"Mod","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":211329,"byte_end":211339,"line_start":61,"line_end":61,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":2166}},{"kind":"Mod","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":211349,"byte_end":211354,"line_start":62,"line_end":62,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2593}},{"kind":"Mod","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":211364,"byte_end":211372,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2690}},{"kind":"Mod","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":211382,"byte_end":211387,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2748}},{"kind":"Mod","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":211487,"byte_end":211493,"line_start":68,"line_end":68,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2927}},{"kind":"Mod","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":211503,"byte_end":211511,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":3298}},{"kind":"Mod","span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":211521,"byte_end":211526,"line_start":70,"line_end":70,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3440}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":35950,"byte_end":35956,"line_start":14,"line_end":14,"column_start":32,"column_end":38},"kind":{"Impl":{"id":0}},"from":{"krate":2,"index":39860},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":37494,"byte_end":37498,"line_start":69,"line_end":69,"column_start":43,"column_end":47},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":3713},"to":{"krate":0,"index":182}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":37948,"byte_end":37952,"line_start":86,"line_end":86,"column_start":27,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":3713},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":38238,"byte_end":38242,"line_start":99,"line_end":99,"column_start":38,"column_end":42},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3713},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":38527,"byte_end":38531,"line_start":112,"line_end":112,"column_start":25,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3713},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":38895,"byte_end":38899,"line_start":128,"line_end":128,"column_start":31,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3713},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":39030,"byte_end":39035,"line_start":134,"line_end":134,"column_start":40,"column_end":45},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":231},"to":{"krate":0,"index":182}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":39320,"byte_end":39324,"line_start":147,"line_end":147,"column_start":31,"column_end":35},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3713},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":39455,"byte_end":39460,"line_start":153,"line_end":153,"column_start":40,"column_end":45},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":245},"to":{"krate":0,"index":182}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":39826,"byte_end":39830,"line_start":167,"line_end":167,"column_start":32,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3713},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":39976,"byte_end":39982,"line_start":176,"line_end":176,"column_start":40,"column_end":46},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":259},"to":{"krate":0,"index":182}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":40269,"byte_end":40273,"line_start":188,"line_end":188,"column_start":35,"column_end":39},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3713},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":40425,"byte_end":40431,"line_start":197,"line_end":197,"column_start":43,"column_end":49},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":273},"to":{"krate":0,"index":182}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":41425,"byte_end":41431,"line_start":222,"line_end":222,"column_start":22,"column_end":28},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3739},"to":{"krate":2,"index":2732}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":41606,"byte_end":41612,"line_start":230,"line_end":230,"column_start":22,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3739},"to":{"krate":2,"index":2729}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":41758,"byte_end":41764,"line_start":238,"line_end":238,"column_start":9,"column_end":15},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3739},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":46097,"byte_end":46102,"line_start":367,"line_end":367,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":2837},"to":{"krate":0,"index":320}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":48983,"byte_end":48988,"line_start":456,"line_end":456,"column_start":46,"column_end":51},"kind":"SuperTrait","from":{"krate":2,"index":2837},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":48991,"byte_end":49000,"line_start":456,"line_end":456,"column_start":54,"column_end":63},"kind":"SuperTrait","from":{"krate":2,"index":2487},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":51568,"byte_end":51573,"line_start":533,"line_end":533,"column_start":50,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":2837},"to":{"krate":0,"index":379}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":52041,"byte_end":52046,"line_start":546,"line_end":546,"column_start":41,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":2837},"to":{"krate":0,"index":388}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":52328,"byte_end":52343,"line_start":560,"line_end":560,"column_start":23,"column_end":38},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3761},"to":{"krate":2,"index":8812}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":52499,"byte_end":52514,"line_start":567,"line_end":567,"column_start":19,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3761},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":52589,"byte_end":52604,"line_start":573,"line_end":573,"column_start":6,"column_end":21},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3761},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":52856,"byte_end":52871,"line_start":583,"line_end":583,"column_start":48,"column_end":63},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3761},"to":{"krate":0,"index":320}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":54409,"byte_end":54424,"line_start":653,"line_end":653,"column_start":67,"column_end":82},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":3761},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":55595,"byte_end":55610,"line_start":705,"line_end":705,"column_start":71,"column_end":86},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3761},"to":{"krate":0,"index":379}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":56063,"byte_end":56078,"line_start":723,"line_end":723,"column_start":52,"column_end":67},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":3761},"to":{"krate":0,"index":388}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":56536,"byte_end":56553,"line_start":743,"line_end":743,"column_start":23,"column_end":40},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":3774},"to":{"krate":2,"index":8812}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":56709,"byte_end":56726,"line_start":750,"line_end":750,"column_start":19,"column_end":36},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":3774},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":56801,"byte_end":56818,"line_start":756,"line_end":756,"column_start":6,"column_end":23},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":3774},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":57139,"byte_end":57156,"line_start":767,"line_end":767,"column_start":48,"column_end":65},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":3774},"to":{"krate":0,"index":320}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":59116,"byte_end":59133,"line_start":842,"line_end":842,"column_start":67,"column_end":84},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":3774},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":60316,"byte_end":60333,"line_start":893,"line_end":893,"column_start":71,"column_end":88},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":3774},"to":{"krate":0,"index":379}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":60786,"byte_end":60803,"line_start":911,"line_end":911,"column_start":52,"column_end":69},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":3774},"to":{"krate":0,"index":388}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":61415,"byte_end":61422,"line_start":933,"line_end":933,"column_start":21,"column_end":28},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":3789},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":62412,"byte_end":62423,"line_start":959,"line_end":959,"column_start":12,"column_end":23},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":3807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":64230,"byte_end":64241,"line_start":1029,"line_end":1029,"column_start":12,"column_end":23},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":3807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":64394,"byte_end":64405,"line_start":1035,"line_end":1035,"column_start":60,"column_end":71},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":3807},"to":{"krate":2,"index":2735}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":64775,"byte_end":64786,"line_start":1047,"line_end":1047,"column_start":44,"column_end":55},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3807},"to":{"krate":2,"index":2735}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/error.rs","byte_start":65187,"byte_end":65198,"line_start":1061,"line_end":1061,"column_start":44,"column_end":55},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3807},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":124018,"byte_end":124027,"line_start":54,"line_end":54,"column_start":9,"column_end":18},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":125926,"byte_end":125932,"line_start":118,"line_end":118,"column_start":37,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":620},"to":{"krate":0,"index":621}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":126195,"byte_end":126208,"line_start":128,"line_end":128,"column_start":31,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":621},"to":{"krate":0,"index":626}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":127569,"byte_end":127575,"line_start":182,"line_end":182,"column_start":25,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":3848},"to":{"krate":0,"index":620}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":127609,"byte_end":127615,"line_start":184,"line_end":184,"column_start":30,"column_end":36},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3848},"to":{"krate":0,"index":621}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":127962,"byte_end":127968,"line_start":199,"line_end":199,"column_start":32,"column_end":38},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3848},"to":{"krate":0,"index":626}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":131136,"byte_end":131146,"line_start":327,"line_end":327,"column_start":25,"column_end":35},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3853},"to":{"krate":0,"index":620}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":131191,"byte_end":131201,"line_start":329,"line_end":329,"column_start":41,"column_end":51},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3853},"to":{"krate":0,"index":621}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":131605,"byte_end":131615,"line_start":344,"line_end":344,"column_start":43,"column_end":53},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":3853},"to":{"krate":0,"index":626}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":143213,"byte_end":143222,"line_start":727,"line_end":727,"column_start":24,"column_end":33},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":3841},"to":{"krate":1,"index":4259}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buf_reader.rs","byte_start":143823,"byte_end":143832,"line_start":746,"line_end":746,"column_start":27,"column_end":36},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":3841},"to":{"krate":1,"index":4344}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":150824,"byte_end":150830,"line_start":38,"line_end":38,"column_start":29,"column_end":35},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":3857},"to":{"krate":0,"index":1400}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":151443,"byte_end":151449,"line_start":62,"line_end":62,"column_start":13,"column_end":19},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3857},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":151960,"byte_end":151966,"line_start":80,"line_end":80,"column_start":28,"column_end":34},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":3857},"to":{"krate":0,"index":1389}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/buffered.rs","byte_start":152568,"byte_end":152574,"line_start":102,"line_end":102,"column_start":28,"column_end":34},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":3857},"to":{"krate":0,"index":1393}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":157734,"byte_end":157738,"line_start":105,"line_end":105,"column_start":48,"column_end":52},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":3872},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":158112,"byte_end":158116,"line_start":119,"line_end":119,"column_start":12,"column_end":16},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":3872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":158780,"byte_end":158784,"line_start":149,"line_end":149,"column_start":48,"column_end":52},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":3872},"to":{"krate":2,"index":2487}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":159352,"byte_end":159356,"line_start":162,"line_end":162,"column_start":57,"column_end":61},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":3872},"to":{"krate":2,"index":8812}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":159705,"byte_end":159709,"line_start":173,"line_end":173,"column_start":24,"column_end":28},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":3872},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":159820,"byte_end":159824,"line_start":178,"line_end":178,"column_start":29,"column_end":33},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":3872},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":159938,"byte_end":159942,"line_start":184,"line_end":184,"column_start":35,"column_end":39},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3872},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":160050,"byte_end":160054,"line_start":190,"line_end":190,"column_start":22,"column_end":26},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3872},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":160651,"byte_end":160656,"line_start":209,"line_end":209,"column_start":48,"column_end":53},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":3895},"to":{"krate":0,"index":320}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":163643,"byte_end":163648,"line_start":315,"line_end":315,"column_start":81,"column_end":86},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":3895},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":164798,"byte_end":164804,"line_start":367,"line_end":367,"column_start":9,"column_end":15},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3914},"to":{"krate":0,"index":379}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":165343,"byte_end":165348,"line_start":384,"line_end":384,"column_start":66,"column_end":71},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":3895},"to":{"krate":0,"index":388}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":166674,"byte_end":166680,"line_start":416,"line_end":416,"column_start":9,"column_end":15},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":3914},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":168741,"byte_end":168746,"line_start":501,"line_end":501,"column_start":12,"column_end":17},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":3895},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":169522,"byte_end":169527,"line_start":531,"line_end":531,"column_start":48,"column_end":53},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":3895},"to":{"krate":2,"index":2487}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":169889,"byte_end":169894,"line_start":542,"line_end":542,"column_start":27,"column_end":32},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":3895},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":170039,"byte_end":170044,"line_start":551,"line_end":551,"column_start":12,"column_end":17},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":3895},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":173579,"byte_end":173585,"line_start":647,"line_end":647,"column_start":15,"column_end":21},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":3914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":177322,"byte_end":177328,"line_start":769,"line_end":769,"column_start":28,"column_end":34},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3914},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":177546,"byte_end":177552,"line_start":780,"line_end":780,"column_start":32,"column_end":38},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":3914},"to":{"krate":2,"index":8812}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":177862,"byte_end":177867,"line_start":792,"line_end":792,"column_start":57,"column_end":62},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":3895},"to":{"krate":2,"index":8812}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":178317,"byte_end":178323,"line_start":806,"line_end":806,"column_start":21,"column_end":27},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":3935},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":178418,"byte_end":178424,"line_start":812,"line_end":812,"column_start":25,"column_end":31},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":3935},"to":{"krate":0,"index":1400}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":178858,"byte_end":178864,"line_start":830,"line_end":830,"column_start":24,"column_end":30},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":3935},"to":{"krate":0,"index":1393}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":179328,"byte_end":179334,"line_start":851,"line_end":851,"column_start":29,"column_end":35},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":3935},"to":{"krate":0,"index":1409}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/easy.rs","byte_start":180252,"byte_end":180258,"line_start":888,"line_end":888,"column_start":24,"column_end":30},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":3935},"to":{"krate":0,"index":1389}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":181303,"byte_end":181313,"line_start":30,"line_end":30,"column_start":41,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":990},"to":{"krate":0,"index":998}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":181788,"byte_end":181799,"line_start":48,"line_end":48,"column_start":35,"column_end":46},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":4260},"to":{"krate":0,"index":1002}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":181881,"byte_end":181895,"line_start":52,"line_end":52,"column_start":31,"column_end":45},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":4295},"to":{"krate":0,"index":1002}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":182003,"byte_end":182009,"line_start":57,"line_end":57,"column_start":37,"column_end":43},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1187},"to":{"krate":0,"index":1002}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":183051,"byte_end":183057,"line_start":92,"line_end":92,"column_start":16,"column_end":22},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":3958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":183348,"byte_end":183354,"line_start":103,"line_end":103,"column_start":13,"column_end":19},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":183749,"byte_end":183755,"line_start":114,"line_end":114,"column_start":34,"column_end":40},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":3958},"to":{"krate":0,"index":1389}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":184192,"byte_end":184198,"line_start":128,"line_end":128,"column_start":34,"column_end":40},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":3958},"to":{"krate":0,"index":1393}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":186095,"byte_end":186110,"line_start":200,"line_end":200,"column_start":33,"column_end":48},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":3979},"to":{"krate":0,"index":990}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":186545,"byte_end":186560,"line_start":228,"line_end":228,"column_start":6,"column_end":21},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":3979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":186815,"byte_end":186830,"line_start":238,"line_end":238,"column_start":52,"column_end":67},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":3979},"to":{"krate":0,"index":998}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":187261,"byte_end":187275,"line_start":257,"line_end":257,"column_start":18,"column_end":32},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3992},"to":{"krate":2,"index":2810}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":187382,"byte_end":187396,"line_start":263,"line_end":263,"column_start":23,"column_end":37},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3992},"to":{"krate":2,"index":8812}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":187542,"byte_end":187556,"line_start":269,"line_end":269,"column_start":6,"column_end":20},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":3992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":187655,"byte_end":187669,"line_start":275,"line_end":275,"column_start":27,"column_end":41},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":3992},"to":{"krate":0,"index":990}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":188211,"byte_end":188225,"line_start":304,"line_end":304,"column_start":25,"column_end":39},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":3992},"to":{"krate":0,"index":990}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":188786,"byte_end":188800,"line_start":333,"line_end":333,"column_start":45,"column_end":59},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":3992},"to":{"krate":0,"index":998}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":188972,"byte_end":188978,"line_start":341,"line_end":341,"column_start":39,"column_end":45},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3958},"to":{"krate":0,"index":1409}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/position.rs","byte_start":190689,"byte_end":190695,"line_start":403,"line_end":403,"column_start":35,"column_end":41},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3958},"to":{"krate":0,"index":1400}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":192829,"byte_end":192834,"line_start":18,"line_end":18,"column_start":23,"column_end":28},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":4011},"to":{"krate":2,"index":8812}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":193146,"byte_end":193151,"line_start":28,"line_end":28,"column_start":20,"column_end":25},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":4011},"to":{"krate":2,"index":2487}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":193435,"byte_end":193440,"line_start":38,"line_end":38,"column_start":48,"column_end":53},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":4011},"to":{"krate":0,"index":320}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":194914,"byte_end":194919,"line_start":109,"line_end":109,"column_start":67,"column_end":72},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":4011},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":196006,"byte_end":196012,"line_start":161,"line_end":161,"column_start":30,"column_end":36},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1187},"to":{"krate":0,"index":1393}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/read.rs","byte_start":196390,"byte_end":196396,"line_start":177,"line_end":177,"column_start":9,"column_end":15},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/span.rs","byte_start":197820,"byte_end":197824,"line_start":15,"line_end":15,"column_start":21,"column_end":25},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":4021},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/span.rs","byte_start":197984,"byte_end":197988,"line_start":28,"line_end":28,"column_start":9,"column_end":13},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":4021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/span.rs","byte_start":198282,"byte_end":198288,"line_start":40,"line_end":40,"column_start":24,"column_end":30},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":4053},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/span.rs","byte_start":198402,"byte_end":198408,"line_start":46,"line_end":46,"column_start":28,"column_end":34},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":4053},"to":{"krate":0,"index":1400}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/span.rs","byte_start":199143,"byte_end":199149,"line_start":71,"line_end":71,"column_start":27,"column_end":33},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":4053},"to":{"krate":0,"index":1393}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/span.rs","byte_start":199907,"byte_end":199913,"line_start":97,"line_end":97,"column_start":32,"column_end":38},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":4053},"to":{"krate":0,"index":1409}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/span.rs","byte_start":201215,"byte_end":201221,"line_start":144,"line_end":144,"column_start":27,"column_end":33},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":4053},"to":{"krate":0,"index":1389}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/state.rs","byte_start":201960,"byte_end":201966,"line_start":12,"line_end":12,"column_start":27,"column_end":33},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":4085},"to":{"krate":0,"index":1389}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/state.rs","byte_start":202124,"byte_end":202130,"line_start":22,"line_end":22,"column_start":28,"column_end":34},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":4085},"to":{"krate":0,"index":1400}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/state.rs","byte_start":202474,"byte_end":202480,"line_start":39,"line_end":39,"column_start":27,"column_end":33},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":4085},"to":{"krate":0,"index":1393}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/state.rs","byte_start":202856,"byte_end":202862,"line_start":58,"line_end":58,"column_start":32,"column_end":38},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":4085},"to":{"krate":0,"index":1409}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":204029,"byte_end":204035,"line_start":21,"line_end":21,"column_start":22,"column_end":28},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":3914},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":204418,"byte_end":204423,"line_start":35,"line_end":35,"column_start":34,"column_end":39},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":4124},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":204557,"byte_end":204562,"line_start":42,"line_end":42,"column_start":57,"column_end":62},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":4124},"to":{"krate":2,"index":8812}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":204962,"byte_end":204969,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":4137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":205648,"byte_end":205655,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":4137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":206012,"byte_end":206019,"line_start":94,"line_end":94,"column_start":12,"column_end":19},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":4137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":206110,"byte_end":206117,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":4137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/decoder.rs","byte_start":207107,"byte_end":207114,"line_start":137,"line_end":137,"column_start":15,"column_end":22},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":4137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":68803,"byte_end":68813,"line_start":76,"line_end":76,"column_start":23,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":1393},"to":{"krate":0,"index":1389}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":71101,"byte_end":71111,"line_start":143,"line_end":143,"column_start":24,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":1393},"to":{"krate":0,"index":1400}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":71918,"byte_end":71928,"line_start":163,"line_end":163,"column_start":19,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":1393},"to":{"krate":0,"index":1404}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":71931,"byte_end":71942,"line_start":163,"line_end":163,"column_start":32,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":1400},"to":{"krate":0,"index":1404}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":71945,"byte_end":71955,"line_start":163,"line_end":163,"column_start":46,"column_end":56},"kind":"SuperTrait","from":{"krate":0,"index":1389},"to":{"krate":0,"index":1404}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":71983,"byte_end":71988,"line_start":165,"line_end":165,"column_start":24,"column_end":29},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1406},"to":{"krate":0,"index":1404}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":72486,"byte_end":72496,"line_start":184,"line_end":184,"column_start":28,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":1393},"to":{"krate":0,"index":1409}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":72499,"byte_end":72510,"line_start":184,"line_end":184,"column_start":41,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":1400},"to":{"krate":0,"index":1409}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":74535,"byte_end":74541,"line_start":242,"line_end":242,"column_start":24,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":1404},"to":{"krate":0,"index":1418}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":74544,"byte_end":74559,"line_start":242,"line_end":242,"column_start":33,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":1409},"to":{"krate":0,"index":1418}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":74592,"byte_end":74597,"line_start":244,"line_end":244,"column_start":29,"column_end":34},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1420},"to":{"krate":0,"index":1418}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":87500,"byte_end":87513,"line_start":759,"line_end":759,"column_start":21,"column_end":34},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":4172},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":87604,"byte_end":87617,"line_start":765,"line_end":765,"column_start":24,"column_end":37},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":4172},"to":{"krate":0,"index":1389}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":87764,"byte_end":87777,"line_start":775,"line_end":775,"column_start":25,"column_end":38},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":4172},"to":{"krate":0,"index":1400}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":88102,"byte_end":88115,"line_start":792,"line_end":792,"column_start":24,"column_end":37},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":4172},"to":{"krate":0,"index":1393}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":88460,"byte_end":88473,"line_start":811,"line_end":811,"column_start":29,"column_end":42},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":4172},"to":{"krate":0,"index":1409}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":89574,"byte_end":89588,"line_start":854,"line_end":854,"column_start":21,"column_end":35},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":4201},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":89917,"byte_end":89931,"line_start":867,"line_end":867,"column_start":24,"column_end":38},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":4201},"to":{"krate":0,"index":1389}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":90078,"byte_end":90092,"line_start":877,"line_end":877,"column_start":25,"column_end":39},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":4201},"to":{"krate":0,"index":1400}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":90417,"byte_end":90431,"line_start":894,"line_end":894,"column_start":24,"column_end":38},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":4201},"to":{"krate":0,"index":1393}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":90777,"byte_end":90791,"line_start":913,"line_end":913,"column_start":29,"column_end":43},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":4201},"to":{"krate":0,"index":1409}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":91678,"byte_end":91696,"line_start":951,"line_end":951,"column_start":24,"column_end":42},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":4230},"to":{"krate":0,"index":1389}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":91843,"byte_end":91861,"line_start":961,"line_end":961,"column_start":25,"column_end":43},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":4230},"to":{"krate":0,"index":1400}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":92186,"byte_end":92204,"line_start":978,"line_end":978,"column_start":24,"column_end":42},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":4230},"to":{"krate":0,"index":1393}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":92551,"byte_end":92569,"line_start":997,"line_end":997,"column_start":29,"column_end":47},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":4230},"to":{"krate":0,"index":1409}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":93539,"byte_end":93550,"line_start":1036,"line_end":1036,"column_start":23,"column_end":34},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":4260},"to":{"krate":2,"index":2457}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":93668,"byte_end":93679,"line_start":1042,"line_end":1042,"column_start":28,"column_end":39},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":4260},"to":{"krate":0,"index":1389}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":93864,"byte_end":93875,"line_start":1052,"line_end":1052,"column_start":28,"column_end":39},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":4260},"to":{"krate":0,"index":1393}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":95419,"byte_end":95430,"line_start":1119,"line_end":1119,"column_start":33,"column_end":44},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":4260},"to":{"krate":0,"index":1409}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":96894,"byte_end":96908,"line_start":1174,"line_end":1174,"column_start":13,"column_end":27},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":4295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":97395,"byte_end":97409,"line_start":1190,"line_end":1190,"column_start":26,"column_end":40},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":4295},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":97591,"byte_end":97605,"line_start":1200,"line_end":1200,"column_start":38,"column_end":52},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":4295},"to":{"krate":0,"index":1393}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":98150,"byte_end":98163,"line_start":1221,"line_end":1221,"column_start":27,"column_end":40},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1667},"to":{"krate":2,"index":2457}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":98268,"byte_end":98281,"line_start":1227,"line_end":1227,"column_start":26,"column_end":39},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1667},"to":{"krate":2,"index":2842}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":98317,"byte_end":98330,"line_start":1229,"line_end":1229,"column_start":29,"column_end":42},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1667},"to":{"krate":2,"index":2810}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":98432,"byte_end":98445,"line_start":1235,"line_end":1235,"column_start":31,"column_end":44},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1667},"to":{"krate":2,"index":2487}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":98550,"byte_end":98563,"line_start":1241,"line_end":1241,"column_start":24,"column_end":37},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1667},"to":{"krate":2,"index":2492}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":98602,"byte_end":98615,"line_start":1243,"line_end":1243,"column_start":32,"column_end":45},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1667},"to":{"krate":2,"index":2530}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":98753,"byte_end":98766,"line_start":1249,"line_end":1249,"column_start":25,"column_end":38},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1667},"to":{"krate":2,"index":2519}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":98879,"byte_end":98892,"line_start":1255,"line_end":1255,"column_start":24,"column_end":37},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1667},"to":{"krate":2,"index":8805}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":99046,"byte_end":99059,"line_start":1264,"line_end":1264,"column_start":26,"column_end":39},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1667},"to":{"krate":2,"index":8812}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/stream/mod.rs","byte_start":99228,"byte_end":99241,"line_start":1273,"line_end":1273,"column_start":9,"column_end":22},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":291442,"byte_end":291448,"line_start":356,"line_end":356,"column_start":34,"column_end":40},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":7284},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":298243,"byte_end":298245,"line_start":562,"line_end":562,"column_start":42,"column_end":44},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":7295},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/choice.rs","byte_start":300399,"byte_end":300407,"line_start":635,"line_end":635,"column_start":34,"column_end":42},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":7309},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":307956,"byte_end":307969,"line_start":23,"line_end":23,"column_start":37,"column_end":50},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":7322},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":309802,"byte_end":309805,"line_start":91,"line_end":91,"column_start":37,"column_end":40},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":7334},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":311794,"byte_end":311803,"line_start":170,"line_end":170,"column_start":37,"column_end":46},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":7348},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":312941,"byte_end":312944,"line_start":216,"line_end":216,"column_start":43,"column_end":46},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":7360},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":314042,"byte_end":314050,"line_start":261,"line_end":261,"column_start":43,"column_end":51},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":7378},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":315219,"byte_end":315226,"line_start":306,"line_end":306,"column_start":43,"column_end":50},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":7396},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":316604,"byte_end":316611,"line_start":357,"line_end":357,"column_start":43,"column_end":50},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":7414},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":318981,"byte_end":318990,"line_start":430,"line_end":430,"column_start":12,"column_end":21},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":7432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":321524,"byte_end":321533,"line_start":500,"line_end":500,"column_start":37,"column_end":46},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":7432},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":323155,"byte_end":323161,"line_start":557,"line_end":557,"column_start":37,"column_end":43},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2356},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":325445,"byte_end":325454,"line_start":635,"line_end":635,"column_start":34,"column_end":43},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2375},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":326370,"byte_end":326376,"line_start":678,"line_end":678,"column_start":34,"column_end":40},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":7454},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":327554,"byte_end":327575,"line_start":730,"line_end":730,"column_start":34,"column_end":55},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2403},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":330258,"byte_end":330283,"line_start":833,"line_end":833,"column_start":34,"column_end":59},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2418},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":333030,"byte_end":333059,"line_start":936,"line_end":936,"column_start":34,"column_end":63},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2433},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":335647,"byte_end":335651,"line_start":1030,"line_end":1030,"column_start":40,"column_end":44},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":7498},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":337630,"byte_end":337637,"line_start":1102,"line_end":1102,"column_start":12,"column_end":19},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":7509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":337953,"byte_end":337960,"line_start":1115,"line_end":1115,"column_start":40,"column_end":47},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":7509},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":340033,"byte_end":340039,"line_start":1187,"line_end":1187,"column_start":20,"column_end":26},"kind":"SuperTrait","from":{"krate":0,"index":2488},"to":{"krate":0,"index":2492}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":340128,"byte_end":340134,"line_start":1192,"line_end":1192,"column_start":17,"column_end":23},"kind":{"Impl":{"id":176}},"from":{"krate":5,"index":7285},"to":{"krate":0,"index":2488}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":340181,"byte_end":340187,"line_start":1194,"line_end":1194,"column_start":18,"column_end":24},"kind":{"Impl":{"id":177}},"from":{"krate":5,"index":7285},"to":{"krate":0,"index":2492}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":340551,"byte_end":340554,"line_start":1215,"line_end":1215,"column_start":17,"column_end":20},"kind":{"Impl":{"id":180}},"from":{"krate":5,"index":6772},"to":{"krate":0,"index":2488}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":340605,"byte_end":340608,"line_start":1217,"line_end":1217,"column_start":18,"column_end":21},"kind":{"Impl":{"id":181}},"from":{"krate":5,"index":6772},"to":{"krate":0,"index":2492}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":342802,"byte_end":342808,"line_start":1292,"line_end":1292,"column_start":40,"column_end":46},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":7555},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":347187,"byte_end":347201,"line_start":1435,"line_end":1435,"column_start":49,"column_end":63},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2544},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/combinator.rs","byte_start":349285,"byte_end":349292,"line_start":1516,"line_end":1516,"column_start":37,"column_end":44},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":7578},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":351056,"byte_end":351066,"line_start":18,"line_end":18,"column_start":37,"column_end":47},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":7589},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":353263,"byte_end":353270,"line_start":97,"line_end":97,"column_start":37,"column_end":44},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":7601},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":354816,"byte_end":354824,"line_start":154,"line_end":154,"column_start":37,"column_end":45},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":7615},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/error.rs","byte_start":356008,"byte_end":356014,"line_start":200,"line_end":200,"column_start":34,"column_end":40},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":7629},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":358943,"byte_end":358951,"line_start":69,"line_end":69,"column_start":37,"column_end":45},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":7639},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":359693,"byte_end":359702,"line_start":105,"line_end":105,"column_start":29,"column_end":38},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":7652},"to":{"krate":2,"index":2457}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/function.rs","byte_start":359930,"byte_end":359939,"line_start":118,"line_end":118,"column_start":37,"column_end":46},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":7652},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":362575,"byte_end":362580,"line_start":35,"line_end":35,"column_start":31,"column_end":36},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":2812},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":366176,"byte_end":366194,"line_start":153,"line_end":153,"column_start":34,"column_end":52},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":7688},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":369519,"byte_end":369523,"line_start":261,"line_end":261,"column_start":31,"column_end":35},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":2846},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":370629,"byte_end":370638,"line_start":305,"line_end":305,"column_start":34,"column_end":43},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":2858},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":372194,"byte_end":372204,"line_start":363,"line_end":363,"column_start":34,"column_end":44},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":2876},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":373763,"byte_end":373777,"line_start":423,"line_end":423,"column_start":31,"column_end":45},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":2894},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":378312,"byte_end":378321,"line_start":543,"line_end":543,"column_start":30,"column_end":39},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":7701},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/range.rs","byte_start":378621,"byte_end":378627,"line_start":557,"line_end":557,"column_start":37,"column_end":43},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":2910},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":387089,"byte_end":387104,"line_start":89,"line_end":89,"column_start":22,"column_end":37},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":3023},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":387775,"byte_end":387786,"line_start":119,"line_end":119,"column_start":37,"column_end":48},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":7787},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":391174,"byte_end":391178,"line_start":252,"line_end":252,"column_start":26,"column_end":30},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":3050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":393753,"byte_end":393757,"line_start":338,"line_end":338,"column_start":39,"column_end":43},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3050},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":394867,"byte_end":394871,"line_start":380,"line_end":380,"column_start":37,"column_end":41},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":7827},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":396902,"byte_end":396907,"line_start":452,"line_end":452,"column_start":37,"column_end":42},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":7842},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":399410,"byte_end":399414,"line_start":543,"line_end":543,"column_start":18,"column_end":22},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":7859},"to":{"krate":2,"index":2810}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":399488,"byte_end":399492,"line_start":549,"line_end":549,"column_start":23,"column_end":27},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":7859},"to":{"krate":2,"index":7079}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":401215,"byte_end":401220,"line_start":618,"line_end":618,"column_start":40,"column_end":45},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":7901},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":403316,"byte_end":403322,"line_start":693,"line_end":693,"column_start":40,"column_end":46},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":7921},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":406430,"byte_end":406438,"line_start":801,"line_end":801,"column_start":40,"column_end":48},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":7941},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":408516,"byte_end":408525,"line_start":875,"line_end":875,"column_start":40,"column_end":49},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":7959},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":411748,"byte_end":411755,"line_start":982,"line_end":982,"column_start":38,"column_end":45},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":7977},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":414372,"byte_end":414379,"line_start":1072,"line_end":1072,"column_start":38,"column_end":45},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":7992},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":416798,"byte_end":416807,"line_start":1147,"line_end":1147,"column_start":37,"column_end":46},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":8005},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":421069,"byte_end":421080,"line_start":1270,"line_end":1270,"column_start":40,"column_end":51},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":8038},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":424887,"byte_end":424894,"line_start":1384,"line_end":1384,"column_start":37,"column_end":44},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3248},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/repeat.rs","byte_start":428804,"byte_end":428811,"line_start":1495,"line_end":1495,"column_start":43,"column_end":50},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3270},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":433065,"byte_end":433078,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3346},"to":{"krate":2,"index":2810}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":433226,"byte_end":433239,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":450564,"byte_end":450568,"line_start":499,"line_end":499,"column_start":39,"column_end":43},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":9770},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":451744,"byte_end":451748,"line_start":547,"line_end":547,"column_start":39,"column_end":43},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":9787},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":453476,"byte_end":453480,"line_start":617,"line_end":617,"column_start":40,"column_end":44},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":9854},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":456000,"byte_end":456011,"line_start":707,"line_end":707,"column_start":40,"column_end":51},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":9869},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/sequence.rs","byte_start":458719,"byte_end":458726,"line_start":804,"line_end":804,"column_start":40,"column_end":47},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":9884},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":461727,"byte_end":461730,"line_start":17,"line_end":17,"column_start":31,"column_end":34},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":9899},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":463089,"byte_end":463096,"line_start":73,"line_end":73,"column_start":34,"column_end":41},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":9908},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":464197,"byte_end":464207,"line_start":121,"line_end":121,"column_start":37,"column_end":47},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":9920},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":465594,"byte_end":465599,"line_start":179,"line_end":179,"column_start":31,"column_end":36},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":9932},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":466713,"byte_end":466719,"line_start":230,"line_end":230,"column_start":40,"column_end":46},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":9941},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":469950,"byte_end":469959,"line_start":334,"line_end":334,"column_start":37,"column_end":46},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":9956},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":472803,"byte_end":472811,"line_start":431,"line_end":431,"column_start":31,"column_end":39},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":9968},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":473858,"byte_end":473863,"line_start":477,"line_end":477,"column_start":34,"column_end":39},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":9976},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":475110,"byte_end":475116,"line_start":530,"line_end":530,"column_start":34,"column_end":40},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":9988},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":476558,"byte_end":476563,"line_start":581,"line_end":581,"column_start":34,"column_end":39},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":10000},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":477309,"byte_end":477316,"line_start":616,"line_end":616,"column_start":37,"column_end":44},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":10013},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/token.rs","byte_start":478172,"byte_end":478175,"line_start":652,"line_end":652,"column_start":31,"column_end":34},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":10026},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":241747,"byte_end":241753,"line_start":961,"line_end":961,"column_start":38,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":3607},"to":{"krate":0,"index":3677}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":244040,"byte_end":244041,"line_start":1032,"line_end":1032,"column_start":38,"column_end":39},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3683},"to":{"krate":0,"index":3677}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":245542,"byte_end":245545,"line_start":1093,"line_end":1093,"column_start":34,"column_end":37},"kind":{"Impl":{"id":238}},"from":{"krate":5,"index":195},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":245806,"byte_end":245810,"line_start":1104,"line_end":1104,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2842},"to":{"krate":0,"index":3692}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":247267,"byte_end":247276,"line_start":1152,"line_end":1152,"column_start":20,"column_end":29},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":10049},"to":{"krate":0,"index":3692}},{"span":{"file_name":"/home/kingfisher/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.1/src/parser/mod.rs","byte_start":247856,"byte_end":247867,"line_start":1180,"line_end":1180,"column_start":20,"column_end":31},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":10054},"to":{"krate":0,"index":3692}}]}